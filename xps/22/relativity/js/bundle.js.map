{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","client/glsl/fs-arc.glsl","client/glsl/fs-buffer-particles.glsl","client/glsl/fs-copy.glsl","client/glsl/fs-create-positions.glsl","client/glsl/fs-hatching.glsl","client/glsl/fs-update-positions.glsl","client/glsl/vs-buffer-particles.glsl","client/glsl/vs-create-positions.glsl","client/glsl/vs-hatching.glsl","client/glsl/vs-regular-projection.glsl","client/glsl/vs-simple-quad.glsl","client/js/app/Main.js","client/js/app/app.js","client/js/app/audio/Audio.js","client/js/app/path/Path.js","client/js/app/path/PathType.js","client/js/app/path/Paths.js","client/js/app/path/PortalPath.js","client/js/app/path/PortalRTT.js","client/js/app/socket/Socket.js","client/js/app/ui/DirectionHelper.js","client/js/app/ui/DirectionPoint.js","client/js/app/utils/BaseGLPass.js","client/js/app/utils/DebugPanel.js","client/js/app/utils/Simulator.js","client/js/app/view/Character.js","client/js/app/view/EnviroView.js","client/js/app/view/GarlandView.js","client/js/app/view/IntroView.js","client/js/app/view/LoaderView.js","client/js/app/view/PlaneView.js","client/js/app/view/PlanesController.js","client/js/app/view/SimpleStairsView.js","client/js/app/view/View.js"],"names":[],"mappings":"AAAA;ACAA;AACA;;ACDA;AACA;;ACDA;AACA;;ACDA;AACA;;ACDA;AACA;;ACDA;AACA;;ACDA;AACA;;ACDA;AACA;;ACDA;AACA;;ACDA;AACA;;ACDA;AACA;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjlflpKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5OA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACltjvPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpxfile":"bundle.js","sourceRoot":"/source/","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","module.exports = \"uniform vec4 color;\\nuniform vec4 colorInside;\\nuniform float progress;\\nuniform float alpha;\\n\\nvarying vec2 vUv;\\n\\nvoid main() {\\n\\n    // set pi\\n    float pi = 3.141592653589793238462643383279;\\n    // set transparent color\\n    vec4 cBlack = vec4(0.0, 0.0, 0.0, 0.0);\\n    // set base color\\n    vec4 c = vec4(0.0);\\n\\n    //determine center position\\n    vec2 position = vUv - vec2(0.5);\\n    //determine the vector length of the center position\\n    float len = length(position);\\n    // calculate the angle of the texel to the center\\n    float angle = atan(position.y, position.x);\\n    // get the progress angle in radians\\n    float progressRadians = ( ( 0.5 - (1.0 - progress) ) ) * ( pi * 2.0 );\\n\\n    if( len < 0.25 && len > 0.20 && angle < progressRadians ) {\\n        c =  vec4( color.rgb, alpha );\\n    } else {\\n        if( len < 0.15 && colorInside.a > 0.0 ) {\\n          \\n            c = vec4( colorInside.rgb, alpha );\\n\\n        } else {\\n            c = cBlack;\\n        }\\n    }\\n\\n    gl_FragColor = c;\\n}\";\n","module.exports = \"precision highp float;\\nprecision highp sampler2D;\\n\\nuniform highp sampler2D textureMap;\\n\\nvarying float vColor;\\n\\nvoid main(){\\n    vec4 color = texture2D(textureMap, gl_PointCoord);\\n    if(vColor >= 1.0){\\n        color.a *= 2.0 - vColor;\\n    } else {\\n        color.a *= vColor;\\n    }\\n\\n    color.a *= 0.2;\\n    gl_FragColor = vec4(1.0, 1.0, 1.0, color.a);\\n}\";\n","module.exports = \"precision highp float;\\nprecision highp sampler2D;\\n\\nuniform highp sampler2D textureMap;\\n\\nvarying vec2 vUv;\\n\\nvoid main(){\\n    vec4 color = texture2D(textureMap, vUv);\\n    gl_FragColor = color;\\n}\";\n","module.exports = \"precision highp float;\\n\\nvarying vec3 vPos;\\n\\nvoid main(){\\n    vec3 pos = vPos;\\n    gl_FragColor = vec4(pos, 1.0);\\n}\\n\";\n","module.exports = \"uniform sampler2D hatch1;\\nuniform sampler2D hatch2;\\nuniform sampler2D hatch3;\\nuniform sampler2D hatch4;\\nuniform sampler2D hatch5;\\nuniform sampler2D hatch6;\\nuniform sampler2D paper;\\nuniform sampler2D baked;\\nuniform vec2 resolution;\\nuniform vec2 bkgResolution;\\nuniform vec3 lightPosition;\\n\\nvec3 color = vec3( 1., 0., 1. );\\nvec3 lightColor = vec3( 1. );\\n\\nvarying vec2 vUv;\\nvarying vec2 vUv_baked;\\nvarying vec3 vNormal;\\nvarying float depth;\\nvarying vec3 vPosition;\\nvarying float nDotVP;\\nvarying vec3 pos;\\nvarying vec2 vN;\\n\\nuniform float ambientWeight;\\nuniform float diffuseWeight;\\nuniform float rimWeight;\\nuniform float specularWeight;\\nuniform float shininess;\\nuniform int invertRim;\\nuniform int solidRender;\\nuniform float showOutline;\\nuniform vec4 inkColor;\\n\\nuniform  float fogDensity;\\nuniform float fogNear;\\nuniform float fogFar;\\nuniform vec3 fogColor;\\nuniform float fogType;\\n\\nvec4 shade() {\\n\\n    float diffuse = nDotVP;\\n    float specular = 0.;\\n    float ambient = 1.;\\n\\n    vec3 n = normalize( vNormal );\\n\\n    vec3 r = -reflect(lightPosition, n);\\n    r = normalize(r);\\n    vec3 v = -vPosition.xyz;\\n    v = normalize(v);\\n    float nDotHV = max( 0., dot( r, v ) );\\n\\n    if( nDotVP != 0. ) specular = pow ( nDotHV, shininess );\\n    float rim = max( 0., abs( dot( n, normalize( -vPosition.xyz ) ) ) );\\n    if( invertRim == 1 ) rim = 1. - rim;\\n\\n    float shading = ambientWeight * ambient + diffuseWeight * diffuse + rimWeight * rim + specularWeight * specular;\\n\\n    if( solidRender == 1 ) return vec4( shading );\\n\\n    vec4 c;\\n    float step = 1. / 6.;\\n    if( shading <= step ){\\n        c = mix( texture2D( hatch6, vN ), texture2D( hatch5, vN ), 6. * shading );\\n    }\\n    if( shading > step && shading <= 2. * step ){\\n        c = mix( texture2D( hatch5, vN ), texture2D( hatch4, vN) , 6. * ( shading - step ) );\\n    }\\n    if( shading > 2. * step && shading <= 3. * step ){\\n        c = mix( texture2D( hatch4, vN ), texture2D( hatch3, vN ), 6. * ( shading - 2. * step ) );\\n    }\\n    if( shading > 3. * step && shading <= 4. * step ){\\n        c = mix( texture2D( hatch3, vN ), texture2D( hatch2, vN ), 6. * ( shading - 3. * step ) );\\n    }\\n    if( shading > 4. * step && shading <= 5. * step ){\\n        c = mix( texture2D( hatch2, vN ), texture2D( hatch1, vN ), 6. * ( shading - 4. * step ) );\\n    }\\n    if( shading > 5. * step ){\\n        c = mix( texture2D( hatch1, vN ), vec4( 1. ), 6. * ( shading - 5. * step ) );\\n    }\\n\\n    vec4 src = mix( mix( inkColor, vec4( 1. ), c.r ), c, .5 );\\n    //c = 1. - ( 1. - src ) * ( 1. - dst );\\n    //c = vec4( min( src.r, dst.r ), min( src.g, dst.g ), min( src.b, dst.b ), 1. );\\n\\n    //c = vec4( gl_FragCoord.x / resolution.x, gl_FragCoord.y / resolution.y, 0., 1. );\\n\\n    return src;\\n}\\n\\nvoid main() {\\n\\n    vec2 nUV = vec2( mod( gl_FragCoord.x, bkgResolution.x ) / bkgResolution.x, mod( gl_FragCoord.y, bkgResolution.y ) / bkgResolution.y );\\n    vec4 dst = vec4( texture2D( paper, nUV ).rgb, 1. );\\n    vec4 src;\\n\\n    //if( showOutline == 1 ) src = .5 * inkColor;\\n    //else src = shade();\\n    src = ( .5 * inkColor ) * vec4( showOutline ) + vec4( 1. - showOutline ) * shade();\\n\\n    vec4 c = src * dst;\\n\\n    c *= texture2D( baked, vUv_baked );\\n\\n    // FOG\\n\\n    float depth = gl_FragCoord.z / gl_FragCoord.w;\\n    float fogFactor = 0.0;\\n\\n    if ( fogType == 1.0 ) {\\n\\n    \\tfogFactor = smoothstep( fogNear, fogFar, depth );\\n\\n    } else {\\n\\n    \\tconst float LOG2 = 1.442695;\\n    \\tfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\\n    \\tfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\\n\\n    }\\n\\n    vec4 fog_color = mix( c, vec4( fogColor, gl_FragColor.w ), fogFactor );\\n\\n\\n    gl_FragColor = vec4( fog_color.rgb, 1. );\\n}\";\n","module.exports = \"precision highp float;\\nprecision highp sampler2D;\\n\\nuniform sampler2D uPrevPositionsMap;\\nuniform sampler2D uGeomPositionsMap;\\nuniform float uTime;\\n\\nvarying vec2 vUv;\\n\\nconst int OCTAVES = 8;\\n\\nvec4 mod289(vec4 x) {\\n    vec4 r = x - floor(x * (1.0 / 289.0)) * 289.0;\\n    return r;\\n}\\n\\nfloat mod289(float x) {\\n    float r = x - floor(x * (1.0 / 289.0)) * 289.0;\\n    return r;\\n}\\n\\nvec4 permute(vec4 x) {\\n    vec4 r = mod289(((x*34.0)+1.0)*x);\\n    return r;\\n}\\n\\nfloat permute(float x) {\\n    float r = mod289(((x*34.0)+1.0)*x);\\n    return r;\\n}\\n\\nvec4 taylorInvSqrt(vec4 r) {\\n    vec4 f = 1.79284291400159 - 0.85373472095314 * r;\\n    return f;\\n}\\n\\nfloat taylorInvSqrt(float r) {\\n    float f = 1.79284291400159 - 0.85373472095314 * r;\\n    return f;\\n}\\n\\nvec4 grad4(float j, vec4 ip) {\\n    const vec4 ones = vec4(1.0, 1.0, 1.0, -1.0);\\n    vec4 p,s;\\n\\n    p.xyz = floor( fract (vec3(j) * ip.xyz) * 7.0) * ip.z - 1.0;\\n    p.w = 1.5 - dot(abs(p.xyz), ones.xyz);\\n    s = vec4(lessThan(p, vec4(0.0)));\\n    p.xyz = p.xyz + (s.xyz*2.0 - 1.0) * s.www;\\n\\n    return p;\\n}\\n\\nvec4 simplexNoiseDerivatives (vec4 v) {\\n    const vec4  C = vec4( 0.138196601125011,0.276393202250021,0.414589803375032,-0.447213595499958);\\n\\n    vec4 i  = floor(v + dot(v, vec4(0.309016994374947451)) );\\n    vec4 x0 = v -   i + dot(i, C.xxxx);\\n\\n    vec4 i0;\\n    vec3 isX = step( x0.yzw, x0.xxx );\\n    vec3 isYZ = step( x0.zww, x0.yyz );\\n    i0.x = isX.x + isX.y + isX.z;\\n    i0.yzw = 1.0 - isX;\\n    i0.y += isYZ.x + isYZ.y;\\n    i0.zw += 1.0 - isYZ.xy;\\n    i0.z += isYZ.z;\\n    i0.w += 1.0 - isYZ.z;\\n\\n    vec4 i3 = clamp( i0, 0.0, 1.0 );\\n    vec4 i2 = clamp( i0-1.0, 0.0, 1.0 );\\n    vec4 i1 = clamp( i0-2.0, 0.0, 1.0 );\\n\\n    vec4 x1 = x0 - i1 + C.xxxx;\\n    vec4 x2 = x0 - i2 + C.yyyy;\\n    vec4 x3 = x0 - i3 + C.zzzz;\\n    vec4 x4 = x0 + C.wwww;\\n\\n    i = mod289(i);\\n    float j0 = permute( permute( permute( permute(i.w) + i.z) + i.y) + i.x);\\n    vec4 j1 = permute( permute( permute( permute (\\n                        i.w + vec4(i1.w, i2.w, i3.w, 1.0 ))\\n                      + i.z + vec4(i1.z, i2.z, i3.z, 1.0 ))\\n                      + i.y + vec4(i1.y, i2.y, i3.y, 1.0 ))\\n                      + i.x + vec4(i1.x, i2.x, i3.x, 1.0 ));\\n\\n\\n    vec4 ip = vec4(1.0/294.0, 1.0/49.0, 1.0/7.0, 0.0) ;\\n\\n    vec4 p0 = grad4(j0,   ip);\\n    vec4 p1 = grad4(j1.x, ip);\\n    vec4 p2 = grad4(j1.y, ip);\\n    vec4 p3 = grad4(j1.z, ip);\\n    vec4 p4 = grad4(j1.w, ip);\\n\\n    vec4 norm = taylorInvSqrt(vec4(dot(p0,p0), dot(p1,p1), dot(p2, p2), dot(p3,p3)));\\n    p0 *= norm.x;\\n    p1 *= norm.y;\\n    p2 *= norm.z;\\n    p3 *= norm.w;\\n    p4 *= taylorInvSqrt(dot(p4,p4));\\n\\n    vec3 values0 = vec3(dot(p0, x0), dot(p1, x1), dot(p2, x2)); //value of contributions from each corner at point\\n    vec2 values1 = vec2(dot(p3, x3), dot(p4, x4));\\n\\n    vec3 m0 = max(0.5 - vec3(dot(x0,x0), dot(x1,x1), dot(x2,x2)), 0.0); //(0.5 - x^2) where x is the distance\\n    vec2 m1 = max(0.5 - vec2(dot(x3,x3), dot(x4,x4)), 0.0);\\n\\n    vec3 temp0 = -6.0 * m0 * m0 * values0;\\n    vec2 temp1 = -6.0 * m1 * m1 * values1;\\n\\n    vec3 mmm0 = m0 * m0 * m0;\\n    vec2 mmm1 = m1 * m1 * m1;\\n\\n    float dx = temp0[0] * x0.x + temp0[1] * x1.x + temp0[2] * x2.x + temp1[0] * x3.x + temp1[1] * x4.x + mmm0[0] * p0.x + mmm0[1] * p1.x + mmm0[2] * p2.x + mmm1[0] * p3.x + mmm1[1] * p4.x;\\n    float dy = temp0[0] * x0.y + temp0[1] * x1.y + temp0[2] * x2.y + temp1[0] * x3.y + temp1[1] * x4.y + mmm0[0] * p0.y + mmm0[1] * p1.y + mmm0[2] * p2.y + mmm1[0] * p3.y + mmm1[1] * p4.y;\\n    float dz = temp0[0] * x0.z + temp0[1] * x1.z + temp0[2] * x2.z + temp1[0] * x3.z + temp1[1] * x4.z + mmm0[0] * p0.z + mmm0[1] * p1.z + mmm0[2] * p2.z + mmm1[0] * p3.z + mmm1[1] * p4.z;\\n    float dw = temp0[0] * x0.w + temp0[1] * x1.w + temp0[2] * x2.w + temp1[0] * x3.w + temp1[1] * x4.w + mmm0[0] * p0.w + mmm0[1] * p1.w + mmm0[2] * p2.w + mmm1[0] * p3.w + mmm1[1] * p4.w;\\n\\n    return vec4(dx, dy, dz, dw) * 49.0;\\n}\\n\\nvec3 getCurlVelocity( vec4 position ) {\\n\\n    float NOISE_TIME_SCALE = 0.1;\\n    float NOISE_SCALE = 0.02;\\n    float NOISE_POSITION_SCALE = 0.0025;\\n\\n    vec3 oldPosition = position.rgb;\\n    vec3 noisePosition = oldPosition *  NOISE_POSITION_SCALE;\\n\\n    float noiseTime = NOISE_TIME_SCALE;\\n\\n    vec4 xNoisePotentialDerivatives = vec4(0.0);\\n    vec4 yNoisePotentialDerivatives = vec4(0.0);\\n    vec4 zNoisePotentialDerivatives = vec4(0.0);\\n\\n    float persistence = 0.54;\\n\\n    for (int i = 0; i < OCTAVES; ++i) {\\n        float scale = (1.0 / 2.0) * pow(2.0, float(i));\\n\\n        float noiseScale = pow(persistence, float(i));\\n\\n        xNoisePotentialDerivatives += simplexNoiseDerivatives(vec4(noisePosition * pow(2.0, float(i)), noiseTime)) * noiseScale * scale;\\n        yNoisePotentialDerivatives += simplexNoiseDerivatives(vec4((noisePosition + vec3(123.4, 129845.6, -1239.1)) * pow(2.0, float(i)), noiseTime)) * noiseScale * scale;\\n        zNoisePotentialDerivatives += simplexNoiseDerivatives(vec4((noisePosition + vec3(-9519.0, 9051.0, -123.0)) * pow(2.0, float(i)), noiseTime)) * noiseScale * scale;\\n    }\\n\\n    //compute curl\\n    vec3 noiseVelocity = vec3(\\n                              zNoisePotentialDerivatives[1] - yNoisePotentialDerivatives[2],\\n                              xNoisePotentialDerivatives[2] - zNoisePotentialDerivatives[0],\\n                              yNoisePotentialDerivatives[0] - xNoisePotentialDerivatives[1]\\n                              ) * NOISE_SCALE;\\n    return noiseVelocity;\\n}\\n\\nvoid main () {\\n\\n    vec2 uv = vUv;\\n\\n    vec4 geomPositions = texture2D(uGeomPositionsMap, uv);\\n    vec4 data = texture2D(uPrevPositionsMap, uv);\\n\\n    vec3 noiseVelocity = getCurlVelocity( data );\\n\\n    vec3 vel = noiseVelocity;\\n    vec3 dir = vec3( uTime * 0.1, -0.10, 0.0 );\\n    vec3 newPosition = ( data.rgb + vel + dir );\\n\\n    if( newPosition.y < -150.5 || newPosition.y > 150.0 || newPosition.x < -150.0 || newPosition.x > 150.0 || newPosition.z < -150.0 || newPosition.z > 150.0) newPosition = geomPositions.rgb;\\n\\n    gl_FragColor = vec4(newPosition, 1.0);\\n}\\n\";\n","module.exports = \"precision highp float;\\nprecision highp sampler2D;\\n\\nattribute vec2 aV2I;\\n\\nuniform highp sampler2D uPositionsT;\\n\\nvarying float vColor;\\n\\nvoid main()\\t{\\n\\n    vec2 ind = aV2I;\\n    vec4 pos = vec4(texture2D( uPositionsT, ind ).rgb, 1.0) ;\\n    \\n    vec4 mvPosition = modelViewMatrix * pos;\\n    vColor = texture2D( uPositionsT, ind ).a;\\n    float incrementSize = (1.0 - clamp(vColor, 0.0, 1.0)) * 5.0;\\n\\n    gl_PointSize = pow( min( 150.0, .1 * ( 150.0 / length( mvPosition.xyz ) ) ), 2.0 ) + 5.0;\\n    gl_Position = projectionMatrix * modelViewMatrix * pos;\\n}\";\n","module.exports = \"precision highp float;\\nprecision highp sampler2D;\\n\\nattribute vec2 aV2I;\\n\\nuniform float uGeomToDraw;\\n\\nvarying vec3 vPos;\\n\\nvoid main() {\\n\\n    vec4 gridPos = vec4(2.0 * aV2I - vec2(1.0), 0.0, 1.0);\\n\\n    if( uGeomToDraw == 0.0 ) vPos = gridPos.rgb;\\n    if( uGeomToDraw == 1.0 ) vPos = position;\\n\\n    gl_PointSize = 1.0;\\n    gl_Position = gridPos;\\n}\\n\";\n","module.exports = \"varying vec3 vNormal;\\nvarying vec2 vUv;\\nvarying vec2 vUv_baked;\\nvarying float depth;\\nvarying vec3 vPosition;\\nvarying float nDotVP;\\nvarying vec3 pos;\\nvarying vec2 vN;\\n\\nuniform vec2 repeat;\\nuniform vec3 lightPosition;\\nuniform float showOutline;\\nuniform mat4 fixedMatrix;\\n\\nvoid main() {\\n\\n    float w = 1.;\\n    vec3 posInc = vec3( 0. );\\n    if( showOutline == 1. ) posInc = w * normal;\\n\\n\\n\\n    vUv = repeat * uv;\\n    vUv_baked = uv;\\n\\n    vec4 mvPosition = modelViewMatrix * vec4( position + posInc, 1.0 );\\n    vPosition = mvPosition.xyz;\\n    gl_Position = projectionMatrix * mvPosition;\\n    pos = gl_Position.xyz;\\n\\n    vNormal = normalMatrix * normal;\\n    depth = ( length( position.xyz ) / 90. );\\n    depth = .5 + .5 * depth;\\n\\n    nDotVP = max( 0., dot( vNormal, normalize( vec3( lightPosition ) ) ) );\\n\\n    mat4 fixed_m = fixedMatrix;\\n    mat3 m3 = mat3(1., 2.,  3., 4., 3., 4.,  3., 4., 0.);\\n    vec3 e = normalize( vec3( fixed_m * vec4( position, 1.0 ) ) );\\n    vec3 n = normalize( m3 * normal );\\n    vec3 r = reflect( e, n );\\n    float m = 2. * sqrt( pow( r.x, 2. ) + pow( r.y, 2. ) + pow( r.z + 1., 2. ) );\\n    vN = (r.xy / m + .5 ) * repeat;\\n\\n}\";\n","module.exports = \"varying vec2 vUv;\\n\\nvoid main() {\\n\\n    vUv = uv;\\n\\n    vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\\n    gl_Position = projectionMatrix * mvPosition;\\n}\";\n","module.exports = \"varying vec2 vUv;\\nvoid main() {\\n    vUv = uv;\\n    gl_Position = vec4( position, 1.0 );\\n}\";\n","/**\n * Created by felixmorenomartinez on 11/01/15.\n */\n\n'use strict';\n\nvar View = require('./view/View');\nvar Socket = require('./socket/Socket');\n\nvar Main = function () {\n\n    this.socket = null;\n    this.view = null;\n};\n\nMain.prototype.startApp = function () {\n\n    this.socket = new Socket();\n    this.view = new View(this.socket);\n    this.init();\n\n};\n\nMain.prototype.init = function (e) {\n\n    var el = window;\n    el.addEventListener('resize', this.onResize.bind(this));\n    this.view.init();\n\n};\n\nMain.prototype.onResize = function (e) {\n\n    this.view.resize(window.innerWidth, window.innerHeight);\n\n};\n\nmodule.exports = Main;","/**\n * Created by siroko on 12/13/15.\n */\nvar Main = require('./Main.js');\n\nwindow.DEBUG_MODE  = false;\nwindow.IS_DESKTOP  = false;\nwindow.NO_HATCHING = false;\n\nvar ua = navigator.userAgent.toLowerCase();\nwindow.isGenericAndroid = (ua.indexOf(\"android\") > -1);\nwindow.isAndroid = (ua.indexOf(\"nexus 5\") > -1) || (ua.indexOf(\"nexus 4\") > -1) || (ua.indexOf(\"gt-i9505\") > -1) || (ua.indexOf(\"gt-i9300\") > -1) || (ua.indexOf(\"gt-n7100\") > -1) || (ua.indexOf(\"sm-n900t\") > -1);\n//window.isAndroid = true;\nvar getQueryParams = function ( qs ) {\n\n    qs = qs.split(\"+\").join(\" \");\n\n    var params  = {},\n        tokens  = null,\n        re      = /[?&]?([^=]+)=([^&]*)/g;\n\n    while ( tokens = re.exec( qs ) ) {\n\n        params[ decodeURIComponent( tokens[ 1 ] ) ] = decodeURIComponent( tokens[ 2 ] );\n    }\n\n    return params;\n}\n\nvar params = getQueryParams( document.location.search );\nwindow.IS_DESKTOP = typeof params.desktop !== 'undefined';\nwindow.NO_HATCHING = typeof params.noHatching !== 'undefined';\n\nwindow.app = new Main();","'use strict';\n\n// ------------------------------------------\n// Audio.js\n// ------------------------------------------\n//\n// Sound controller using Howler.js\n// https://github.com/goldfire/howler.js/\n//\n// ------------------------------------------\n\nvar Audio = function ( opts ) {\n\n    THREE.EventDispatcher.call( this );\n\n    this.view           = opts.view;\n    this.callback       = opts.callback || function () {};\n\n    this.toggleAudioEl  = null;\n    this.isPlaying      = false;\n    this.loadedSounds   = 0;\n    this.totalSounds    = 2;\n    this.sounds         = {\n\n        music   : {\n\n            url     : 'assets/audio/music-xmas.mp3',\n            loop    : true,\n            volume  : 0.8,\n            howl    : null,\n            type    : 'MUSIC'\n        },\n\n        fx1    : {\n\n            url     : 'assets/audio/fx1.mp3',\n            loop    : false,\n            howl    : null,\n            type    : 'FX',\n            volume  : 0.5\n        },\n\n        fx2    : {\n\n            url     : 'assets/audio/fx2.mp3',\n            loop    : false,\n            howl    : null,\n            type    : 'FX',\n            volume  : 0.8\n        }\n    };\n\n    this.init();\n};\n\nAudio.prototype = Object.create( THREE.EventDispatcher.prototype );\n\n\nAudio.prototype.init = function () {\n\n    this.toggleAudioEl  = document.querySelector( '#audio-toggle' );\n    this.createSounds();\n};\n\nAudio.prototype.createSounds = function () {\n\n    for ( var soundName in this.sounds ) {\n\n        var sound = this.sounds[ soundName ];\n        sound.howl = new Howl( {\n\n            urls    : [ sound.url ],\n            loop    : sound.loop,\n            volume  : sound.volume || 1.0,\n            onload  : ( sound.type === 'MUSIC' )? this.loadedMusic.bind( this ) : this.loadedSound.bind( this )\n\n        } );\n    }\n};\n\n\n// Preload\n// ---------------------------------------------------\n\nAudio.prototype.loadedSound = function () {\n\n    this.loadedSounds++;\n    if ( this.loadedSounds === this.totalSounds ) this.onLoadedSounds();\n};\n\nAudio.prototype.onLoadedSounds = function () {\n\n    this.callback();\n};\n\nAudio.prototype.loadedMusic = function () {\n\n    this.showEl();\n    this.addEventListeners();\n    this.playEl();\n\n    this.dispatchEvent( { type: 'loaded' } );\n};\n\n\n// Fade in / out general volume\n// ---------------------------------------------------\n\nAudio.prototype.fadeInVolume = function () {\n\n    this.fadeVolume( 1.0, 2.0 );\n};\n\nAudio.prototype.fadeOutVolume = function () {\n\n    this.fadeVolumeTo( 0.0, 1.0 );\n};\n\nAudio.prototype.fadeVolumeTo = function ( volumeEnd, duration ) {\n\n    var soundRange      = { volume : Howler.volume() },\n        durationFade    = duration || 1.0;\n\n    TweenMax.to( soundRange, durationFade, {\n\n        volume      : volumeEnd,\n        ease        : Power2.easeOut,\n        onUpdate    : ( function () {\n\n            Howler.volume( soundRange.volume );\n\n        } ).bind( this )\n    } );\n};\n\n\n// Specific sound API\n// ---------------------------------------------------\n\nAudio.prototype.playBackgroundMusic = function () {\n\n    this.sounds.music.howl.fadeIn( this.sounds.music.volume, 2000 );\n};\n\nAudio.prototype.pauseBackgroundMusic = function () {\n\n    this.sounds.music.howl.fadeOut( 0.0, 1000 );\n};\n\nAudio.prototype.playFx = function ( numFx ) {\n\n    this.sounds[ 'fx' + numFx ].howl.play();\n};\n\n\n// Events\n// ---------------------------------------------------\n\nAudio.prototype.addEventListeners = function () {\n\n    this.toggleAudioEl.addEventListener( 'click', this.onClickToggle.bind( this ), false );\n};\n\nAudio.prototype.onClickToggle = function ( event ) {\n\n    event.preventDefault();\n\n    if ( !this.isPlaying ) this.playEl();\n    else this.pauseEl();\n};\n\n\n// Dom element\n// ---------------------------------------------------\n\nAudio.prototype.showEl = function () {\n\n    this.toggleAudioEl.classList.add( 'visible' );\n};\n\nAudio.prototype.playEl = function () {\n\n    this.isPlaying = true;\n    this.playBackgroundMusic();\n    this.toggleAudioEl.classList.add( 'playing' );\n};\n\nAudio.prototype.pauseEl = function () {\n\n    this.isPlaying = false;\n    this.pauseBackgroundMusic();\n    this.toggleAudioEl.classList.remove( 'playing' );\n};\n\nmodule.exports = Audio;","'use strict';\n\nvar PathType = require('./PathType');\nvar DirectionPoint = require('../ui/DirectionPoint');\n\n// Path\n// ------------------------------------------------------------\n// A segment of 2+ points where the user moves at a\n// constant speed.\n// It contains a start and end point where we will create\n// a couple of DirectPoints to use them as triggers to\n// move through the path.\n// ------------------------------------------------------------\n\nvar Path = function (view, points, type) {\n\n    THREE.EventDispatcher.call(this);\n\n    this.view = view;\n    this.type = ( type ) ? type : PathType.PATH;\n    this.mesh = null;\n\n    this.points = points;\n    this.startPoint = this.points[0];\n    this.endPoint = this.points[this.points.length - 1];\n\n    this.startDirectionPoint = null;\n    this.endDirectionPoint = null;\n    this.directionPoints = [];\n    this.DIRECTION_POINT_OFFSET = 5;\n\n    this.distances = [];\n    this.totalDistance = 0;\n    this.times = [];\n    this.totalTime = 0;\n    this.TIME_PER_UNIT = 0.1;\n\n    this.timeline = null;\n    this.direction = null;\n\n    this.debug = false;\n    this.msgNoVREl = document.getElementById('auto-camera');\n\n    this.init();\n};\n\nPath.prototype = Object.create(THREE.EventDispatcher.prototype);\n\n\n// Initialization\n// ------------------------------------------------------------\n\nPath.prototype.init = function () {\n\n    this.totalDistance = this.getTotalDistance();\n    this.totalTime = this.totalDistance * this.TIME_PER_UNIT;\n    this.createTimeline();\n\n    this.createDirectionPoints();\n    this.createMesh();\n};\n\nPath.prototype.createMesh = function () {\n\n    var geometry = new THREE.Geometry();\n\n    for (var i = 0; i < this.points.length; i++) {\n\n        var point = ( i === 0 ) ? this.startDirectionPoint.position :\n            ( i === this.points.length - 1 ) ? this.endDirectionPoint.position :\n                this.points[i];\n\n        geometry.vertices.push(point);\n    }\n\n    var material = new THREE.LineBasicMaterial({color: Math.random() * 0xffffff, linewidth: 4});\n\n    this.mesh = new THREE.Line(geometry, material);\n    this.mesh.userData.noIntersection = true;\n\n    if (this.debug) this.view.container.add(this.mesh);\n};\n\nPath.prototype.createDirectionPoints = function () {\n\n    // the start & end points are offsetted DIRECTION_POINT_OFFSET units in the direction of the line\n\n    var startToEnd = ( this.points[1].clone().sub(this.startPoint.clone()) ).normalize().multiplyScalar(this.DIRECTION_POINT_OFFSET),\n        startDP = this.startPoint.clone().add(startToEnd),\n        endToStart = ( this.points[this.points.length - 2].clone().sub(this.endPoint.clone()) ).normalize().multiplyScalar(this.DIRECTION_POINT_OFFSET),\n        endDP = this.endPoint.clone().add(endToStart);\n\n    this.startDirectionPoint = new DirectionPoint(this.view.container, startDP, this, startToEnd);\n    this.endDirectionPoint = new DirectionPoint(this.view.container, endDP, this, endToStart);\n\n    this.directionPoints.push(this.startDirectionPoint);\n    this.directionPoints.push(this.endDirectionPoint);\n};\n\n\n// Add / remove from scene\n// ------------------------------------------------------------\n\nPath.prototype.addInScene = function () {\n\n    if (this.debug) this.view.container.add(this.mesh);\n\n    this.startDirectionPoint.addInScene();\n    this.endDirectionPoint.addInScene();\n};\n\nPath.prototype.removeFromScene = function () {\n\n    if (this.debug) this.view.container.remove(this.mesh);\n\n    this.startDirectionPoint.removeFromScene();\n    this.endDirectionPoint.removeFromScene();\n};\n\n\n// Enable / disable\n// ------------------------------------------------------------\n\nPath.prototype.enable = function (directionPoint) {\n\n\n};\n\nPath.prototype.disable = function (directionPoint) {\n\n};\n\n\n// Move in path\n// ------------------------------------------------------------\n\nPath.prototype.createTimeline = function () {\n\n    var cameraPosition = this.view.camera.position.clone();\n\n    this.timeline = new TimelineMax({paused: true});\n\n    for (var i = 0; i < ( this.points.length - 1 ); i++) {\n\n        var tween = TweenMax.fromTo(this.view.camera.position, this.times[i], {\n\n            x: this.points[i].x,\n            y: this.points[i].y,\n            z: this.points[i].z\n        }, {\n\n            x: this.points[i + 1].x,\n            y: this.points[i + 1].y,\n            z: this.points[i + 1].z,\n            ease: Linear.easeNone\n        });\n\n        this.timeline.add(tween);\n\n        TweenMax.set(this.view.camera.position, {\n\n            x: cameraPosition.x,\n            y: cameraPosition.y,\n            z: cameraPosition.z\n        });\n    }\n};\n\nPath.prototype.onStartMovement = function (point) {\n\n    this.dispatchEvent({type: 'pathStart', path: this, directionPoint: point});\n};\n\nPath.prototype.onCompleteMovement = function () {\n\n    if (!this.view.isVR) {\n\n        TweenMax.to(this.view.controls.target, 0.5, {\n\n            x: this.view.camera.position.x + this.direction.x * 0.5,\n            y: this.view.camera.position.y + this.direction.y * 0.5,\n            z: this.view.camera.position.z + this.direction.z * 0.5,\n            ease: Linear.none,\n            onComplete: ( function () {\n\n                this.view.controls.enabled = true;\n                this.msgNoVREl.classList.remove('active');\n\n                this.dispatchEvent({type: 'pathEnd', path: this});\n\n            } ).bind(this)\n        });\n\n    } else {\n\n        setTimeout(( function () {\n\n            this.dispatchEvent({type: 'pathEnd', path: this});\n\n        } ).bind(this), 500);\n    }\n};\n\nPath.prototype.moveInPathFrom = function (point) {\n\n    this.onStartMovement(point);\n\n    var startPercentage = ( point === this.startDirectionPoint ) ? 0 : 1,\n        endPercentage = ( point === this.startDirectionPoint ) ? 1 : 0;\n\n    if (!this.view.isVR) {\n\n        this.view.controls.enabled = false;\n        this.msgNoVREl.classList.add('active');\n\n        TweenMax.to(this.view.controls.target, 1.0, {\n\n            x: point.mesh.position.x,\n            y: point.mesh.position.y,\n            z: point.mesh.position.z,\n            ease: Power2.easeInOut,\n            onComplete: ( function () {\n\n                this.movePath(startPercentage, endPercentage, this.onCompleteMovement.bind(this));\n\n            } ).bind(this)\n        });\n\n    } else {\n\n        setTimeout(( function () {\n\n            this.movePath(startPercentage, endPercentage, this.onCompleteMovement.bind(this));\n\n        } ).bind(this), 500);\n    }\n\n    setTimeout(( function () {\n        this.view.audio.playFx(2);\n    } ).bind(this), 1000);\n};\n\nPath.prototype.movePath = function (startPercentage, endPercentage, onComplete) {\n\n    var previousPoint = ( this.view.isVR ) ? null : null,\n        onUpdateNoVR = function () {\n\n            if ( previousPoint !== null ) {\n\n                this.direction = this.view.camera.position.clone().sub(previousPoint).normalize();\n                var direction = this.direction.clone().multiplyScalar(5);\n\n                this.view.controls.target.x += ( ( this.view.camera.position.x + direction.x ) - this.view.controls.target.x ) / 10;\n                this.view.controls.target.y += ( ( this.view.camera.position.y + direction.y ) - this.view.controls.target.y ) / 10;\n                this.view.controls.target.z += ( ( this.view.camera.position.z + direction.z ) - this.view.controls.target.z ) / 10;\n            }\n\n            previousPoint = this.view.camera.position.clone();\n        },\n        onUpdate = ( this.view.isVR ) ? function () {\n        } : onUpdateNoVR;\n\n    var startTime = ( startPercentage === 0 ) ? 0 : this.totalTime,\n        endTime = ( startPercentage === 0 ) ? this.totalTime : 0;\n\n    this.timeline.tweenFromTo(startTime, endTime, {\n\n        ease: Linear.none,\n        onUpdate: onUpdate.bind(this),\n        onComplete: onComplete\n        //,delay: 0.15\n    });\n};\n\n\n// Distance check\n// ------------------------------------------------------------\n\nPath.prototype.isCloseToUser = function (userPosition, maxDistance) {\n\n    if (this.isCloseToStart(userPosition, maxDistance)) {\n\n        return {path: this, directionPoint: this.startDirectionPoint};\n\n    } else if (this.isCloseToEnd(userPosition, maxDistance)) {\n\n        return {path: this, directionPoint: this.endDirectionPoint};\n    }\n\n    return false;\n};\n\nPath.prototype.isCloseToStart = function (userPosition, maxDistance) {\n\n    var distance = this.getDistanceFromTo(userPosition, this.startDirectionPoint.position);\n\n    return ( distance < maxDistance );\n};\n\nPath.prototype.isCloseToEnd = function (userPosition, maxDistance) {\n\n    var distance = this.getDistanceFromTo(userPosition, this.endDirectionPoint.position);\n\n    return ( distance < maxDistance );\n};\n\nPath.prototype.getTotalDistance = function () {\n\n    var distance = 0;\n\n    for (var i = 0; i < ( this.points.length - 1 ); i++) {\n\n        this.distances[i] = this.getDistanceFromTo(this.points[i], this.points[i + 1]);\n        distance += this.distances[i];\n\n        this.times[i] = this.distances[i] * this.TIME_PER_UNIT;\n    }\n\n    return distance;\n};\n\nPath.prototype.getDistanceFromTo = function (v1, v2) {\n\n    var dx = v1.x - v2.x,\n        dy = v1.y - v2.y,\n        dz = v1.z - v2.z;\n\n    return Math.sqrt(( dx * dx ) + ( dy * dy ) + ( dz * dz ));\n};\n\nmodule.exports = Path;","'use strict';\n\n\n// PathType\n// ------------------------------------------------------------\n// Types of path\n// ------------------------------------------------------------\n\nvar PathType = {\n\n    PATH: 'PATH',\n    PATH_PORTAL: 'PATH_PORTAL'\n};\n\n\nmodule.exports = PathType;","'use strict';\n\nvar PathType = require('./PathType');\nvar Path = require('./Path');\nvar PortalPath = require('./PortalPath');\n\n// Paths\n// ------------------------------------------------------------\n// Collection of path elements\n// ------------------------------------------------------------\n\nvar Paths = function (view, directionHelper, pathsData, pathsIndex) {\n\n    this.view = view;\n    this.directionHelper = directionHelper;\n    this.currentPathsData = pathsData;\n    this.currentPathsIndex = pathsIndex;\n    this.totalPaths = [];\n    this.totalPortalPaths = [];\n    this.paths = [];\n    this.portalPaths = [];\n    this.activePaths = [];\n\n    this.MAX_DISTANCE = 20;\n\n    this._bindedMethods = {\n\n        onPathStart: this._onPathStart.bind(this),\n        onPathEnd: this._onPathEnd.bind(this)\n    }\n\n    this.init();\n};\n\n\n// Initialization\n// ------------------------------------------------------------\n\nPaths.prototype.init = function () {\n\n    this.createPaths();\n\n    // Get a random position from the paths and position the user there\n    this.getRandomPosition();\n};\n\nPaths.prototype.createPaths = function () {\n\n    var i;\n\n    for (i = 0; i <= this.currentPathsIndex; i++) {\n\n        if (this.totalPaths.length < ( i + 1 )) {\n\n            this.totalPaths[i] = [];\n            this.totalPortalPaths[i] = [];\n        }\n    }\n\n    if (this.totalPaths[this.currentPathsIndex].length === 0) {\n\n        for (i = 0; i < this.currentPathsData.length; i++) {\n\n            var path = ( this.currentPathsData[i].type === PathType.PATH ) ?\n                new Path(this.view, this.currentPathsData[i].points) :\n                new PortalPath(this.view, this.currentPathsData[i].points);\n\n            this.totalPaths[this.currentPathsIndex].push(path);\n            if (this.currentPathsData[i].type === PathType.PATH_PORTAL) this.totalPortalPaths[this.currentPathsIndex].push(path);\n        }\n\n    }\n\n    this.paths = this.totalPaths[this.currentPathsIndex];\n    this.portalPaths = this.totalPortalPaths[this.currentPathsIndex];\n\n    this.addPaths();\n};\n\nPaths.prototype.addPaths = function () {\n\n    for (var i = 0; i < this.paths.length; i++) {\n\n        var path = this.paths[i];\n        path.addInScene();\n    }\n};\n\nPaths.prototype.removePaths = function () {\n\n    for (var i = 0; i < this.paths.length; i++) {\n\n        var path = this.paths[i];\n        path.removeFromScene();\n    }\n};\n\n\n// Show / Hide paths\n// ------------------------------------------------------------\n\nPaths.prototype.showPaths = function () {\n\n    this.activePaths = [];\n    this.getActivePaths();\n    this.enableActivePaths();\n};\n\nPaths.prototype.hidePaths = function () {\n\n    this.disableActivePaths();\n    this.activePaths = [];\n};\n\nPaths.prototype.getActivePaths = function () {\n\n    // Based on the current position of the user, a path is active\n    // when the distance to the user is less than MAX_DISTANCE\n\n    var currentPosition = this.view.camera.position;\n\n    for (var i = 0; i < this.paths.length; i++) {\n\n        var activePath = this.paths[i].isCloseToUser(currentPosition, this.MAX_DISTANCE);\n        if (activePath !== false) {\n\n            this.activePaths.push(activePath);\n        }\n    }\n};\n\nPaths.prototype.enableActivePaths = function () {\n\n    for (var i = 0; i < this.activePaths.length; i++) {\n\n        this.directionHelper.addActivePoint(this.activePaths[i].directionPoint);\n        this.activePaths[i].path.enable(this.activePaths[i].directionPoint);\n        this.activePaths[i].path.addEventListener('pathStart', this._bindedMethods.onPathStart);\n    }\n};\n\nPaths.prototype.disableActivePaths = function () {\n\n    for (var i = 0; i < this.activePaths.length; i++) {\n\n        this.directionHelper.removeActivePoint(this.activePaths[i].directionPoint);\n        this.activePaths[i].path.disable(this.activePaths[i].directionPoint);\n        this.activePaths[i].path.removeEventListener('pathStart', this._bindedMethods.onPathStart);\n    }\n};\n\n\n// Events\n// ------------------------------------------------------------\n\nPaths.prototype._onPathStart = function (event) {\n\n    event.path.addEventListener('pathEnd', this._bindedMethods.onPathEnd);\n    this.hidePaths();\n};\n\nPaths.prototype._onPathEnd = function (event) {\n\n    event.path.removeEventListener('pathEnd', this._bindedMethods.onPathEnd);\n    this.showPaths();\n};\n\n\n// Update paths\n// ------------------------------------------------------------\n\nPaths.prototype.updatePaths = function (newPathsData, newPathsIndex) {\n\n    this.hidePaths();\n    this.removePaths();\n\n    this.currentPathsData = newPathsData;\n    this.currentPathsIndex = newPathsIndex;\n    this.createPaths();\n};\n\n\n// Getters\n// ------------------------------------------------------------\n\nPaths.prototype.getRandomPosition = function () {\n\n    // Choose a random point from the paths\n    var randomPath = this.getRandomPath(),\n        isStartPoint = ( Math.random() <= 0.5 ),\n        position = ( isStartPoint ) ? randomPath.startPoint : randomPath.endPoint,\n        positionNext = ( isStartPoint ) ? randomPath.points[1] : randomPath.points[randomPath.points.length - 2],\n        target = position.clone();\n\n    var direction = positionNext.clone().sub(position.clone()).normalize().multiplyScalar(0.1);\n    target.x += direction.x;\n    target.y = position.y;\n    target.z = position.z;\n\n    // Apply it to the camera\n    this.view.updateUserPosition(position, target);\n\n    // Now show the paths close to the user\n    setTimeout( this.showPaths.bind(this), 1000 );\n};\n\nPaths.prototype.getRandomPath = function () {\n\n    // Make sure that the random path is not a portal\n\n    var randomIndex = THREE.Math.randInt(0, this.paths.length - 1);\n    var randomPath = this.paths[randomIndex];\n\n    while (randomPath.type !== PathType.PATH) {\n\n        randomIndex = THREE.Math.randInt(0, this.paths.length - 1);\n        randomPath = this.paths[randomIndex];\n    }\n\n    return randomPath;\n};\n\nPaths.prototype.getRandomPortalPath = function (portalPath) {\n\n    // Get a random portal path that is different from portalPath ( parameter )\n\n    var availablePortals = [];\n\n    for (var i = 0; i < this.portalPaths.length; i++) {\n\n        if (this.portalPaths[i] !== portalPath) availablePortals.push(this.portalPaths[i]);\n    }\n\n    var randomIndex = THREE.Math.randInt(0, availablePortals.length - 1);\n    var randomPortalPath = availablePortals[randomIndex];\n\n    return randomPortalPath;\n};\n\nmodule.exports = Paths;","'use strict';\n\nvar PathType = require('./PathType');\nvar Path = require('./Path');\nvar DirectionPoint = require('../ui/DirectionPoint');\n\n// PortalPath\n// ------------------------------------------------------------\n// A specialized kind of Path ( inherits )\n// It moves you from one point in space to another.\n// ------------------------------------------------------------\n\nvar PortalPath = function (view, points) {\n\n    Path.call(this, view, points, PathType.PATH_PORTAL);\n\n    this.type = PathType.PATH_PORTAL;\n    this.TIME_PER_UNIT = 0.05;\n    this.totalTime = this.totalDistance * this.TIME_PER_UNIT;\n};\n\nPortalPath.prototype = Object.create(Path.prototype);\n\n\n// Overrided behaviour\n// ------------------------------------------------------------\n\nPortalPath.prototype.onStartMovement = function (point) {\n\n    setTimeout(( function () {\n        this.view.audio.playFx(1);\n    } ).bind(this), 1000);\n\n    this.dispatchEvent({type: 'pathStart', path: this, directionPoint: point});\n\n    TweenMax.to(this.view.scene.fog, 1.5, {\n\n        far: 0.1,\n        ease: Power2.easeInOut\n    });\n};\n\nPortalPath.prototype.onCompleteMovement = function () {\n\n    // At the end of the movement, choose another portal\n    // from a random plane and enter through it\n\n    setTimeout(( function () {\n        this.view.audio.playFx(1);\n    } ).bind(this), 350);\n\n    this.view.planesController.setRandomPlane();\n    this.view.paths.updatePaths(this.view.planesController.getCurrentPaths(), this.view.planesController.getCurrentIndex());\n\n    var newPath = this.view.paths.getRandomPortalPath(this);\n    newPath.movePath(1, 0, ( function () {\n\n        this.onCompleteMovementRegular(newPath);\n\n    } ).bind(this));\n\n    TweenMax.to(this.view.scene.fog, 2.0, {\n\n        far: this.view.FOG_FAR,\n        ease: Power2.easeInOut\n    });\n};\n\nPath.prototype.onCompleteMovementRegular = function (newPath) {\n\n    if (!this.view.isVR) {\n\n        TweenMax.to(this.view.controls.target, 0.5, {\n\n            x: this.view.camera.position.x + newPath.direction.x * 0.5,\n            y: this.view.camera.position.y + newPath.direction.y * 0.5,\n            z: this.view.camera.position.z + newPath.direction.z * 0.5,\n            ease: Linear.none,\n            onComplete: ( function () {\n\n                this.view.controls.enabled = true;\n                this.msgNoVREl.classList.remove('active');\n\n                this.dispatchEvent({type: 'pathEnd', path: this});\n\n            } ).bind(this)\n        });\n\n    } else {\n\n        setTimeout(( function () {\n\n            this.dispatchEvent({type: 'pathEnd', path: this});\n\n        } ).bind(this), 500);\n    }\n};\n\nmodule.exports = PortalPath;","'use strict';\n\nvar GardlandView = require('./../view/GarlandView');\n\n// PortalRTT\n// ------------------------------------------------------------\n// Render to target portal.\n// When we are in front of a portal, we will render the\n// arrival destination in a circle.\n// ------------------------------------------------------------\n\nvar PortalRTT = function (view) {\n\n    this.view = view;\n\n    this.rttCamera = null;\n    this.renderTarget = null;\n    this.geometry = null;\n    this.material = null;\n    this.geometryBG = null;\n    this.materialBG = null;\n    this.container = null;\n    this.plane = null;\n    this.planeBg = null;\n\n    this.init();\n};\n\n\n// Initialization\n// ------------------------------------------------------------\n\nPortalRTT.prototype.init = function () {\n\n    // Camera\n    this.rttCamera = new THREE.PerspectiveCamera(90, 1, 0.001, 700);\n    this.view.scene.add(this.rttCamera);\n\n    // Container\n    this.container = new THREE.Object3D();\n    this.container.visible = false;\n    this.view.scene.add(this.container);\n\n    // Plane with a white solid background\n    this.geometryBG = new THREE.CircleGeometry(2.5, 60);\n    this.materialBG = new THREE.MeshBasicMaterial({\n        color: 0xffffff,\n        side: THREE.DoubleSide,\n        transparent: true,\n        opacity: 0\n    });\n    this.planeBg = new THREE.Mesh(this.geometryBG, this.materialBG);\n    this.planeBg.position.z = -0.01;\n    this.container.add(this.planeBg);\n\n    // Plane with the texture of the renderTarget\n    this.geometry = new THREE.CircleGeometry(2.4, 60);\n    this.renderTarget = new THREE.WebGLRenderTarget(512, 512, {format: THREE.RGBFormat});\n    this.material = new THREE.MeshBasicMaterial({map: this.renderTarget, transparent: true, opacity: 0});\n    this.plane = new THREE.Mesh(this.geometry, this.material);\n\n    // Garland\n    //GardlandView.init(this.view.scene, true);\n    GardlandView.init(this.container, true);\n\n    this.container.add(this.plane);\n};\n\nPortalRTT.prototype.randomizeCameraPosition = function () {\n\n    // The bounding cube has an aprox size of 160\n\n    this.rttCamera.position.x = THREE.Math.randInt(-80, 80);\n    this.rttCamera.position.y = THREE.Math.randInt(-80, 80);\n    this.rttCamera.position.z = THREE.Math.randInt(-80, 80);\n};\n\n\n// Update\n// ------------------------------------------------------------\n\nPortalRTT.prototype.update = function () {\n\n    if (!this.container.visible) return;\n\n    // The camera looks at the same direction that the real camera is looking at\n\n    var cameraVector = new THREE.Vector3(0, 0, -1);\n    cameraVector.applyQuaternion(this.view.camera.quaternion);\n\n    var lookAtVector = this.rttCamera.position.clone().add(cameraVector);\n\n   this.rttCamera.lookAt(lookAtVector);\n\n    // Face the camera\n    this.container.quaternion.copy(this.view.camera.quaternion);\n};\n\n\n// Render\n// ------------------------------------------------------------\n\nPortalRTT.prototype.render = function () {\n\n    if (!this.container.visible) return;\n\n    this.container.visible = false;\n    if( !this.rendered ){\n        this.view.renderer.render(this.view.scene, this.rttCamera, this.renderTarget, true);\n        if( window.isAndroid ) this.rendered = true;\n    }\n    this.container.visible = true;\n};\n\n\n// Show / hide\n// ------------------------------------------------------------\n\nPortalRTT.prototype.show = function (position) {\n\n    this.randomizeCameraPosition();\n\n    this.container.position.copy(position);\n    this.container.visible = true;\n    TweenMax.to(this.material, 1.0, {\n\n        opacity: 1,\n        ease: Power2.easeInOut\n    });\n    TweenMax.to(this.materialBG, 1.0, {\n\n        opacity: 1,\n        ease: Power2.easeInOut\n    });\n\n    GardlandView.show();\n\n    this.rendered = false;\n};\n\nPortalRTT.prototype.hide = function (position) {\n\n    TweenMax.to(this.material, 0.5, {\n\n        opacity: 0,\n        ease: Power2.easeInOut,\n        delay: 0.75,\n        onComplete: ( function () {\n\n            this.container.visible = false;\n\n        } ).bind(this)\n    });\n    TweenMax.to(this.materialBG, 0.5, {\n\n        opacity: 0,\n        ease: Power2.easeInOut,\n        delay: 0.75\n    });\n\n    GardlandView.hide();\n\n};\n\nmodule.exports = PortalRTT;","/**\n * Created by felixmorenomartinez on 03/02/15.\n */\n\n'use strict';\n\nvar Socket = function () {\n\n    THREE.EventDispatcher.call(this);\n\n    //this.init();\n\n    this.uid = null;\n    this.name = '#ffffff';\n};\n\nSocket.prototype = Object.create(THREE.EventDispatcher.prototype);\n\nSocket.prototype.init = function () {\n\n    //this.socket = io('http://nodejs-vrsocket.rhcloud.com:8000');\n    this.socket = io('46.101.79.115:8080', { transports: [ 'websocket' ] });\n\n    this.socket.on('onConnect', this.onConnect.bind(this));\n    this.socket.on('addChar', this.onAddChar.bind(this));\n    this.socket.on('removeChar', this.onRemoveChar.bind(this));\n    this.socket.on('updateClientData', this.onReceiveUsersData.bind(this));\n\n    this.socket.on('event', function (data) {\n        console.log(data)\n    });\n    this.socket.on('disconnect', function () {\n        console.log('disconnected')\n    });\n};\n\nSocket.prototype.onAddChar = function (data) {\n\n    //console.log( 'onAddChar ', data );\n\n    this.dispatchEvent({type: 'addChar', userAdded: data.userAdded, users: data.users});\n};\n\nSocket.prototype.onRemoveChar = function (data) {\n\n    //console.log( 'removeChar ', data );\n\n    this.dispatchEvent({type: 'removeChar', id: data.id});\n};\n\nSocket.prototype.onReceiveUsersData = function (data) {\n\n    //console.log( 'updateUserSData ', data );\n\n    this.dispatchEvent({type: 'updateUsersData', data: data });\n};\n\nSocket.prototype.onConnect = function (id) {\n\n    //console.log('onConnect');\n\n    this.uid = id;\n    this.socket.emit('onJoinRoom', {\n        room: 'lobby',\n        uid: this.uid,\n        name: this.name,\n        image: 'http://google.com'\n    });\n};\n\nSocket.prototype.join = function (data) {\n\n    //console.log('onJoinRoom');\n\n    this.name = data.username;\n    this.socket.emit('onJoinRoom', {\n        room: 'lobby',\n        uid: this.uid,\n        name: this.name,\n        image: 'http://google.com'\n    });\n};\n\nSocket.prototype.refreshUserData = function (data) {\n\n    //console.log('refreshUserData');\n\n    //var d = JSON.stringify( data );\n    this.socket.emit('updateUserData', data);\n}\n\nmodule.exports = Socket;","\"use strict\"\nvar DirectionPoint = require('./DirectionPoint');\n\nvar DirectionHelper = function (scene) {\n\n    this.scene = scene;\n    this.directionPoints = [];\n    this.directionPointsAll = [];\n\n    this.init();\n};\n\n\n// Initialization\n// ------------------------------------------------------------\n\nDirectionHelper.prototype.init = function () {\n\n    // Simple... is a helper!\n};\n\n\n// Activate / Deactivate\n// ------------------------------------------------------------\n\nDirectionHelper.prototype.activatePoints = function (directionPoints) {\n\n    if (this.directionPoints.length > 0) {\n\n        this.deactivatePoints();\n    }\n\n    // Add new set of points\n\n    this.directionPoints = directionPoints;\n    for (var i = 0; i < this.directionPoints.length; i++) {\n\n        this.directionPoints[i].enable();\n    }\n};\n\nDirectionHelper.prototype.deactivatePoints = function () {\n\n    for (var i = 0; i < this.directionPoints.length; i++) {\n\n        this.directionPoints[i].disable();\n    }\n    this.directionPoints = [];\n};\n\nDirectionHelper.prototype.addActivePoint = function (directionPoint) {\n\n    directionPoint.enable();\n    this.directionPoints.push(directionPoint);\n    this.addPermanentPoint(directionPoint);\n};\n\nDirectionHelper.prototype.removeActivePoint = function (directionPoint) {\n\n    directionPoint.disable();\n\n    var index = -1;\n    for (var i = 0; i < this.directionPoints.length; i++) {\n\n        if (this.directionPoints[i] === directionPoint) {\n\n            index = i;\n            break;\n        }\n    }\n\n    if (index > -1) this.directionPoints.splice(index, 1);\n};\n\nDirectionHelper.prototype.addPermanentPoint = function (directionPoint) {\n\n    var isInArray = false;\n\n    for (var i = 0; i < this.directionPointsAll.length; i++) {\n\n        if (this.directionPointsAll[i] === directionPoint) {\n\n            isInArray = true;\n            break;\n        }\n    }\n\n    if (!isInArray) {\n\n        this.directionPointsAll.push(directionPoint);\n    }\n};\n\n\n// Update\n// ------------------------------------------------------------\n\nDirectionHelper.prototype.update = function (camera, raycaster) {\n\n    // Vector with the direction of the camera\n\n    var vector = new THREE.Vector3(0, 0, -1);\n    vector.applyQuaternion(camera.quaternion);\n\n    // Calculate intersection of a ray from the direction of the camera\n\n    raycaster.set(camera.position, vector.normalize());\n    var intersects = raycaster.intersectObjects(this.scene.children, true);\n\n    var i;\n\n    for (i = 0; i < this.directionPoints.length; i++) {\n\n        var directionPoint = this.directionPoints[i],\n            directionMesh = directionPoint.mesh,\n            isInFront = false;\n\n        if (intersects.length > 0) {\n\n            var isFirstIntersection = intersects[0].object === directionMesh,\n                isFirstIntersectionAfterLine = ( intersects.length > 1 && intersects[0].object.userData.noIntersection && intersects[1].object === directionMesh );\n\n            if (isFirstIntersection || isFirstIntersectionAfterLine) {\n\n                isInFront = true;\n            }\n        }\n\n        if (isInFront) directionPoint.activate();\n        else directionPoint.deactivate();\n\n        // directionPoint.update( camera );\n    }\n\n    for (i = 0; i < this.directionPointsAll.length; i++) {\n\n        this.directionPointsAll[i].update(camera);\n    }\n\n};\n\nmodule.exports = DirectionHelper;\n","'use strict';\nvar PathType = require('../path/PathType');\n\nvar vs_regular_projection = require('../../../glsl/vs-regular-projection.glsl');\nvar fs_arc = require('../../../glsl/fs-arc.glsl');\n\nvar DirectionPoint = function (scene, position, path, vectorPath) {\n\n    THREE.EventDispatcher.call(this);\n\n    this.scene = scene;\n    this.position = position;\n    this.path = path || null;\n    this.vectorPath = vectorPath.multiplyScalar(0.5);\n\n    this.mesh = null;\n    this.texture = null;\n\n    this.isEnabled = false;\n    this.isActive = false;\n\n    this.isPortalActive = false;\n\n    this.progress = 0;\n    this.progressInc = ( path.view.isVR ) ? 0.025 : 0.0075;\n    this.progressDec = ( path.view.isVR ) ? 0.1 : 0.05;\n    this.opacity = 0;\n\n    this.init();\n};\n\nDirectionPoint.prototype = Object.create(THREE.EventDispatcher.prototype);\n\n\n// Initialization\n// ------------------------------------------------------------\n\nDirectionPoint.prototype.init = function () {\n\n    //this.createTexture();\n    this.createMesh();\n};\n\nDirectionPoint.prototype.createTexture = function () {\n\n    //this.texture = new DirectionTexture(128, 128, ( this.path.type === PathType.PATH_PORTAL ));\n};\n\nDirectionPoint.prototype.createMesh = function () {\n\n    var insideAlpha = (this.path.type === PathType.PATH_PORTAL) ? 0.0 : 1.0;\n\n    var geometry = new THREE.PlaneBufferGeometry(4, 4, 2, 2),\n        material = new THREE.ShaderMaterial({\n\n            transparent : true,\n\n            uniforms: {\n                'color'         : { type: \"v4\", value: new THREE.Vector4(1.0, 1.0, 1.0, 1.0) },\n                'colorInside'   : { type: \"v4\", value: new THREE.Vector4(1.0, 1.0, 1.0, insideAlpha) },\n                'progress'      : { type: \"f\", value: 0.5 },\n                'alpha'         : { type: \"f\", value: 0.0 }\n            },\n\n            vertexShader                : vs_regular_projection,\n            fragmentShader              : fs_arc\n        });\n\n    this.mesh = new THREE.Mesh(geometry, material);\n    this.mesh.position.copy(this.position);\n\n    // this.scene.add( this.mesh );\n};\n\n\n// Add / remove from scene\n// ------------------------------------------------------------\n\nDirectionPoint.prototype.addInScene = function () {\n\n    this.scene.add(this.mesh);\n};\n\nDirectionPoint.prototype.removeFromScene = function () {\n\n    this.scene.remove(this.mesh);\n};\n\n\n// Enable / disable\n// ------------------------------------------------------------\n\nDirectionPoint.prototype.enable = function () {\n\n    if (this.path.type === PathType.PATH_PORTAL) {\n\n        setTimeout(( function () {\n\n            if (this.path.view.portalRTT !== null) {\n\n                this.isPortalActive = true;\n                this.path.view.portalRTT.show(this.mesh.position.clone().add(this.vectorPath));\n            }\n\n        } ).bind(this), 500);\n    }\n\n    this.progress = 0;\n    //this.texture.update(this.progress);\n    this.mesh.material.uniforms['progress'].value = this.progress;\n\n    TweenMax.to(this, 1.0, {\n\n        opacity: 0.5,\n        progress: 0,\n        ease: Power2.easeInOut,\n        onUpdate: ( function () {\n\n            this.mesh.material.uniforms['alpha'].value = this.opacity;\n\n        } ).bind(this),\n        onComplete: ( function () {\n\n            this.isEnabled = true;\n            this.isActive = false;\n\n        } ).bind(this)\n    });\n};\n\nDirectionPoint.prototype.disable = function () {\n\n    if (this.isPortalActive) {\n\n        this.isPortalActive = false;\n        this.path.view.portalRTT.hide();\n    }\n\n\n    this.isEnabled = false;\n    this.isActive = false;\n\n    TweenMax.to(this, 0.5, {\n\n        opacity: 0,\n        progress: 0,\n        ease: Power2.easeInOut,\n        onUpdate: ( function () {\n\n            //this.texture.update(this.progress);\n            this.mesh.material.uniforms['progress'].value = this.progress;\n            this.mesh.material.uniforms['alpha'].value = this.opacity;\n\n        } ).bind(this)\n    });\n};\n\n\n// Activate / Deactivate\n// ------------------------------------------------------------\n\nDirectionPoint.prototype.activate = function () {\n\n    if (!this.isActive) {\n\n        this.isActive = true;\n        this.opacity = 1;\n    }\n};\n\nDirectionPoint.prototype.deactivate = function () {\n\n    if (this.isActive) {\n\n        this.isActive = false;\n        this.opacity = 0.5;\n    }\n};\n\n\n// Update\n// ------------------------------------------------------------\n\nDirectionPoint.prototype.update = function (camera) {\n\n    // Make the mesh face the camera\n    this.mesh.lookAt(camera.position);\n\n    if (this.isEnabled) {\n\n        // Update progress\n        var newProgress = this.progress;\n\n        if (this.isActive && this.progress < 1) {\n\n            newProgress = Math.min(1, this.progress + this.progressInc);\n\n        } else if (this.progress > 0) {\n\n            newProgress = Math.max(0, this.progress - this.progressDec);\n        }\n\n        if (newProgress !== this.progress) {\n\n            this.progress += ( newProgress - this.progress ) / 5;\n            if (Math.abs(this.progress - newProgress) < 0.05) this.progress = newProgress;\n\n            //this.texture.update(this.progress);\n\n            this.mesh.material.uniforms['progress'].value = this.progress;\n\n            if (this.progress === 1) {\n\n                this.moveDirection();\n            }\n        }\n\n\n        // Update opacity\n        if (this.mesh.material.opacity !== this.opacity) {\n\n            this.mesh.material.opacity += ( this.opacity - this.mesh.material.opacity ) / 10;\n            if (Math.abs(this.mesh.material.uniforms['alpha'].value - this.opacity) < 0.05)  this.mesh.material.uniforms['alpha'].value = this.opacity;\n        }\n    }\n};\n\n\n// Move in direction\n// ------------------------------------------------------------\n\nDirectionPoint.prototype.moveDirection = function () {\n\n    this.path.moveInPathFrom(this);\n};\n\nmodule.exports = DirectionPoint;","/**\n * Created by siroko on 7/13/15.\n */\n\nvar BaseGLPass = function( params ) {\n\n    THREE.EventDispatcher.call( this );\n\n    this.renderer   = params.renderer;\n\n    this.bufferGeometry = null;\n\n    this.sceneRT = new THREE.Scene();\n    this.sceneBuffer = new THREE.Scene();\n\n    this.cameraOrto = new THREE.OrthographicCamera( window.innerWidth / - 2, window.innerWidth / 2, window.innerHeight / 2, window.innerHeight / - 2, 1, 1000 );\n};\n\nBaseGLPass.prototype = Object.create( THREE.EventDispatcher.prototype );\n\n\nBaseGLPass.prototype.pass = function( material, target ) {\n\n    this.quad.material = material;\n    this.renderer.render( this.sceneRT, this.cameraOrto, target );\n\n};\n\nBaseGLPass.prototype.passBuffer = function( material, target ) {\n\n    this.bufferMesh.geometry.material = material;\n    this.renderer.render( this.sceneBuffer, this.cameraOrto, target );\n\n};\n\nBaseGLPass.prototype.getRenderTarget = function( w, h, linear ) {\n\n    var renderTarget = new THREE.WebGLRenderTarget( w, h, {\n        wrapS           : THREE.RepeatWrapping,\n        wrapT           : THREE.RepeatWrapping,\n        minFilter       : linear ? THREE.LinearFilter : THREE.NearestFilter,\n        magFilter       : linear ? THREE.LinearFilter : THREE.NearestFilter,\n        format          : THREE.RGBFormat,\n        type            : window.isAndroid ? THREE.FloatType : THREE.HalfFloatType,\n        stencilBuffer   : false\n    } );\n\n    return renderTarget;\n};\n\nmodule.exports = BaseGLPass;","/**\n * Created by felixmorenomartinez on 13/02/15.\n */\n\n\n'use strict';\n\nvar DebugPanel = function (view) {\n\n    var Settings = function (view) {\n\n        this.ambient = 61;\n        this.diffuse = 37;\n        this.specular = 0;\n        this.rim = 0;\n        this.shininess = 49;\n        this.invertRim = false;\n        this.solidRender = false;\n        this.inkColor = [0, 0, 0];\n        this.toggleMaterials = function () {\n\n            view.planesController.toggleMaterials();\n        };\n        this.loadMesh = function () {\n\n            view.toggleEnvironment();\n        }\n    };\n\n    this.settings = new Settings(view);\n    this.gui = new dat.GUI();\n\n    this.init();\n};\n\nDebugPanel.prototype.init = function () {\n\n    this.gui.add(this.settings, 'ambient', 61, 100.0);\n    this.gui.add(this.settings, 'diffuse', 37, 100.0);\n    this.gui.add(this.settings, 'specular', 0.0, 100.0);\n    this.gui.add(this.settings, 'rim', 0.0, 100.0);\n    this.gui.add(this.settings, 'shininess', 49, 100);\n    this.gui.add(this.settings, 'invertRim');\n    this.gui.add(this.settings, 'solidRender');\n    this.gui.addColor(this.settings, 'inkColor');\n    this.gui.add(this.settings, 'toggleMaterials');\n    this.gui.add(this.settings, 'loadMesh');\n\n};\n\nmodule.exports = DebugPanel;","/**\n * Created by siroko on 7/8/15.\n */\n\n\nvar BaseGLPass = require('./BaseGLPass');\n\nvar vs_bufferParticles  = require('../../../glsl/vs-buffer-particles.glsl');\nvar fs_bufferParticles  = require('../../../glsl/fs-buffer-particles.glsl');\nvar vs_createPositions  = require('../../../glsl/vs-create-positions.glsl');\nvar fs_createPositions  = require('../../../glsl/fs-create-positions.glsl');\nvar vs_simpleQuad       = require('../../../glsl/vs-simple-quad.glsl');\nvar fs_updatePositions  = require('../../../glsl/fs-update-positions.glsl');\nvar fs_copy             = require('../../../glsl/fs-copy.glsl');\n\n\nvar Simulator = function( params ) {\n\n    BaseGLPass.call( this, params );\n\n    this.sizeW      = params.sizeW;\n    this.sizeH      = params.sizeH;\n\n    this.positionsGeom = params.positionsGeom;\n\n    this.setup();\n};\n\nSimulator.prototype = Object.create( BaseGLPass.prototype );\n\nSimulator.prototype.setup = function() {\n\n    this.VI2dRT             = this.getRenderTarget( this.sizeW, this.sizeH );\n    this.positionsRT        = this.getRenderTarget( this.sizeW, this.sizeH );\n    this.prevPositionsRT    = this.getRenderTarget( this.sizeW, this.sizeH );\n    this.geometryRT         = this.getRenderTarget( this.sizeW, this.sizeH );\n    this.finalPositionsRT   = this.getRenderTarget( this.sizeW, this.sizeH );\n\n    this.total              = this.sizeW * this.sizeH;\n\n    this.index2D            = new THREE.BufferAttribute( new Float32Array( this.total * 2 ), 2 );\n    this.positions          = new THREE.BufferAttribute( new Float32Array( this.total * 3 ), 3 );\n\n    var div = 1 / this.sizeW;\n    for (var i = 0; i < this.total; i++) {\n\n        this.index2D.setXY( i, ( ( 2. * div * ( ( i % this.sizeW ) + 0.5 ) - 1 ) + 1 ) / 2,  ( ( 2. * div * ( Math.floor( i * div ) + 0.5 ) - 1 ) + 1 ) / 2 );\n        this.positions.setXYZ( i, Math.random() * 300 - 150, Math.random() * 300 - 150, Math.random() * 300 - 150 );\n    }\n\n    this.bufferGeometry = new THREE.BufferGeometry();\n    this.bufferGeometry.addAttribute( 'aV2I', this.index2D );\n    this.bufferGeometry.addAttribute( 'position', this.positions );\n\n    this.bufferMaterial = new THREE.ShaderMaterial( {\n\n        attributes: {\n            'position'              : { type: \"v3\", value: null },\n            'aV2I'                  : { type: \"v2\", value: null }\n        },\n        uniforms: {\n            'textureMap'            : { type: \"t\", value : THREE.ImageUtils.loadTexture( 'assets/img/particle.png' ) },\n            'uPositionsT'           : { type: \"t\", value : this.finalPositionsRT }\n        },\n\n        vertexShader                : vs_bufferParticles,\n        fragmentShader              : fs_bufferParticles,\n\n        depthWrite                  : false,\n        transparent                 : true\n    } );\n\n    this.bufferMesh = new THREE.PointCloud( this.bufferGeometry, this.bufferMaterial );\n\n    this.drawPositionsMaterial = new THREE.ShaderMaterial( {\n\n        attributes: {\n            'position'              : { type: \"v3\", value: null },\n            'aV2I'                  : { type: \"v2\", value: null }\n        },\n\n        uniforms: {\n            'uGeomToDraw'           : { type: \"f\",  value: 1 }\n        },\n        vertexShader                : vs_createPositions,\n        fragmentShader              : fs_createPositions\n    } );\n\n    this.bufferMesh2 = new THREE.PointCloud( this.bufferGeometry.clone(), this.drawPositionsMaterial );\n    this.sceneBuffer.add( this.bufferMesh2 );\n\n    this.updatePositionsMaterial = new THREE.ShaderMaterial( {\n        uniforms: {\n            'uPrevPositionsMap'     : { type: \"t\", value: this.positionsRT },\n            'uGeomPositionsMap'     : { type: \"t\", value: this.geometryRT },\n            'uTime'                 : { type: \"f\", value: 0 }\n        },\n\n        vertexShader                : vs_simpleQuad,\n        fragmentShader              : fs_updatePositions\n    } );\n\n    this.copyMaterial = new THREE.ShaderMaterial( {\n        uniforms: {\n            textureMap              : { type: \"t\", value: this.finalPositionsRT }\n        },\n\n        vertexShader                : vs_simpleQuad,\n        fragmentShader              : fs_copy\n    } );\n\n    var quad_geom = new THREE.PlaneBufferGeometry( 2, 2, 1, 1 );\n    this.quad = new THREE.Mesh( quad_geom, this.updatePositionsMaterial );\n    this.sceneRT.add(this.quad);\n\n    this.passBuffer( this.drawPositionsMaterial, this.positionsRT );\n    this.passBuffer( this.drawPositionsMaterial, this.geometryRT );\n    this.drawPositionsMaterial.uniforms.uGeomToDraw.value = 1.0;\n    this.passBuffer( this.drawPositionsMaterial, this.VI2dRT );\n\n    this.pass( this.updatePositionsMaterial, this.finalPositionsRT );\n    this.updatePositionsMaterial.uniforms.uPrevPositionsMap.value = this.prevPositionsRT;\n\n    this.pass( this.copyMaterial, this.prevPositionsRT );\n};\n\nSimulator.prototype.update = function() {\n\n    this.updatePositionsMaterial.uniforms.uTime.value = Math.sin(Date.now() * 0.001);\n\n    this.pass( this.updatePositionsMaterial, this.finalPositionsRT );\n    this.pass( this.copyMaterial, this.prevPositionsRT );\n};\n\nmodule.exports = Simulator;","/**\n * Created by felixmorenomartinez on 26/02/15.\n */\n\n\n'use strict';\n\nvar vs_hatching = require('../../../glsl/vs-hatching.glsl');\nvar fs_hatching = require('../../../glsl/fs-hatching.glsl');\n\nvar Character = function () {\n\n    THREE.EventDispatcher.call(this);\n\n    this.material = null;\n    this.model1 = null;\n    this.meshes = [];\n    this.objURL1 = 'assets/geom/dodecahedron.obj';\n    this.scale = 0.35;\n    this.isCreated = false;\n    this.useHatching = false;\n\n    this.fogDensity = 10;\n    this.fogNear = 30;\n    this.fogFar = 300;\n    this.fogColor = new THREE.Vector3(0, 0, 0);\n    this.fogType = 1;\n\n    this.init();\n};\n\nCharacter.prototype = Object.create(THREE.EventDispatcher.prototype);\n\n\nCharacter.prototype.init = function () {\n\n    this.createMaterial();\n    this.loadObj();\n};\n\nCharacter.prototype.show = function () {\n\n\n};\n\nCharacter.prototype.hide = function () {\n\n    for (var i = 0; i < this.meshes.length; i++) {\n\n        this.meshes[i].visible = false;\n    }\n};\n\n// setting the material\nCharacter.prototype.createMaterial = function () {\n\n    if (this.useHatching) {\n\n        this.material1 = new THREE.ShaderMaterial({\n            uniforms: {\n                showOutline: {type: 'f', value: 0},\n                ambientWeight: {type: 'f', value: 0},\n                diffuseWeight: {type: 'f', value: 0},\n                rimWeight: {type: 'f', value: 1},\n                specularWeight: {type: 'f', value: 0},\n                shininess: {type: 'f', value: 1000},\n                invertRim: {type: 'i', value: 1},\n                inkColor: {type: 'v4', value: new THREE.Vector3(0.3, 0.3, 0.3)},\n                solidRender: {type: 'i', value: 0},\n                resolution: {type: 'v2', value: new THREE.Vector2(0, 0)},\n                bkgResolution: {type: 'v2', value: new THREE.Vector2(0, 0)},\n                lightPosition: {type: 'v3', value: new THREE.Vector3(-100, 100, 0)},\n                hatch1: {type: 't', value: THREE.ImageUtils.loadTexture('assets/patterns/hatch_0.jpg')},\n                hatch2: {type: 't', value: THREE.ImageUtils.loadTexture('assets/patterns/hatch_1.jpg')},\n                hatch3: {type: 't', value: THREE.ImageUtils.loadTexture('assets/patterns/hatch_2.jpg')},\n                hatch4: {type: 't', value: THREE.ImageUtils.loadTexture('assets/patterns/hatch_3.jpg')},\n                hatch5: {type: 't', value: THREE.ImageUtils.loadTexture('assets/patterns/hatch_4.jpg')},\n                hatch6: {type: 't', value: THREE.ImageUtils.loadTexture('assets/patterns/hatch_5.jpg')},\n                paper: {type: 't', value: THREE.ImageUtils.loadTexture('assets/patterns/placeholder.jpg')},\n                baked: {type: 't', value: THREE.ImageUtils.loadTexture('assets/patterns/placeholder.jpg')},\n                repeat: {type: 'v2', value: new THREE.Vector2(0, 0)},\n                fogDensity: {type: 'f', value: this.fogDensity},\n                fogNear: {type: 'f', value: this.fogNear},\n                fogFar: {type: 'f', value: this.fogFar},\n                fogColor: {type: 'v3', value: this.fogColor},\n                fogType: {type: 'f', value: this.fogType}\n            },\n            vertexShader:vs_hatching,\n            fragmentShader: fs_hatching,\n            side: THREE.DoubleSide\n        });\n\n        this.material1.uniforms.paper.value.generateMipmaps = false;\n        this.material1.uniforms.paper.value.magFilter = THREE.LinearFilter;\n        this.material1.uniforms.paper.value.minFilter = THREE.LinearFilter;\n\n        this.material1.uniforms.repeat.value.set(5, 5);\n        this.material1.uniforms.hatch1.value.wrapS = this.material1.uniforms.hatch1.value.wrapT = THREE.RepeatWrapping;\n        this.material1.uniforms.hatch2.value.wrapS = this.material1.uniforms.hatch2.value.wrapT = THREE.RepeatWrapping;\n        this.material1.uniforms.hatch3.value.wrapS = this.material1.uniforms.hatch3.value.wrapT = THREE.RepeatWrapping;\n        this.material1.uniforms.hatch4.value.wrapS = this.material1.uniforms.hatch4.value.wrapT = THREE.RepeatWrapping;\n        this.material1.uniforms.hatch5.value.wrapS = this.material1.uniforms.hatch5.value.wrapT = THREE.RepeatWrapping;\n        this.material1.uniforms.hatch6.value.wrapS = this.material1.uniforms.hatch6.value.wrapT = THREE.RepeatWrapping;\n\n    } else {\n\n        this.material1 = new THREE.MeshNormalMaterial({ side: THREE.DoubleSide });\n    }\n\n}\n\nCharacter.prototype.loadObj = function () {\n\n    var manager = new THREE.LoadingManager();\n    manager.onProgress = function (item, loaded, total) {\n    };\n\n    this.objLoader = new THREE.OBJLoader(manager);\n    this.objLoader.load(this.objURL1, this.onLoadObj1.bind(this));\n};\n\nCharacter.prototype.onLoadObj1 = function (obj) {\n\n    this.model1 = obj;\n\n    this.model1.traverse(this.setMaterial1.bind(this));\n    this.model1.scale.x = this.model1.scale.y = this.model1.scale.z = this.scale;\n\n    this.dispatchEvent({type: 'loaded'});\n\n};\n\nCharacter.prototype.setMaterial1 = function (child) {\n\n    if (child instanceof THREE.Mesh) {\n\n        this.meshes.push(child);\n        child.material = this.material1;\n    }\n};\n\nmodule.exports = Character;\n","'use strict';\n\nvar EnviroView = function (scene) {\n\n    THREE.EventDispatcher.call(this);\n\n    this.scene = scene;\n    this.material = null;\n    this.model1 = null;\n    this.model2 = null;\n    this.model3 = null;\n    this.model4 = null;\n    this.model5 = null;\n    this.model6 = null;\n    this.meshes = [];\n    this.objURL1 = 'assets/geom/obj01.obj';\n    this.objURL2 = 'assets/geom/obj02.obj';\n    this.objURL3 = 'assets/geom/obj03.obj';\n    ////this.objURL5 = 'assets/geom/obj01.obj';\n    //this.objURL6 = 'assets/geom/obj02.obj';\n    ////this.objURL7 = 'assets/geom/obj03.obj';\n    this.scale = 2;\n    this.isCreated = false;\n    this.useHatching = true;\n\n    this.fogDensity = 10;\n    this.fogNear = 30;\n    this.fogFar = 300;\n    this.fogColor = new THREE.Vector3(0, 0, 0);\n    this.fogType = 1;\n\n    this.init();\n};\n\nEnviroView.prototype = Object.create(THREE.EventDispatcher.prototype);\n\n\nEnviroView.prototype.init = function () {\n\n\n};\n\nEnviroView.prototype.show = function () {\n\n    if (!this.isCreated) {\n\n        this.isCreated = true;\n        this.createMaterial();\n        this.loadObj();\n\n    } else {\n\n        for (var i = 0; i < this.meshes.length; i++) {\n\n            this.meshes[i].visible = true;\n        }\n    }\n};\n\nEnviroView.prototype.hide = function () {\n\n    for (var i = 0; i < this.meshes.length; i++) {\n\n        this.meshes[i].visible = false;\n    }\n};\n\n// setting the material\nEnviroView.prototype.createMaterial = function () {\n\n    this.material1 = new THREE.MeshBasicMaterial({\n        map: window.isAndroid ? THREE.ImageUtils.loadTexture('assets/img/1024/obj1.jpg') : THREE.ImageUtils.loadTexture('assets/img/obj1.jpg'),\n        color: 0xffffff,\n        side: THREE.DoubleSide\n    });\n    this.material2 = new THREE.MeshBasicMaterial({\n        map: window.isAndroid ? THREE.ImageUtils.loadTexture('assets/img/obj2.jpg') : THREE.ImageUtils.loadTexture('assets/img/obj2.jpg'),\n        color: 0xffffff,\n        side: THREE.DoubleSide\n    });\n    this.material3 = new THREE.MeshBasicMaterial({\n        map: window.isAndroid ? THREE.ImageUtils.loadTexture('assets/img/1024/obj3.jpg') : THREE.ImageUtils.loadTexture('assets/img/obj3.jpg'),\n        color: 0xffffff,\n        side: THREE.DoubleSide\n    });\n}\n\nEnviroView.prototype.loadObj = function () {\n\n    var manager = new THREE.LoadingManager();\n    manager.onProgress = function (item, loaded, total) {\n    };\n\n    this.objLoader = new THREE.OBJLoader(manager);\n    this.objLoader.load(this.objURL1, this.onLoadObj1.bind(this));\n};\n\nEnviroView.prototype.createMirrorMesh = function (originalMesh, materialMethod) {\n\n    var newMesh = originalMesh.clone();\n        newMesh.position.x = 0;\n        newMesh.position.y = 0;\n        newMesh.position.z = 0;\n\n    var newMeshContainer = new THREE.Object3D();\n        newMeshContainer.add(newMesh);\n        newMeshContainer.rotation.y = THREE.Math.degToRad(180);\n        newMeshContainer.position.x = -100;\n        newMeshContainer.position.y = -10.5;\n        newMeshContainer.position.z = 40;\n\n    return newMeshContainer;\n};\n\nEnviroView.prototype.onLoadObj1 = function (obj) {\n\n    this.model1 = obj;\n\n    this.model1.traverse(this.setMaterial1.bind(this));\n\n    this.model1.scale.x = this.model1.scale.y = this.model1.scale.z = this.scale;\n    this.model1.position.x = 15;\n    this.model1.position.y = -10;\n\n    //this.model1.children[0].geometry.mergeVertices();\n    //this.model1.children[0].geometry.computeFaceNormals();\n    //this.model1.children[0].geometry.computeVertexNormals();\n\n\n    this.scene.add(this.model1);\n\n    // Clone the mesh and add it flipped\n    this.model4 = this.createMirrorMesh(this.model1, this.setMaterial1.bind(this));\n    this.scene.add(this.model4);\n\n\n    this.dispatchEvent({type: 'loaded'});\n\n    this.objLoader.load(this.objURL2, this.onLoadObj2.bind(this));\n};\n\nEnviroView.prototype.setMaterial1 = function (child) {\n\n    if (child instanceof THREE.Mesh) {\n\n        this.meshes.push(child);\n        child.material = ( this.useHatching ) ? this.material1 : this.material;\n    }\n};\n\nEnviroView.prototype.onLoadObj2 = function (obj) {\n\n    this.model2 = obj;\n\n    this.model2.traverse(this.setMaterial2.bind(this));\n\n    this.model2.scale.x = this.model2.scale.y = this.model2.scale.z = this.scale;\n    this.model2.position.x = 15;\n    this.model2.position.y = -10;\n\n    //this.model2.children[0].geometry.mergeVertices();\n    //this.model2.children[0].geometry.computeFaceNormals();\n    //this.model2.children[0].geometry.computeVertexNormals();\n\n    this.scene.add(this.model2);\n\n    // Clone the mesh and add it flipped\n    this.model5 = this.createMirrorMesh(this.model2, this.setMaterial2.bind(this));\n    this.scene.add(this.model5);\n\n    this.dispatchEvent({type: 'loaded'});\n\n    this.objLoader.load(this.objURL3, this.onLoadObj3.bind(this));\n};\n\nEnviroView.prototype.setMaterial2 = function (child) {\n\n    if (child instanceof THREE.Mesh) {\n\n        this.meshes.push(child);\n        child.material = ( this.useHatching ) ? this.material2 : this.material;\n    }\n};\n\nEnviroView.prototype.onLoadObj3 = function (obj) {\n\n    this.model3 = obj;\n\n    this.model3.traverse(this.setMaterial3.bind(this));\n\n    this.model3.scale.x = this.model3.scale.y = this.model3.scale.z = this.scale;\n    this.model3.position.x = 15;\n    this.model3.position.y = -10;\n\n    //this.model3.children[0].geometry.mergeVertices();\n    //this.model3.children[0].geometry.computeFaceNormals();\n    //this.model3.children[0].geometry.computeVertexNormals();\n\n    this.scene.add(this.model3);\n\n    // Clone the mesh and add it flipped\n    this.model6 = this.createMirrorMesh(this.model3, this.setMaterial3.bind(this));\n    this.scene.add(this.model6);\n\n    this.dispatchEvent({type: 'loaded'});\n\n    //this.objLoader.load(this.objURL4, this.onLoadObj4.bind(this));\n};\n\nEnviroView.prototype.setMaterial3 = function (child) {\n\n    if (child instanceof THREE.Mesh) {\n\n        this.meshes.push(child);\n        child.material = ( this.useHatching ) ? this.material3 : this.material;\n    }\n};\n\n\n\n\n\n\n//EnviroView.prototype.onLoadObj4 = function (obj) {\n//\n//    this.model4 = obj;\n//\n//    this.model4.traverse(this.setMaterial4.bind(this));\n//\n//    this.model4.scale.x = this.model4.scale.y = this.model4.scale.z = this.scale;\n//    this.model4.position.x = 15;\n//    this.model4.position.y = -10;\n//\n//    //this.model4.children[0].geometry.mergeVertices();\n//    //this.model4.children[0].geometry.computeVertexNormals();\n//    this.scene.add(this.model4);\n//\n//    this.dispatchEvent({type: 'loaded'});\n//\n//    this.objLoader.load(this.objURL6, this.onLoadObj6.bind(this));\n//};\n//\n//EnviroView.prototype.setMaterial4 = function (child) {\n//\n//    if (child instanceof THREE.Mesh) {\n//\n//        this.meshes.push(child);\n//        child.material = ( this.useHatching ) ? this.material4 : this.material;\n//    }\n//};\n//\n//\n//EnviroView.prototype.onLoadObj5 = function (obj) {\n//\n//    this.model5 = obj;\n//\n//    this.model5.traverse(this.setMaterial5.bind(this));\n//\n//    this.model5.scale.x = this.model5.scale.y = this.model5.scale.z = this.scale;\n//    this.model5.position.x = 15;\n//    this.model5.position.y = -10;\n//\n//    //this.model4.children[0].geometry.mergeVertices();\n//    //this.model4.children[0].geometry.computeVertexNormals();\n//    this.scene.add(this.model5);\n//\n//    this.dispatchEvent({type: 'loaded'});\n//\n//    this.objLoader.load(this.objURL6, this.onLoadObj6.bind(this));\n//};\n//\n//EnviroView.prototype.setMaterial5 = function (child) {\n//\n//    if (child instanceof THREE.Mesh) {\n//\n//        this.meshes.push(child);\n//        child.material = ( this.useHatching ) ? this.material5 : this.material;\n//    }\n//};\n//\n//\n//EnviroView.prototype.onLoadObj6 = function (obj) {\n//\n//    this.model6 = obj;\n//\n//    this.model6.traverse(this.setMaterial6.bind(this));\n//\n//    this.model6.scale.x = this.model6.scale.y = this.model6.scale.z = this.scale;\n//    this.model6.position.x = 15;\n//    this.model6.position.y = -10;\n//\n//    //this.model4.children[0].geometry.mergeVertices();\n//    //this.model4.children[0].geometry.computeVertexNormals();\n//    this.scene.add(this.model6);\n//\n//    this.dispatchEvent({type: 'loaded'});\n//\n//    //this.objLoader.load(this.objURL7, this.onLoadObj2.bind(this));\n//};\n//\n//EnviroView.prototype.setMaterial6 = function (child) {\n//\n//    if (child instanceof THREE.Mesh) {\n//\n//        this.meshes.push(child);\n//        child.material = ( this.useHatching ) ? this.material6 : this.material;\n//    }\n//};\n//\n//EnviroView.prototype.onLoadObj7 = function (obj) {\n//\n//    this.model7 = obj;\n//\n//    this.model7.traverse(this.setMaterial7.bind(this));\n//\n//    this.model7.scale.x = this.model7.scale.y = this.model7.scale.z = this.scale;\n//    this.model7.position.x = 15;\n//    this.model7.position.y = -10;\n//\n//    //this.model4.children[0].geometry.mergeVertices();\n//    //this.model4.children[0].geometry.computeVertexNormals();\n//    this.scene.add(this.model7);\n//\n//    this.dispatchEvent({type: 'loaded'});\n//};\n//\n//EnviroView.prototype.setMaterial7 = function (child) {\n//\n//    if (child instanceof THREE.Mesh) {\n//\n//        this.meshes.push(child);\n//        child.material = ( this.useHatching ) ? this.material7 : this.material;\n//    }\n//};\n\n\nmodule.exports = EnviroView;\n","'use strict';\n\n// GarlandView\n// ------------------------------------------\n// Generative Xmas swag\n// ------------------------------------------\n\nvar GarlandView = ( function () {\n\n    var scene;\n\n    var swag\t\t\t= null,\n        lineMaterial\t= null,\n        colorz\t\t\t= [\n\n            [ 0 / 255, 30 / 255, 0 / 255 ],\n            [ 16 / 255, 79 / 255, 16 / 255 ],\n            [ 7 / 255, 109 / 255, 7 / 255 ],\n            [ 1 / 255, 174 / 255, 0 / 255 ]\n        ];\n\n    var groups = [];\n\n\tfunction init ( container ) {\n\n\t\tscene = container;\n\t\tcreateDecoration();\n\t}\n\n\n\t// Create garland decoration\n\t// ------------------------------------------\n\n\tfunction createDecoration () {\n\n        swag = new THREE.Object3D();\n        swag.scale.set( 0.25, 0.25, 0.25 );\n        scene.add( swag );\n\n        createLineMaterial();\n\n        var i;\n\n        groups = [];\n        for ( i = 0; i < 20; i++ ) {\n\n            var group = createLineGroup();\n            group.scale.set( 0.001, 0.001, 0.001 );\n\n            groups.push( group );\n            swag.add( group );\n        }\n\n        var rotation = 0;\n        for ( i = 0; i < 20; i++ ) {\n\n            var rad = THREE.Math.degToRad( rotation );\n\n            groups[ i ].userData.rotation = rad;\n            rotation += 18;\n\n            groups[ i ].position.x = Math.cos( rad ) * 10.0;\n            groups[ i ].position.y = Math.sin( rad ) * 10.0;\n        }\n    }\n\n\tfunction createLineMaterial () {\n\n\t\tlineMaterial = new THREE.MeshBasicMaterial( {\n\n\t\t\tvertexColors\t: THREE.VertexColors,\n\t\t\tside\t\t\t: THREE.DoubleSide,\n\t\t\tshading\t\t\t: THREE.FlatShading\n\t\t} );\n\t}\n\n\tfunction createLineGeometry () {\n\n\t\tvar lineGeometry = new THREE.PlaneBufferGeometry( 0.5, 3, 1, 3 );\n\n\t\tvar positions\t= lineGeometry.attributes.position.array,\n\t\t\tcolors\t\t= [],\n\t\t\tincsX\t\t= [ 0.0, 0.0, 0.0, THREE.Math.randFloat( 0.1, 0.15 ) ],\n\t\t\tincsZ\t\t= [ 0.0, 0.0, 0.0, 0.0 ],\n\t\t\tincsY\t\t= [ 0.0, 0.0, 0.0, 0.0 ];\n\n\t\tincsZ[ 1 ] = THREE.Math.randFloat( 0.1, 0.8 );\n\t\tincsZ[ 2 ] = incsZ[ 1 ] + THREE.Math.randFloat( 0.1, 0.8 );\n\t\tincsZ[ 3 ] = incsZ[ 2 ] + THREE.Math.randFloat( 0.4, 0.8 );\n\n\t\tincsY[ 1 ] = THREE.Math.randFloat( 0.0, 1.0 );\n\t\tincsY[ 2 ] = incsY[ 1 ] + THREE.Math.randFloat( 0.0, 1.0 );\n\t\tincsY[ 3 ] = incsY[ 2 ] + THREE.Math.randFloat( 0.0, 1.0 );\n\n\t\tvar height = 0;\n\n\t\tfor ( var i = 0; i < positions.length; i+=3 ) {\n\n\t\t\tif ( i % 3 === 0 ) {\n\n\t\t\t\tvar dirInc = ( positions[ i ] < 0 )? 1 : -1;\n\n\t\t\t\tif ( positions[ i + 1 ] === -1.5 ) {\n\n\t\t\t\t\tpositions[ i + 1 ] += incsY[ 0 ];\n\t\t\t\t\tpositions[ i + 2 ] += incsZ[ 0 ];\n\n\t\t\t\t\tcolors.push( colorz[ 0 ][ 0 ], colorz[ 0 ][ 1 ], colorz[ 0 ][ 2 ], 1.0 );\n\n\t\t\t\t} else if ( positions[ i + 1 ] === -0.5 ) {\n\n\t\t\t\t\tpositions[ i + 1 ] += incsY[ 1 ];\n\t\t\t\t\tpositions[ i + 2 ] += incsZ[ 1 ];\n\n\t\t\t\t\tcolors.push( colorz[ 1 ][ 0 ], colorz[ 1 ][ 1 ], colorz[ 1 ][ 2 ], 1.0 );\n\n\t\t\t\t} else if ( positions[ i + 1 ] === 0.5 ) {\n\n\t\t\t\t\tpositions[ i + 1 ] += incsY[ 2 ];\n\t\t\t\t\tpositions[ i + 2 ] += incsZ[ 2 ];\n\n\t\t\t\t\tcolors.push( colorz[ 2 ][ 0 ], colorz[ 2 ][ 1 ], colorz[ 2 ][ 2 ], 1.0 );\n\n\t\t\t\t} else if ( positions[ i + 1 ] === 1.5 ) {\n\n\t\t\t\t\tpositions[ i ] += dirInc * incsX[ 3 ];\n\t\t\t\t\tpositions[ i + 1 ] += incsY[ 3 ];\n\t\t\t\t\tpositions[ i + 2 ] += incsZ[ 3 ];\n\n\t\t\t\t\theight = positions[ i + 1 ];\n\n\t\t\t\t\tcolors.push( colorz[ 3 ][ 0 ], colorz[ 3 ][ 1 ], colorz[ 3 ][ 2 ], 1.0 );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlineGeometry.addAttribute( 'color', new THREE.BufferAttribute( new Float32Array( colors ), 4 ) );\n\n\t\tlineGeometry.applyMatrix( new THREE.Matrix4().makeTranslation( 0, height / 2, 0 ) );\n\t\treturn {\n\n\t\t\tgeometry\t: lineGeometry,\n\t\t\theight\t\t: height\n\t\t};\n\t}\n\n\tfunction createLineGroup () {\n\n\t\tvar group = new THREE.Object3D();\n\n\t\tfor ( var i = 0; i < 10; i++ ) {\n\n\t\t\tvar line = createLine();\n\t\t\tgroup.add( line );\n\t\t}\n\n\t\treturn group;\n\t}\n\n\tfunction createLine () {\n\n\t\tvar meshGeo\t\t= createLineGeometry(),\n\t\t\tmeshLine\t= new THREE.Mesh( meshGeo.geometry, lineMaterial );\n\n\t\t\tmeshLine.rotation.z = THREE.Math.degToRad( THREE.Math.randFloat( -35, 35 ) );\n\t\t\tmeshLine.scale.set(\n\n\t\t\t\t1.0 + THREE.Math.randFloat( -0.2, 0 ),\n\t\t\t\t1.0 + THREE.Math.randFloat( -0.2, 0.2 ),\n\t\t\t\t1.0\n\t\t\t);\n\n\t\treturn meshLine;\n\t}\n\n\n    // Remove garland decoration\n    // ------------------------------------------\n\n    function removeDecoration () {\n\n        scene.remove( swag );\n    }\n\n\n    // Hide / Show\n    // ------------------------------------------\n\n    function showDecoration () {\n\n        for ( var i = 0; i < 20; i++ ) {\n\n            var tweenData\t= { value : 0.001 },\n                group\t\t= groups[ i ];\n\n            ( function ( tweenData, group, i ) {\n\n                TweenMax.to( tweenData, 0.5, {\n\n                    value\t\t: 1,\n                    delay\t\t: 0.1 * i,\n                    ease\t\t: Power2.easeInOut,\n                    onUpdate\t: function () {\n\n                        group.scale.set( tweenData.value, tweenData.value, tweenData.value );\n                        group.rotation.z = group.userData.rotation * 0.8 + ( tweenData.value * group.userData.rotation * 0.2 );\n                    }\n                } );\n\n            } )( tweenData, group, i );\n        }\n    }\n\n    function hideDecoration () {\n\n        var tweenData\t= { value : 1 };\n\n        TweenMax.to( tweenData, 0.75, {\n\n            value\t\t: 0.001,\n            ease\t\t: Power2.easeInOut,\n            onUpdate\t: function () {\n\n                for ( var i = 0; i < 20; i++ ) {\n\n                    var group = groups[ i ];\n                    group.scale.set( tweenData.value, tweenData.value, tweenData.value );\n                }\n            }\n        } );\n    }\n\n\n\t// API\n\t// ------------------------------------------\n\n\treturn {\n\n\t\tinit\t: init,\n\t\thide\t: hideDecoration,\n\t\tshow\t: showDecoration,\n        create\t: createDecoration,\n        remove\t: removeDecoration\n\t}\n\n} )();\n\nmodule.exports = GarlandView;","'use strict';\n\nvar LoaderView = require('./LoaderView');\n\nvar IntroView = function (parentView) {\n\n    THREE.EventDispatcher.call(this);\n\n    this.parentView = parentView;\n    this.domElement = document.getElementById(\"intro\");\n    this.joinButton = document.querySelectorAll(\".btn-join\");\n    //this.twitterName = document.getElementById(\"name\");\n\n    this.loader = null;\n\n    this.init();\n};\n\nIntroView.prototype = Object.create(THREE.EventDispatcher.prototype);\n\nIntroView.prototype.init = function () {\n\n    this.onLoadedBind = this.onLoaded.bind(this);\n    this.loader = new LoaderView(this.domElement);\n    this.loader.addEventListener('loaded', this.onLoadedBind);\n\n    this.onClickBind = this.onClickJoin.bind(this);\n\n    for (var i=0; i<this.joinButton.length; i++) {\n\n        this.joinButton[i].addEventListener('click', this.onClickBind);\n    }\n\n    this.domElement.classList.remove('hide');\n};\n\nIntroView.prototype.goFullscreen = function (e) {\n    var\n        el = document.documentElement\n        , rfs =\n            el.requestFullScreen\n            || el.webkitRequestFullScreen\n            || el.mozRequestFullScreen\n        ;\n    rfs.call(el);\n};\n\nIntroView.prototype.onClickJoin = function (e) {\n\n    this.destroy();\n\n    this.dispatchEvent({\n        type: 'clickJoin', data: {\n            username : e.currentTarget.dataset.color\n            // username : this.twitterName.value\n        }\n    });\n\n    this.goFullscreen(e);\n\n};\n\nIntroView.prototype.destroy = function () {\n\n    this.loader.destroy();\n    this.domElement.classList.add('hide');\n\n    for (var i=0; i<this.joinButton.length; i++) {\n\n        this.joinButton[i].removeEventListener('click', this.onClickBind);\n    }\n};\n\nIntroView.prototype.preloadedElement = function () {\n\n    this.loader.preloadedElement();\n};\n\nIntroView.prototype.onLoaded = function () {\n\n    this.parentView.onLoaded();\n\n    this.domElement.classList.remove('loading');\n    this.loader.removeEventListener('loaded', this.onLoadedBind);\n};\n\nmodule.exports = IntroView;","'use strict';\n\n\nvar LoaderView = function (containerEl) {\n\n    THREE.EventDispatcher.call(this);\n\n    this.total = 5;\n    this.loaded = 0;\n\n    this.dpi = window.devicePixelRatio;\n    this.size = 100 * this.dpi;\n\n    this.containerEl = containerEl;\n    this.canvas = document.getElementById('loader');\n    this.ctx = this.canvas.getContext('2d');\n\n    this.center = this.size * 0.5;\n    this.radiusInner = this.center - ( 21 * this.dpi );\n    this.radiusOuter = this.center - ( 12 * this.dpi );\n    this.PI2 = Math.PI * 2;\n\n    this.currentProgress = 0;\n    this.targetProgress = 0;\n\n    this.isActive = true;\n\n    this.init();\n};\n\nLoaderView.prototype = Object.create(THREE.EventDispatcher.prototype);\n\nLoaderView.prototype.init = function () {\n\n    this.canvas.width = this.size;\n    this.canvas.height = this.size;\n\n    this.draw();\n    requestAnimationFrame(this.update.bind(this));\n};\n\nLoaderView.prototype.destroy = function () {\n\n    this.isActive = false;\n};\n\nLoaderView.prototype.preloadedElement = function () {\n\n    this.loaded++;\n    this.targetProgress = this.loaded / this.total;\n};\n\nLoaderView.prototype.update = function () {\n\n    if (this.targetProgress !== this.currentProgress) {\n\n        this.currentProgress += ( this.targetProgress - this.currentProgress ) / 25;\n        if (Math.abs(this.currentProgress - this.targetProgress) < 0.01) this.currentProgress = this.targetProgress;\n\n        this.draw();\n        if (this.currentProgress === 1) {\n\n            this.canvas.classList.add('hidden');\n            this.dispatchEvent({type: 'loaded'});\n        }\n    }\n\n    if (this.isActive) {\n\n        requestAnimationFrame(this.update.bind(this));\n    }\n};\n\nLoaderView.prototype.draw = function () {\n\n    this.clear();\n\n    // Inner circle\n    this.ctx.beginPath();\n    this.ctx.arc(this.center, this.center, this.radiusInner, 0, this.PI2, false);\n    this.ctx.fillStyle = '#ffffff';\n    this.ctx.fill();\n\n\n    // Outer circle\n    this.ctx.beginPath();\n    this.ctx.arc(this.center, this.center, this.radiusOuter, 0, this.PI2 * this.currentProgress, false);\n    this.ctx.lineWidth = 8 * this.dpi;\n    this.ctx.strokeStyle = '#ffffff';\n    this.ctx.stroke();\n};\n\nLoaderView.prototype.clear = function () {\n\n    this.ctx.clearRect(0, 0, this.size, this.size);\n};\n\nmodule.exports = LoaderView;","'use strict';\n\nvar PathType = require('../path/PathType');\n\n// Plane View\n// ------------------------------------------------------------\n// Set of paths according to a side of the Relativity scene\n// ------------------------------------------------------------\n\nvar PlaneView = function (controller, scene, rotation, paths) {\n\n    this.controller = controller;\n    this.scene = scene;\n    this.paths = paths;\n    this.rotation = rotation;\n\n    this.init();\n};\n\n\n// Initialization\n// ------------------------------------------------------------\n\nPlaneView.prototype.init = function () {\n\n};\n\n\n// Paths\n// ------------------------------------------------------------\n\nPlaneView.prototype.getPaths = function () {\n\n    return this.paths;\n};\n\nmodule.exports = PlaneView;","'use strict';\n\nvar PlaneView = require('./PlaneView');\nvar PathType = require('../path/PathType');\nvar SimpleStairsView = require('./SimpleStairsView');\n\n// Planes Controller\n// ------------------------------------------------------------\n// Controller of the PlaneView collection.\n// The idea is have all views as inner faces of a cube.\n// Keep track of the current planeView and all that jazz.\n// ------------------------------------------------------------\n\nvar PlanesController = function (scene) {\n\n    this.scene = scene;\n\n    this.container = null;\n    this.material = null;\n    this.materialPortal = null;\n    this.materialPlane = null;\n\n    this.planes = [];\n    this.currentIndexPlane = -1;\n    this.currentPlane = null;\n\n    this.isMaterialDebug = false;\n    this.isSimple = false;\n\n    this.init();\n};\n\n\n// Initialization\n// ------------------------------------------------------------\n\nPlanesController.prototype.init = function () {\n\n    this.createElements();\n};\n\nPlanesController.prototype.createElements = function () {\n\n    this.container = new THREE.Object3D();\n    this.scene.add(this.container);\n\n    this.createMaterials();\n    this.createPlanes();\n};\n\nPlanesController.prototype.createMaterials = function () {\n\n    this.materialPortal = new THREE.MeshBasicMaterial({color: 0xffffff, transparent: true, opacity: 0.25});\n    this.materialPlane = new THREE.MeshBasicMaterial({\n        color: 0xcc0000,\n        transparent: true,\n        opacity: 0.5,\n        side: THREE.DoubleSide\n    });\n};\n\nPlanesController.prototype.createPlanes = function () {\n\n    if (this.isSimple) {\n\n        this.planes.push(new SimpleStairsView(this, this.container, null, null, 0xffffff));\n        this.planes.push(new SimpleStairsView(this, this.container, 'z', 90, 0x00ff00));\n        this.planes.push(new SimpleStairsView(this, this.container, 'z', 180, 0x0000ff));\n        this.planes.push(new SimpleStairsView(this, this.container, 'z', 270, 0xff00ff));\n\n    } else {\n\n        // Info coming from the editor\n\n        var rotation = [\n\n            {\n\n                x: THREE.Math.degToRad(0),\n                y: THREE.Math.degToRad(0),\n                z: THREE.Math.degToRad(0)\n            }, {\n\n                x: THREE.Math.degToRad(-90),\n                y: THREE.Math.degToRad(0),\n                z: THREE.Math.degToRad(0)\n            }, {\n\n                x: THREE.Math.degToRad(0),\n                y: THREE.Math.degToRad(0),\n                z: THREE.Math.degToRad(-90)\n            }\n        ];\n\n        var paths = [\n\n            [ // Angle 0\n\n                {\n                    type: PathType.PATH,\n                    points: [new THREE.Vector3(-40.145554111676596, -77.86530687146349, -18.142572350197113), new THREE.Vector3(29.173672626142178, -18.72883707468776, -17.92967521825286), new THREE.Vector3(29.682724085881578, 6.5091911402555915, -56.64283011246332)]\n                },\n                {\n                    type: PathType.PATH,\n                    points: [new THREE.Vector3(29.682724085881578, 6.5091911402555915, -56.64283011246332), new THREE.Vector3(40.54196801356946, 8.441052324467567, -57.330102972454576), new THREE.Vector3(40.24294047874117, 8.441052324467567, -35.33225564304873), new THREE.Vector3(39.7900042117252, 30.36218771305476, -2.0121707301641667), new THREE.Vector3(39.51388979488216, 30.36218771305476, 18.300081754040363)]\n                },\n                {\n                    type: PathType.PATH,\n                    points: [new THREE.Vector3(29.682724085881578, 6.5091911402555915, -56.64283011246332), new THREE.Vector3(-17.614884835602926, 32.563878572707058, -53.98160921020801), new THREE.Vector3(-72.76813689063263, -10.597231856632646, -56.01829412631548), new THREE.Vector3(-80.86513927382109, -10.597231856632646, -57.01829412631548)]\n                },\n\n                {\n                    type: PathType.PATH_PORTAL,\n                    points: [new THREE.Vector3(-40.145554111676596, -77.86530687146349, -18.142572350197113), new THREE.Vector3(-88.65797997222761, -77.86530687146349, -18.142572350197113)]\n                },\n                {\n                    type: PathType.PATH_PORTAL,\n                    points: [new THREE.Vector3(29.682724085881578, 6.5091911402555915, -56.64283011246332), new THREE.Vector3(34.21469057348185, 5, -74.41448570101069)]\n                },\n                {\n                    type: PathType.PATH_PORTAL,\n                    points: [new THREE.Vector3(-80.86513927382109, -10.597231856632646, -57.01829412631548), new THREE.Vector3(-117.31086207505354, -10.597231856632646, -57.01829412631548)]\n                },\n                {\n                    type: PathType.PATH_PORTAL,\n                    points: [new THREE.Vector3(39.51388979488216, 30.36218771305476, 18.300081754040363), new THREE.Vector3(39.51388979488216, 30.36218771305476, 33.99365360007793)]\n                }\n\n            ], [ // Angle 1\n\n                {\n                    type: PathType.PATH,\n                    points: [new THREE.Vector3(15.43071614607134, 5, 48.27399526421076), new THREE.Vector3(42.40880163885059, 5, 46.593988050362185), new THREE.Vector3(53.00461152311037, 5, 36.820423959652494), new THREE.Vector3(52.44122653503668, 5, -3.181439604184754)]\n                },\n                {\n                    type: PathType.PATH,\n                    points: [new THREE.Vector3(52.44122653503668, 5, -3.181439604184754), new THREE.Vector3(53.9846495394637, 5, -57.63885955444237)]\n                },\n                {\n                    type: PathType.PATH,\n                    points: [new THREE.Vector3(52.44122653503668, 5, -3.181439604184754), new THREE.Vector3(41.75685153795107, 5, -5.316301737160454), new THREE.Vector3(42.798240418377326, -25.58396836017487, 22.378110883369583)]\n                },\n                {\n                    type: PathType.PATH,\n                    points: [new THREE.Vector3(53.9846495394637, 5, -57.63885955444237), new THREE.Vector3(4.2416246369054065, -37.63630507036658, -60.0830134444261)]\n                },\n                {\n                    type: PathType.PATH,\n                    points: [new THREE.Vector3(-33.5923087583947, -16.17371430001053, -82.79532072921954), new THREE.Vector3(17.5522074777325, -16.17371430001053, -82.78476668044753)]\n                },\n\n                {\n                    type: PathType.PATH_PORTAL,\n                    points: [new THREE.Vector3(53.9846495394637, 5, -57.63885955444237), new THREE.Vector3(53.4847128562336, 5, -75.04237841516664)]\n                },\n                {\n                    type: PathType.PATH_PORTAL,\n                    points: [new THREE.Vector3(4.2416246369054065, -37.63630507036658, -60.0830134444261), new THREE.Vector3(-24.413615270092528, -54.97445793219066, -71.87721395322374)]\n                },\n                {\n                    type: PathType.PATH_PORTAL,\n                    points: [new THREE.Vector3(-33.5923087583947, -16.17371430001053, -82.79532072921954), new THREE.Vector3(-68.99517410415503, -16.17371430001053, -84.20350768260303)]\n                },\n                {\n                    type: PathType.PATH_PORTAL,\n                    points: [new THREE.Vector3(17.5522074777325, -16.17371430001053, -82.78476668044753), new THREE.Vector3(41.446124398930095, -16.17371430001053, -82.41122177801529)]\n                }\n\n\n            ], [ // Angle 2\n\n                {\n                    type: PathType.PATH,\n                    points: [new THREE.Vector3(67.27714018798753, 15.675689418423307, -67.10191287979987), new THREE.Vector3(68.01958684217736, -7.983030066272601, -34.44291268295005)]\n                },\n                {\n                    type: PathType.PATH,\n                    points: [new THREE.Vector3(68.01958684217736, -7.983030066272601, -34.44291268295005), new THREE.Vector3(57.425358048795616, -13.375139727883699, -26.436471863324204), new THREE.Vector3(57.425358048795616, -38.46084461171769, -3.352890838726818)]\n                },\n                {\n                    type: PathType.PATH,\n                    points: [new THREE.Vector3(68.01958684217736, -7.983030066272601, -34.44291268295005), new THREE.Vector3(72.03992255676324, -14.252569186835231, -11.410112235954887), new THREE.Vector3(72.03992255676324, -14.252569186835231, 20.57623611616867)]\n                },\n                {\n                    type: PathType.PATH,\n                    points: [new THREE.Vector3(-13.736455685686263, 22.431276320910396, -89.4950558699751), new THREE.Vector3(-50.95985129060556, 22.431276320910396, -89.49379682526708), new THREE.Vector3(-50.43902138674909, 22.431276320910396, -142.86106527520482)]\n                },\n\n                {\n                    type: PathType.PATH_PORTAL,\n                    points: [new THREE.Vector3(67.27714018798753, 15.675689418423307, -67.10191287979987), new THREE.Vector3(100.21464349882132, 21.111495763959713, -65.41856939347188)]\n                },\n                {\n                    type: PathType.PATH_PORTAL,\n                    points: [new THREE.Vector3(57.425358048795616, -38.46084461171769, -3.352890838726818), new THREE.Vector3(58.08331423398176, -44.6697280245949, 21.70381019307528)]\n                },\n                {\n                    type: PathType.PATH_PORTAL,\n                    points: [new THREE.Vector3(72.03992255676324, -14.252569186835231, 20.57623611616867), new THREE.Vector3(75.16985708828051, -14.393751459834155, 115.35374198948426)]\n                },\n                {\n                    type: PathType.PATH_PORTAL,\n                    points: [new THREE.Vector3(-13.736455685686263, 22.431276320910396, -89.4950558699751), new THREE.Vector3(8.363927007499047, 22.431276320910396, -88.41425635451996)]\n                },\n                {\n                    type: PathType.PATH_PORTAL,\n                    points: [new THREE.Vector3(-50.43902138674909, 22.431276320910396, -142.86106527520482), new THREE.Vector3(-50.86327572821005, 22.431276320910396, -166.62011338174904)]\n                }\n\n            ]\n        ];\n\n        this.planes.push(new PlaneView(this, this.container, rotation[0], paths[0]));\n        this.planes.push(new PlaneView(this, this.container, rotation[1], paths[1]));\n        this.planes.push(new PlaneView(this, this.container, rotation[2], paths[2]));\n    }\n};\n\n\n// Setters\n// ------------------------------------------------------------\n\nPlanesController.prototype.setRandomPlane = function () {\n\n    var indexPlane = Math.min(( this.planes.length - 1 ), THREE.Math.randInt(0, this.planes.length));\n\n    while (indexPlane === this.currentIndexPlane) {\n        indexPlane = Math.min(( this.planes.length - 1 ), THREE.Math.randInt(0, this.planes.length));\n    }\n\n    this.currentIndexPlane = indexPlane;\n    this.currentPlane = this.planes[this.currentIndexPlane];\n\n    // Rotate the container as needed ( reset rotation first )\n\n    if (this.isSimple) {\n\n        this.container.rotation.x = THREE.Math.degToRad(0);\n        this.container.rotation.y = THREE.Math.degToRad(0);\n        this.container.rotation.z = THREE.Math.degToRad(0);\n\n        if (this.currentPlane.rotationAxis !== null) {\n\n            this.container.rotation[this.currentPlane.rotationAxis] = -THREE.Math.degToRad(this.currentPlane.rotationDegrees);\n        }\n\n    } else {\n\n        this.container.rotation.x = this.currentPlane.rotation.x;\n        this.container.rotation.y = this.currentPlane.rotation.y;\n        this.container.rotation.z = this.currentPlane.rotation.z;\n    }\n};\n\n\n// Getters\n// ------------------------------------------------------------\n\nPlanesController.prototype.getCurrentPlane = function () {\n\n    return this.currentPlane;\n};\n\nPlanesController.prototype.getCurrentIndex = function () {\n\n    return this.currentIndexPlane;\n};\n\nPlanesController.prototype.getCurrentPaths = function () {\n\n    return this.currentPlane.getPaths();\n};\n\nPlanesController.prototype.getRotation = function () {\n\n    return this.container.rotation;\n};\n\n\n// Toggle materials ( debug )\n// ------------------------------------------------------------\n\nPlanesController.prototype.toggleMaterials = function () {\n\n    if (this.isSimple) {\n\n        this.isMaterialDebug = !this.isMaterialDebug;\n\n        for (var i = 0; i < this.planes.length; i++) {\n\n            this.planes[i].toggleMaterials(this.isMaterialDebug);\n        }\n    }\n};\n\n\nmodule.exports = PlanesController;","'use strict';\n\nvar PathType = require('../path/PathType');\n\n// Simple Stairs View\n// ------------------------------------------------------------\n// A temporary set of geometries to represent\n// stairs and place the paths on top of them\n// ------------------------------------------------------------\n\nvar SimpleStairsView = function (controller, scene, rotationAxis, rotationDegrees, color) {\n\n    this.controller = controller;\n    this.scene = scene;\n    this.container = null;\n    this.plane = null;\n    this.material = controller.material;\n    this.materialPortal = controller.materialPortal;\n    this.materialPlane = controller.materialPlane;\n    this.materialColor = color;\n\n    this.SIZE = 50;\n\n    this.STEP_SEGMENTS = 2;\n    this.PLATFORM_SEGMENTS = 20;\n    this.PORTAL_SEGMENTS = 2;\n    this.PLANE_SEGMENTS = 2;\n\n    this.paths = [];\n\n    this.rotationAxis = rotationAxis || null;\n    this.rotationDegrees = rotationDegrees || null;\n\n    this.init();\n};\n\n\n// Initialization\n// ------------------------------------------------------------\n\nSimpleStairsView.prototype.init = function () {\n\n    this.createElements();\n};\n\nSimpleStairsView.prototype.createElements = function () {\n\n    this.container = new THREE.Object3D();\n    this.scene.add(this.container);\n\n    this.createPlane();\n    this.createTemporaryScene();\n\n    if (this.rotationAxis !== null) {\n\n        this.container.rotation[this.rotationAxis] = THREE.Math.degToRad(this.rotationDegrees);\n    }\n};\n\nSimpleStairsView.prototype.createPlane = function () {\n\n    var geometry = new THREE.PlaneBufferGeometry(this.SIZE, this.SIZE, this.PLANE_SEGMENTS, this.PLANE_SEGMENTS);\n\n    this.plane = new THREE.Mesh(geometry, this.materialPlane);\n    this.plane.position.y = -25;\n    this.plane.rotation.x = THREE.Math.degToRad(-90);\n\n    // this.container.add( this.plane );\n};\n\nSimpleStairsView.prototype.createTemporaryScene = function () {\n\n    this.createPlatform({width: 5, height: 1, depth: 20}, new THREE.Vector3(0, 0.5 - 25, 10 - 25));\n    this.createStairSet(9, {\n        width: 5,\n        height: 1,\n        depth: 1\n    }, new THREE.Vector3(0, 1.5 - 25, 20 - 25), new THREE.Vector3(0, 1, 1));\n    this.createPlatform({width: 5, height: 1, depth: 19}, new THREE.Vector3(0, 10.5 - 25, 38 - 25));\n\n    this.paths.push({\n        type: PathType.PATH,\n        points: [new THREE.Vector3(0, 4.5 - 25, 0 - 25), new THREE.Vector3(0, 4.5 - 25, 15 - 25), new THREE.Vector3(0, 14.5 - 25, 25 - 25), new THREE.Vector3(0, 14.5 - 25, 45 - 25)]\n    });\n\n    this.createPortal({width: 5, height: 10, depth: 1}, new THREE.Vector3(0, 5.5 - 25, -5.5 - 25));\n    this.createPortal({width: 5, height: 10, depth: 1}, new THREE.Vector3(0, 15.5 - 25, 50 - 25));\n    this.paths.push({\n        type: PathType.PATH_PORTAL,\n        points: [new THREE.Vector3(0, 4.5 - 25, 0 - 25), new THREE.Vector3(0, 4.5 - 25, -10 - 25)]\n    });\n    this.paths.push({\n        type: PathType.PATH_PORTAL,\n        points: [new THREE.Vector3(0, 14.5 - 25, 45 - 25), new THREE.Vector3(0, 14.5 - 25, 55 - 25)]\n    });\n\n    this.createStairSet(9, {\n        width: 1,\n        height: 1,\n        depth: 5\n    }, new THREE.Vector3(2.5, 9.5 - 25, 45 - 25), new THREE.Vector3(1, -1, 0));\n    this.createPlatform({width: 11.5, height: 1, depth: 5}, new THREE.Vector3(11.75 + 5, 0.5 - 25, 45 - 25));\n    this.createPlatform({width: 5, height: 1, depth: 42.5}, new THREE.Vector3(20, 0.5 - 25, 21.25 - 25));\n    this.createPlatform({width: 15, height: 1, depth: 5}, new THREE.Vector3(10, 0.5 - 25, 2.5 - 25));\n\n    this.paths.push({\n        type: PathType.PATH,\n        points: [new THREE.Vector3(0, 14.5 - 25, 45 - 25), new THREE.Vector3(10, 4.5 - 25, 45 - 25), new THREE.Vector3(20, 4.5 - 25, 45 - 25)]\n    });\n    this.paths.push({\n        type: PathType.PATH,\n        points: [new THREE.Vector3(20, 4.5 - 25, 45 - 25), new THREE.Vector3(20, 4.5 - 25, 0 - 25)]\n    });\n    this.paths.push({\n        type: PathType.PATH,\n        points: [new THREE.Vector3(20, 4.5 - 25, 0 - 25), new THREE.Vector3(0, 4.5 - 25, 0 - 25)]\n    });\n\n    this.createStairSet(9, {\n        width: 1,\n        height: 1,\n        depth: 5\n    }, new THREE.Vector3(-2.5, 9.5 - 25, 45 - 25), new THREE.Vector3(-1, -1, 0));\n    this.createPlatform({width: 11.5, height: 1, depth: 5}, new THREE.Vector3(-11.75 - 5, 0.5 - 25, 45 - 25));\n    this.createPlatform({width: 5, height: 1, depth: 42.5}, new THREE.Vector3(-20, 0.5 - 25, 21.25 - 25));\n    this.createPlatform({width: 15, height: 1, depth: 5}, new THREE.Vector3(-10, 0.5 - 25, 2.5 - 25));\n\n    this.paths.push({\n        type: PathType.PATH,\n        points: [new THREE.Vector3(0, 14.5 - 25, 45 - 25), new THREE.Vector3(-10, 4.5 - 25, 45 - 25), new THREE.Vector3(-20, 4.5 - 25, 45 - 25)]\n    });\n    this.paths.push({\n        type: PathType.PATH,\n        points: [new THREE.Vector3(-20, 4.5 - 25, 45 - 25), new THREE.Vector3(-20, 4.5 - 25, 0 - 25)]\n    });\n    this.paths.push({\n        type: PathType.PATH,\n        points: [new THREE.Vector3(-20, 4.5 - 25, 0 - 25), new THREE.Vector3(0, 4.5 - 25, 0 - 25)]\n    });\n};\n\n\n// Stair creation\n// ------------------------------------------------------------\n\nSimpleStairsView.prototype.createStairSet = function (numSteps, sizeStep, positionIni, positionInc) {\n\n    var positionStep = positionIni.clone();\n\n    for (var i = 0; i < numSteps; i++) {\n\n        // create and add current step\n        var step = this.createStep(sizeStep);\n        step.position.copy(positionStep);\n        step.userData.noIntersection = true;\n\n        this.container.add(step);\n\n        // Increment position for the next step\n        positionStep.add(positionInc);\n    }\n};\n\nSimpleStairsView.prototype.createStep = function (sizeStep) {\n\n    var stepGeometry = new THREE.BoxGeometry(sizeStep.width, sizeStep.height, sizeStep.depth, this.STEP_SEGMENTS, this.STEP_SEGMENTS, this.STEP_SEGMENTS),\n        stepMaterial = this.material,\n        step = new THREE.Mesh(stepGeometry, stepMaterial);\n\n    return step;\n};\n\nSimpleStairsView.prototype.createPlatform = function (sizePlatform, positionPlatform) {\n\n    var platformGeometry = new THREE.BoxGeometry(sizePlatform.width, sizePlatform.height, sizePlatform.depth, this.PLATFORM_SEGMENTS, this.PLATFORM_SEGMENTS, this.PLATFORM_SEGMENTS),\n        platformMaterial = this.material,\n        platform = new THREE.Mesh(platformGeometry, platformMaterial);\n    platform.position.copy(positionPlatform);\n    platform.userData.noIntersection = true;\n\n    this.container.add(platform);\n};\n\nSimpleStairsView.prototype.createPortal = function (sizePortal, positionPortal) {\n\n    var portalGeometry = new THREE.BoxGeometry(sizePortal.width, sizePortal.height, sizePortal.depth, this.PORTAL_SEGMENTS, this.PORTAL_SEGMENTS, this.PORTAL_SEGMENTS),\n        portalMaterial = this.materialPortal,\n        portal = new THREE.Mesh(portalGeometry, portalMaterial);\n    portal.position.copy(positionPortal);\n    portal.userData.noIntersection = true;\n\n    this.container.add(portal);\n};\n\n\n// Paths\n// ------------------------------------------------------------\n\nSimpleStairsView.prototype.getPaths = function () {\n\n    return this.paths;\n};\n\n\n// Toggle materials ( debug )\n// ------------------------------------------------------------\n\nSimpleStairsView.prototype.toggleMaterials = function (isDebug) {\n\n    if (isDebug) {\n\n        // TODO: Temp for testing. Specific color per view\n        this.material = this.controller.materialPlane.clone();\n        this.material.color.setHex(this.materialColor);\n        this.material.opacity = 0.7;\n\n    } else {\n\n        this.material = this.controller.material;\n    }\n\n    // Force update materials\n    for (var i = 0; i < this.container.children.length; i++) {\n\n        var mesh = this.container.children[i];\n\n        if (mesh.material !== this.materialPortal) {\n\n            mesh.material = this.material;\n            mesh.material.needsUpdate = true;\n        }\n    }\n};\n\nmodule.exports = SimpleStairsView;","/**\n * Created by siroko on 16/01/15.\n */\n\n'use strict';\n\nvar Paths = require('../path/Paths');\nvar DirectionHelper = require('../ui/DirectionHelper');\nvar PlanesController = require('./PlanesController');\nvar EnviroView = require('./EnviroView');\nvar IntroView = require('./IntroView');\nvar Character = require('./Character');\nvar DebugPanel = require('../utils/DebugPanel');\nvar Audio = require('../audio/Audio');\nvar PortalRTT = require('../path/PortalRTT');\nvar Simulator = require('../utils/Simulator');\n\nvar View = function (socket) {\n\n    this.socket = socket;\n\n    this.introView = null;\n    this.scene = null;\n    this.camera = null;\n    this.target = null;\n    this.renderer = null;\n    this.container = null;\n    this.raycaster = null;\n\n    this.data = null;\n    this.users = [];\n    this.userContainers = [];\n    this.counter = 0;\n\n    this.directionHelper = null;\n    this.paths = null;\n    this.planesController = null;\n    this.enviromentView = null;\n    this.audio = null;\n    this.portalRTT = null;\n    this.sphere = null;\n\n    this.isEnvironmentOn = true;\n\n    this.isVR = false;\n    this.isIOS = ( navigator.userAgent.match(/(iPad|iPhone|iPod)/g) ? true : false );\n\n    this.logSocketInfo = false;\n\n    this.clock = new THREE.Clock(true);\n\n    this.joined = false;\n\n    this.FOG_FAR = 320;//220;//180;\n\n    if (DEBUG_MODE) this.debugPanel = new DebugPanel(this);\n\n    this.character = null;\n\n    this.textures = {\n\n        '#ff0000' : THREE.ImageUtils.loadTexture('assets/img/dodecahedron_red.jpg'),\n        '#00ff00' : THREE.ImageUtils.loadTexture('assets/img/dodecahedron_green.jpg'),\n        '#ffffff' : THREE.ImageUtils.loadTexture('assets/img/dodecahedron_blue.jpg')\n    };\n};\n\nView.prototype.init = function () {\n\n    window.NO_HATCHING = true;\n    this.addEvents();\n    this.setup();\n\n    this.createGeometry();\n    this.createDirectionHelper();\n    this.createStairsController();\n\n    this.createEnviroment();\n    this.createPortalRTT();\n    this.createAudio();\n    this.resize(window.innerWidth, window.innerHeight);\n    this.animate();\n};\n\nView.prototype.joinRoom = function (e) {\n\n    this.audio.playFx(2);\n\n    if (!window.IS_DESKTOP) {\n\n        this.planesController.setRandomPlane();\n        this.createPaths();\n\n        this.socket.join( { username: e.data.username } );\n        this.joined = true;\n    }\n};\n\nView.prototype.addEvents = function () {\n\n    this.socket.addEventListener('updateUsersData', this.onRefreshUsers.bind(this));\n    this.socket.addEventListener('addChar', this.onAddChar.bind(this));\n    this.socket.addEventListener('removeChar', this.onRemoveChar.bind(this));\n\n    this.bindOrientationControls = this.setOrientationControls.bind(this);\n    window.addEventListener('deviceorientation', this.bindOrientationControls, true);\n};\n\nView.prototype.onRefreshUsers = function (data) {\n\n    for (var prop in data.data.users) {\n\n        var obj = data.data.users[prop];\n\n        if (this.users[obj.id] !== undefined && obj.uid != this.socket.uid) {\n\n            this.users[obj.id].cache_position.x = obj.x;\n            this.users[obj.id].cache_position.y = obj.y;\n            this.users[obj.id].cache_position.z = obj.z;\n            this.users[obj.id].cache_rotation.x = obj.rotationX;\n            this.users[obj.id].cache_rotation.y = obj.rotationY;\n            this.users[obj.id].cache_rotation.z = obj.rotationZ;\n            this.users[obj.id].cache_rotation_world.x = obj.rotationWorldX;\n            this.users[obj.id].cache_rotation_world.y = obj.rotationWorldY;\n            this.users[obj.id].cache_rotation_world.z = obj.rotationWorldZ;\n\n            //console.log(obj.uid, this.users[obj.id].cache_rotation_world.x, this.users[obj.id].cache_rotation_world.y, this.users[obj.id].cache_rotation_world.z)\n        }\n    }\n};\n\nView.prototype.onRemoveChar = function (data) {\n\n    if (this.logSocketInfo) console.log('Removing', data);\n\n    this.userContainers[data.id].remove(this.users[data.id]);\n    this.users[data.id] = null;\n    delete this.users[data.id];\n\n    this.scene.remove(this.userContainers[data.id]);\n    this.userContainers[data.id] = null;\n    delete this.userContainers[data.id];\n\n};\n\nView.prototype.onAddChar = function (data) {\n\n    if (this.logSocketInfo) console.log('dispatched addChar', data);\n\n    for (var prop in data.users) {\n        if (data.users[prop].uid != this.socket.uid ) {\n\n            if (this.users[data.users[prop].id] === undefined) {\n\n                this.userContainers[data.users[prop].id] = new THREE.Object3D();\n\n                // The mesh will be decided by the info that is stored in the userName\n                //var color = new THREE.Color(data.users[prop].name);\n                //var material = new THREE.MeshBasicMaterial({ side: THREE.FrontSide, color: color, transparent: true });\n\n                var texture = this.textures[data.users[prop].name];\n                var material = new THREE.MeshBasicMaterial({ side: THREE.FrontSide, color: 0xbbbbbb, transparent: true });\n                //var material = [\n                //\n                //    new THREE.MeshBasicMaterial({ side: THREE.FrontSide, color: color }),\n                //    new THREE.MeshBasicMaterial( { color: 0xcccccc, wireframe: true} )\n                //] ;\n\n\n                this.character.meshes[0].geometry.center();\n\n                //this.users[data.users[prop].id] = new THREE.Mesh(this.character.meshes[0].geometry, this.character.material1);\n                this.users[data.users[prop].id] = new THREE.Mesh(this.character.meshes[0].geometry, material);\n                //this.users[data.users[prop].id] = THREE.SceneUtils.createMultiMaterialObject(this.character.meshes[0].geometry, material);\n\n                this.users[data.users[prop].id].scale.x = this.character.scale;\n                this.users[data.users[prop].id].scale.y = this.character.scale;\n                this.users[data.users[prop].id].scale.z = this.character.scale;\n\n                // Far away, to hide it at the beginning\n                data.users[prop].x = 0;\n                data.users[prop].y = 0;\n                data.users[prop].z = 0;\n\n                this.users[data.users[prop].id].material.opacity = 0;\n                this.users[data.users[prop].id].userData.fading = false;\n                this.users[data.users[prop].id].userData.initial = true;\n\n\n                this.users[data.users[prop].id].position.x = data.users[prop].x;\n                this.users[data.users[prop].id].position.y = data.users[prop].y;\n                this.users[data.users[prop].id].position.z = data.users[prop].z;\n\n                this.users[data.users[prop].id].rotation.x = data.users[prop].rotationX;\n                this.users[data.users[prop].id].rotation.y = data.users[prop].rotationY;\n                this.users[data.users[prop].id].rotation.z = data.users[prop].rotationZ;\n\n                this.userContainers[data.users[prop].id].rotation.x = data.users[prop].rotationWorldX;\n                this.userContainers[data.users[prop].id].rotation.y = data.users[prop].rotationWorldY;\n                this.userContainers[data.users[prop].id].rotation.z = data.users[prop].rotationWorldZ;\n\n                this.users[data.users[prop].id].cache_position = {\n                    x: data.users[prop].x,\n                    y: data.users[prop].y,\n                    z: data.users[prop].z\n                };\n                this.users[data.users[prop].id].cache_rotation = {\n                    x: data.users[prop].rotationX,\n                    y: data.users[prop].rotationY,\n                    z: data.users[prop].rotationZ\n                };\n\n                this.users[data.users[prop].id].cache_rotation_world = {\n                    x: data.users[prop].rotationWorldX,\n                    y: data.users[prop].rotationWorldY,\n                    z: data.users[prop].rotationWorldZ\n                }\n\n                this.userContainers[data.users[prop].id].add(this.users[data.users[prop].id]);\n                this.scene.add(this.userContainers[data.users[prop].id]);\n\n                //this.planesController.container.add(this.userContainers[data.users[prop].id]);\n\n            } else {\n\n                // UPDATE COLOR\n                //this.users[data.users[prop].id].material.color = new THREE.Color(data.users[prop].name);\n\n                // UPDATE TEXTURE\n                this.users[data.users[prop].id].material.map = this.textures[data.users[prop].name];\n                this.users[data.users[prop].id].material.needsUpdate = true;\n            }\n        }\n    }\n};\n\nView.prototype.setup = function () {\n\n    var colorFog = ( window.NO_HATCHING ) ? 0xbbbbbb : 0x000000;\n\n    this.introView = new IntroView(this);\n    this.introView.addEventListener('clickJoin', this.joinRoom.bind(this));\n\n    this.container = document.getElementById('container');\n\n    this.renderer = new THREE.WebGLRenderer({antialias: true});\n    this.renderer.setPixelRatio(window.devicePixelRatio);\n    this.renderer.autoClear = false;\n    this.renderer.setClearColor(colorFog, 1);\n    this.container.appendChild(this.renderer.domElement);\n\n    this.camera = new THREE.PerspectiveCamera(90, window.innerWidth / window.innerHeight, 1, 10000);\n\n    this.target = new THREE.Vector3(0, 0, 0);\n\n    this.scene = new THREE.Scene();\n\n    this.scene.fog = new THREE.Fog(colorFog, 0, this.FOG_FAR);\n\n    this.effect = new THREE.StereoEffect(this.renderer);\n\n    if (!this.is_touch_device()) {\n        this.controls = new THREE.OrbitControls(this.camera, this.renderer.domElement);\n        this.controls.rotateUp(Math.PI);\n        this.controls.target.set(\n            this.camera.position.x + 0.1,\n            this.camera.position.y,\n            this.camera.position.z\n        );\n        this.controls.noZoom = true;\n        this.controls.noPan = true;\n    } else {\n        this.isVR = true;\n        if (this.isIOS) this.preventSleep();\n\n        this.controls = new THREE.DeviceOrientationControls(this.camera, true);\n        this.controls.connect();\n        //this.controls.update();\n\n        this.renderer.domElement.addEventListener('click', this.fullscreen.bind(this), false);\n    }\n\n    if (!this.joined) {\n\n        this.camera.position.set(-38.73887977373559, -4.475810659844891, 41.242743759518184);\n        this.camera.lookAt(new THREE.Vector3(0, 0, 0));\n    }\n\n    this.raycaster = new THREE.Raycaster();\n\n    if( !window.isAndroid ) {\n        this.simulator = new Simulator({\n            renderer: this.renderer,\n            positionsGeom: null,\n            sizeW: window.isGenericAndroid ? 64 : 128,\n            sizeH: window.isGenericAndroid ? 64 : 128\n        });\n    }\n\n    //this.onLoadImage();\n\n};\n\nView.prototype.onLoaded = function () {\n\n    // We do the socket connection now\n    this.socket.init();\n}\n\n\n// View.prototype.onLoadImage = function() {\n//     THREE.ImageUtils.crossOrigin = '*';\n//     this.avatarMaterial = new THREE.MeshBasicMaterial({\n//         map: new THREE.ImageUtils.loadTexture( 'http://sirokos.com/proxy.php?url=' + encodeURI('https://twitter.com/sirokos/profile_image?size=original') ),\n//         specular: 0xffffff,\n//         shininess: 20,\n//         shading: THREE.FlatShading\n//     });\n\n//     this.avatarMaterial.side = THREE.DoubleSide;\n\n//     this.planeAvatar = new THREE.Mesh( new THREE.PlaneBufferGeometry( 10, 10, 2, 2), this.avatarMaterial );\n//     this.planeAvatar.position.y = -10;\n//     this.planeAvatar.rotation.y = Math.PI;\n//     this.scene.add( this.planeAvatar );\n// };\n\nView.prototype.is_touch_device = function () {\n    try {\n        document.createEvent(\"TouchEvent\");\n        return true;\n    } catch (e) {\n        return false;\n    }\n};\n\nView.prototype.setOrientationControls = function (e) {\n\n    if (!e.alpha) {\n\n        return;\n    }\n\n    //this.controls.disposed = true;\n\n    //this.isVR = true;\n    //if (this.isIOS) this.preventSleep();\n    //\n    //this.controls = new THREE.DeviceOrientationControls(this.camera, true);\n    //this.controls.connect();\n    ////this.controls.update();\n    //\n    //this.renderer.domElement.addEventListener('click', this.fullscreen.bind(this), false);\n\n    window.removeEventListener('deviceorientation', this.bindOrientationControls, true);\n};\n\n\nView.prototype.updateUserPosition = function (position, target) {\n\n    this.camera.position.copy(position);\n    if (!this.isVR) {\n        this.controls.target.copy(target);\n        setTimeout(function(){\n            this.controls.rotateUp(-THREE.Math.degToRad(50));\n            this.controls.update();\n        }.bind(this), 300);\n\n    }\n};\n\n\nView.prototype.createGeometry = function () {\n\n};\n\nView.prototype.createDirectionHelper = function () {\n\n    this.container = new THREE.Object3D();\n    this.scene.add(this.container);\n\n    this.directionHelper = new DirectionHelper(this.container);\n};\n\nView.prototype.createStairsController = function () {\n\n    this.planesController = new PlanesController(this.scene);\n};\n\nView.prototype.createPaths = function () {\n\n    this.paths = new Paths(this, this.directionHelper, this.planesController.getCurrentPaths(), this.planesController.getCurrentIndex());\n};\n\nView.prototype.createEnviroment = function () {\n\n    this.enviromentView = new EnviroView(this.planesController.container);\n    this.enviromentView.addEventListener('loaded', this.onPreloadElement.bind(this));\n\n    if (this.isEnvironmentOn) {\n\n        //this.sphere.visible = false;\n        this.enviromentView.show();\n    }\n\n    this.character = new Character();\n    this.character.addEventListener('loaded', this.onPreloadElement.bind(this));\n\n    if( !window.isAndroid ) {\n        this.scene.add(this.simulator.bufferMesh);\n    }\n};\n\nView.prototype.toggleEnvironment = function () {\n\n    this.isEnvironmentOn = !this.isEnvironmentOn;\n\n    if (this.isEnvironmentOn) {\n\n        this.sphere.visible = false;\n        this.enviromentView.show();\n\n    } else {\n\n        this.sphere.visible = true;\n        this.enviromentView.hide();\n    }\n};\n\nView.prototype.createPortalRTT = function () {\n\n    this.portalRTT = new PortalRTT(this);\n};\n\nView.prototype.createAudio = function () {\n\n    this.audio = new Audio({\n\n        view: this,\n        callback: function () {\n\n        }\n    });\n\n    this.audio.addEventListener('loaded', this.onPreloadElement.bind(this));\n};\n\nView.prototype.update = function (dt) {\n\n    //this.simulator.bufferMesh.position.copy(this.camera.position);\n\n    if (this.joined) {\n        this.camera.updateProjectionMatrix();\n        this.controls.update();\n\n        this.directionHelper.update(this.camera, this.raycaster);\n    }\n\n    if (!window.NO_HATCHING) {\n\n        this.character.material1.uniforms.fogFar.value = this.scene.fog.far;\n        this.enviromentView.material1.uniforms.fogFar.value = this.scene.fog.far;\n        this.enviromentView.material2.uniforms.fogFar.value = this.scene.fog.far;\n        this.enviromentView.material3.uniforms.fogFar.value = this.scene.fog.far;\n        this.enviromentView.material4.uniforms.fogFar.value = this.scene.fog.far;\n\n        this.character.material1.uniforms.fogNear.value = this.scene.fog.near;\n        this.enviromentView.material1.uniforms.fogNear.value = this.scene.fog.near;\n        this.enviromentView.material2.uniforms.fogNear.value = this.scene.fog.near;\n        this.enviromentView.material3.uniforms.fogNear.value = this.scene.fog.near;\n        this.enviromentView.material4.uniforms.fogNear.value = this.scene.fog.near;\n    }\n\n    if (this.portalRTT !== null) this.portalRTT.update();\n};\n\nView.prototype.render = function (dt) {\n\n    if (this.portalRTT !== null) this.portalRTT.render();\n\n    if (this.isVR && this.joined) {\n        if( !window.isAndroid ) {\n            this.simulator.update();\n        }\n        this.renderer.setRenderTarget(null); // add this line\n        this.effect.render(this.scene, this.camera);\n    }else {\n        if( !window.isAndroid ) {\n            this.simulator.update();\n        }\n        this.renderer.setRenderTarget(null); // add this line\n        this.renderer.clear();\n        this.renderer.render(this.scene, this.camera);\n    }\n};\n\nView.prototype.animate = function () {\n\n    window.requestAnimationFrame(this.animate.bind(this));\n\n    this.update(this.clock.getDelta());\n    this.render(this.clock.getDelta());\n\n    for (var prop in this.users) {\n\n        if (\n            (this.users[prop].uid != this.socket.uid) &&\n            (this.users[prop].userData.fading !== true)\n        ) {\n\n            // If the distance is big, don't ease it, just go ( portals )\n            var incX = this.users[ prop ].cache_position.x - this.users[ prop ].position.x,\n                incY = this.users[ prop ].cache_position.y - this.users[ prop ].position.y,\n                incZ = this.users[ prop ].cache_position.z - this.users[ prop ].position.z;\n\n            if ( (incX < 10 && incX > -10) && (incY < 10 && incY > -10) && (incZ < 15 && incZ > -15) ) {\n\n                this.users[ prop ].position.x += incX / 5;\n                this.users[ prop ].position.y += incY / 5;\n                this.users[ prop ].position.z += incZ / 5;\n\n            } else {\n\n                // JUMP:\n                // We fade it out, then move it and fade it in.\n\n                this.users[prop].visible = true;\n                this.users[prop].userData.initial = false;\n\n                var user = this.users[ prop ],\n                    planesCt = this.planesController,\n                    container = this.userContainers[ prop ],\n                    containerRotation = new THREE.Vector3(\n                        this.users[ prop ].cache_rotation_world.x,\n                        this.users[ prop ].cache_rotation_world.y,\n                        this.users[ prop ].cache_rotation_world.z\n                    );\n\n                TweenMax.to( this.users[ prop ].material, 0.5, {\n\n                    opacity    : 0.0,\n                    onComplete : function () {\n\n                        user.position.x = user.cache_position.x;\n                        user.position.y = user.cache_position.y;\n                        user.position.z = user.cache_position.z;\n\n                        container.rotation.x = planesCt.getRotation().x - containerRotation.x;\n                        container.rotation.y = planesCt.getRotation().y - containerRotation.y;\n                        container.rotation.z = planesCt.getRotation().z - containerRotation.z;\n\n                        TweenMax.to( user.material, 0.5, {\n\n                            opacity    : 1.0,\n                            onComplete : function () {\n\n                                user.userData.fading = false;\n                            }\n                        } );\n                    }\n                } );\n\n                this.users[ prop ].userData.fading = true;\n            }\n\n            this.users[ prop ].rotation.x = this.users[ prop ].cache_rotation.x;\n            this.users[ prop ].rotation.y = this.users[ prop ].cache_rotation.y;\n            this.users[ prop ].rotation.z = this.users[ prop ].cache_rotation.z;\n\n            if ( this.users[ prop ].userData.fading !== true ) {\n                // We need to counteract the rotation of this current user\n                this.userContainers[ prop ].rotation.x = this.planesController.getRotation().x - this.users[ prop ].cache_rotation_world.x;\n                this.userContainers[ prop ].rotation.y = this.planesController.getRotation().y - this.users[ prop ].cache_rotation_world.y;\n                this.userContainers[ prop ].rotation.z = this.planesController.getRotation().z - this.users[ prop ].cache_rotation_world.z;\n\n\n                // Check distance to the camera\n                // If it's in the same plane and it's close, we change the opacity!\n                if (\n                    this.users[prop].userData.initial === false &&\n                    this.users[ prop ].cache_rotation_world.x === this.planesController.getRotation().x &&\n                    this.users[ prop ].cache_rotation_world.y === this.planesController.getRotation().y &&\n                    this.users[ prop ].cache_rotation_world.z === this.planesController.getRotation().z\n                ) {\n\n                    var dx = this.camera.position.x - this.users[ prop ].position.x,\n                        dy = this.camera.position.y - this.users[ prop ].position.y,\n                        dz = this.camera.position.z - this.users[ prop ].position.z,\n                        distance  = Math.sqrt(dx * dx + dy * dy + dz * dz),\n                        opacity = Math.max(0, Math.min( 1, 0.5 * (distance - 10)));\n\n                    this.users[ prop ].material.opacity = opacity;\n                }\n            }\n        }\n    }\n\n    if (this.counter % 10 == 0 && this.joined) {\n\n        this.socket.refreshUserData({\n\n            x: this.camera.position.x,\n            y: this.camera.position.y,\n            z: this.camera.position.z,\n            rotationX: this.camera.rotation.x,\n            rotationY: this.camera.rotation.y,\n            rotationZ: this.camera.rotation.z,\n            rotationWorldX: this.planesController.getRotation().x,\n            rotationWorldY: this.planesController.getRotation().y,\n            rotationWorldZ: this.planesController.getRotation().z\n        });\n    }\n\n    this.counter++;\n};\n\nView.prototype.resize = function (w, h) {\n\n    this.camera.aspect = w / h;\n    this.camera.updateProjectionMatrix();\n    this.renderer.setSize(w, h);\n    this.effect.setSize(w, h);\n};\n\nView.prototype.fullscreen = function () {\n\n    if (this.container.requestFullscreen) {\n        this.container.requestFullscreen();\n    } else if (this.container.msRequestFullscreen) {\n        this.container.msRequestFullscreen();\n    } else if (this.container.mozRequestFullScreen) {\n        this.container.mozRequestFullScreen();\n    } else if (this.container.webkitRequestFullscreen) {\n        this.container.webkitRequestFullscreen();\n    }\n}\n\nView.prototype.preventSleep = function () {\n\n    setInterval(function () {\n\n        window.location.href = '/new/page';\n        window.setTimeout(function () {\n            window.stop();\n        }, 0);\n\n    }, 30000);\n};\n\nView.prototype.onPreloadElement = function () {\n\n    this.introView.preloadedElement();\n};\n\nmodule.exports = View;"]}