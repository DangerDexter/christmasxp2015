var RayMarcher=function(){function e(e,t){return this.distance=e||50,this.precision=t||.01,this.scene=new THREE.Scene,this.renderer=new THREE.WebGLRenderer,this.renderer.setSize(window.innerWidth,window.innerHeight),this.domElement=this.renderer.domElement,this.renderCamera=new THREE.OrthographicCamera(-1,1,1,-1,1/Math.pow(2,53),1),this.geom=new THREE.BufferGeometry,this.geom.addAttribute("position",new THREE.BufferAttribute(new Float32Array([-1,-1,0,1,-1,0,1,1,0,-1,-1,0,1,1,0,-1,1,0]),3)),this.mesh=new THREE.Mesh(this.geom,null),this.scene.add(this.mesh),this.camera=new THREE.PerspectiveCamera(60,1,.1,1),this.target=new THREE.Vector3,this}function t(e,t){this.loaded=!1;var a=this,i=new XMLHttpRequest;return i.open("GET",e),i.onload=function(e){a.setFragmentShader(e.target.responseText,t)},i.send(),this}function a(e,t){return this.startTime=Date.now(),this.mesh.material=this.material=new THREE.ShaderMaterial({uniforms:{resolution:{type:"v2",value:new THREE.Vector2(this.width,this.height)},time:{type:"f",value:0},randomSeed:{type:"f",value:Math.random()},fov:{type:"f",value:45},camera:{type:"v3",value:this.camera.position},target:{type:"v3",value:this.target},raymarchMaximumDistance:{type:"f",value:this.distance},raymarchPrecision:{type:"f",value:this.precision}},vertexShader:"void main() {gl_Position =  vec4( position, 1.0 );}",fragmentShader:e,transparent:!0}),this.update(),null!=t&&t(this),this.loaded=!0,this}function i(e,t){if(null==this.material)throw new Error("material not initialised, use setFragmentShader() first.");var a=document.createElement("canvas");a.width=a.height=t||256;for(var i=a.getContext("2d"),r=i.getImageData(0,0,t,t),n=r.data.length;n--;)r.data[n]=parseInt(255*Math.random());i.putImageData(r,0,0);var s=new THREE.Texture(a);s.needsUpdate=!0,this.material.uniforms[e]={type:"t",value:s}}function r(e,t){if(null==this.material)throw new Error("material not initialised, use setFragmentShader() first.");rm.loaded=!1;var a=this;return this.material.uniforms[e]={type:"t",value:null},u.load(t,function(t){a.material.uniforms[e].value=t,a.material.needsUpdate=!0,a.loaded=!0,t.needsUpdate=!0}),this}function n(e,t){if(null==this.material)throw new Error("material not initialised, use setFragmentShader() first.");rm.loaded=!1;var a=this;this.material.uniforms[e]={type:"t",value:null},d.load(t,function(t){a.material.uniforms[e].value=t,a.material.needsUpdate=!0,a.loaded=!0,t.needsUpdate=!0})}function s(e,t,a){if(null==this.material)throw new Error("material not initialised, use setFragmentShader() first.");return this.material.uniforms[e]={type:t,value:a},this}function o(e){return null==this.material?(console.warn("raymarcher.getUniform: material not initialised, use setFragmentShader() first."),null):this.material.uniforms[e]}function h(e,t){return this.width=e,this.height=t,this.renderer.setSize(e,t),this.camera.aspect=e/t,this.camera.updateProjectionMatrix(),null!=this.material&&(this.material.uniforms.resolution.value.x=e,this.material.uniforms.resolution.value.y=t),this}function m(){null!=this.material&&(this.material.uniforms.time.value=.001*(Date.now()-this.startTime),this.material.uniforms.randomSeed.value=Math.random(),this.material.uniforms.fov.value=this.camera.fov*Math.PI/180,this.material.uniforms.raymarchMaximumDistance.value=this.distance,this.material.uniforms.raymarchPrecision.value=this.precision,this.material.uniforms.camera.value=this.camera.position,this.material.uniforms.target.value=this.target,this.camera.lookAt(this.target))}function l(){this.loaded&&(this.update(),this.renderer.render(this.scene,this.renderCamera))}var u=new THREE.TextureLoader,d=new THREE.CubeTextureLoader,c=(new THREE.Raycaster,new THREE.Vector2,e.prototype);return c.constructor=e,c.loadFragmentShader=t,c.setFragmentShader=a,c.createNoiseTexture=i,c.setTexture=r,c.setCubemap=n,c.setUniform=s,c.getUniform=o,c.setSize=h,c.update=m,c.render=l,e}();