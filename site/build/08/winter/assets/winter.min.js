// Winter r1
var THREE={REVISION:"73"};"function"===typeof define&&define.amd?define("three",THREE):"undefined"!==typeof exports&&"undefined"!==typeof module&&(module.exports=THREE);
(void 0===self.requestAnimationFrame||void 0===self.cancelAnimationFrame)&&function(){for(var a=0,b=["ms","moz","webkit","o"],c=0;c<b.length&&!self.requestAnimationFrame;++c){self.requestAnimationFrame=self[b[c]+"RequestAnimationFrame"];self.cancelAnimationFrame=self[b[c]+"CancelAnimationFrame"]||self[b[c]+"CancelRequestAnimationFrame"]}if(self.requestAnimationFrame===void 0&&self.setTimeout!==void 0)self.requestAnimationFrame=function(b){var c=Date.now(),g=Math.max(0,16-(c-a)),f=self.setTimeout(function(){b(c+
g)},g);a=c+g;return f};if(self.cancelAnimationFrame===void 0&&self.clearTimeout!==void 0)self.cancelAnimationFrame=function(a){self.clearTimeout(a)}}();void 0===self.performance&&(self.performance={});void 0===self.performance.now&&function(){var a=Date.now();self.performance.now=function(){return Date.now()-a}}();void 0===Number.EPSILON&&(Number.EPSILON=Math.pow(2,-52));void 0===Math.sign&&(Math.sign=function(a){return a<0?-1:a>0?1:+a});
void 0===Function.prototype.name&&void 0!==Object.defineProperty&&Object.defineProperty(Function.prototype,"name",{get:function(){return this.toString().match(/^\s*function\s*(\S*)\s*\(/)[1]}});THREE.MOUSE={LEFT:0,MIDDLE:1,RIGHT:2};THREE.CullFaceNone=0;THREE.CullFaceBack=1;THREE.CullFaceFront=2;THREE.CullFaceFrontBack=3;THREE.FrontFaceDirectionCW=0;THREE.FrontFaceDirectionCCW=1;THREE.BasicShadowMap=0;THREE.PCFShadowMap=1;THREE.PCFSoftShadowMap=2;THREE.FrontSide=0;THREE.BackSide=1;
THREE.DoubleSide=2;THREE.FlatShading=1;THREE.SmoothShading=2;THREE.NoColors=0;THREE.FaceColors=1;THREE.VertexColors=2;THREE.NoBlending=0;THREE.NormalBlending=1;THREE.AdditiveBlending=2;THREE.SubtractiveBlending=3;THREE.MultiplyBlending=4;THREE.CustomBlending=5;THREE.AddEquation=100;THREE.SubtractEquation=101;THREE.ReverseSubtractEquation=102;THREE.MinEquation=103;THREE.MaxEquation=104;THREE.ZeroFactor=200;THREE.OneFactor=201;THREE.SrcColorFactor=202;THREE.OneMinusSrcColorFactor=203;
THREE.SrcAlphaFactor=204;THREE.OneMinusSrcAlphaFactor=205;THREE.DstAlphaFactor=206;THREE.OneMinusDstAlphaFactor=207;THREE.DstColorFactor=208;THREE.OneMinusDstColorFactor=209;THREE.SrcAlphaSaturateFactor=210;THREE.NeverDepth=0;THREE.AlwaysDepth=1;THREE.LessDepth=2;THREE.LessEqualDepth=3;THREE.EqualDepth=4;THREE.GreaterEqualDepth=5;THREE.GreaterDepth=6;THREE.NotEqualDepth=7;THREE.MultiplyOperation=0;THREE.MixOperation=1;THREE.AddOperation=2;THREE.UVMapping=300;THREE.CubeReflectionMapping=301;
THREE.CubeRefractionMapping=302;THREE.EquirectangularReflectionMapping=303;THREE.EquirectangularRefractionMapping=304;THREE.SphericalReflectionMapping=305;THREE.RepeatWrapping=1E3;THREE.ClampToEdgeWrapping=1001;THREE.MirroredRepeatWrapping=1002;THREE.NearestFilter=1003;THREE.NearestMipMapNearestFilter=1004;THREE.NearestMipMapLinearFilter=1005;THREE.LinearFilter=1006;THREE.LinearMipMapNearestFilter=1007;THREE.LinearMipMapLinearFilter=1008;THREE.UnsignedByteType=1009;THREE.ByteType=1010;
THREE.ShortType=1011;THREE.UnsignedShortType=1012;THREE.IntType=1013;THREE.UnsignedIntType=1014;THREE.FloatType=1015;THREE.HalfFloatType=1025;THREE.UnsignedShort4444Type=1016;THREE.UnsignedShort5551Type=1017;THREE.UnsignedShort565Type=1018;THREE.AlphaFormat=1019;THREE.RGBFormat=1020;THREE.RGBAFormat=1021;THREE.LuminanceFormat=1022;THREE.LuminanceAlphaFormat=1023;THREE.RGBEFormat=THREE.RGBAFormat;THREE.RGB_S3TC_DXT1_Format=2001;THREE.RGBA_S3TC_DXT1_Format=2002;THREE.RGBA_S3TC_DXT3_Format=2003;
THREE.RGBA_S3TC_DXT5_Format=2004;THREE.RGB_PVRTC_4BPPV1_Format=2100;THREE.RGB_PVRTC_2BPPV1_Format=2101;THREE.RGBA_PVRTC_4BPPV1_Format=2102;THREE.RGBA_PVRTC_2BPPV1_Format=2103;THREE.LoopOnce=2200;THREE.LoopRepeat=2201;THREE.LoopPingPong=2202;
THREE.Projector=function(){console.error("THREE.Projector has been moved to /examples/js/renderers/Projector.js.");this.projectVector=function(a,b){console.warn("THREE.Projector: .projectVector() is now vector.project().");a.project(b)};this.unprojectVector=function(a,b){console.warn("THREE.Projector: .unprojectVector() is now vector.unproject().");a.unproject(b)};this.pickingRay=function(){console.error("THREE.Projector: .pickingRay() is now raycaster.setFromCamera().")}};
THREE.CanvasRenderer=function(){console.error("THREE.CanvasRenderer has been moved to /examples/js/renderers/CanvasRenderer.js");this.domElement=document.createElement("canvas");this.clear=function(){};this.render=function(){};this.setClearColor=function(){};this.setSize=function(){}};THREE.Color=function(a){return arguments.length===3?this.fromArray(arguments):this.set(a)};
THREE.Color.prototype={constructor:THREE.Color,r:1,g:1,b:1,set:function(a){a instanceof THREE.Color?this.copy(a):typeof a==="number"?this.setHex(a):typeof a==="string"&&this.setStyle(a);return this},setHex:function(a){a=Math.floor(a);this.r=(a>>16&255)/255;this.g=(a>>8&255)/255;this.b=(a&255)/255;return this},setRGB:function(a,b,c){this.r=a;this.g=b;this.b=c;return this},setHSL:function(){function a(a,c,d){d<0&&(d=d+1);d>1&&(d=d-1);return d<1/6?a+(c-a)*6*d:d<0.5?c:d<2/3?a+(c-a)*6*(2/3-d):a}return function(b,
c,d){b=THREE.Math.euclideanModulo(b,1);c=THREE.Math.clamp(c,0,1);d=THREE.Math.clamp(d,0,1);if(c===0)this.r=this.g=this.b=d;else{c=d<=0.5?d*(1+c):d+c-d*c;d=2*d-c;this.r=a(d,c,b+1/3);this.g=a(d,c,b);this.b=a(d,c,b-1/3)}return this}}(),setStyle:function(a){function b(b){b!==void 0&&parseFloat(b)<1&&console.warn("THREE.Color: Alpha component of "+a+" will be ignored.")}var c;if(c=/^((?:rgb|hsl)a?)\(\s*([^\)]*)\)/.exec(a)){var d=c[2];switch(c[1]){case "rgb":case "rgba":if(c=/^(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(d)){this.r=
Math.min(255,parseInt(c[1],10))/255;this.g=Math.min(255,parseInt(c[2],10))/255;this.b=Math.min(255,parseInt(c[3],10))/255;b(c[5]);return this}if(c=/^(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(d)){this.r=Math.min(100,parseInt(c[1],10))/100;this.g=Math.min(100,parseInt(c[2],10))/100;this.b=Math.min(100,parseInt(c[3],10))/100;b(c[5]);return this}break;case "hsl":case "hsla":if(c=/^([0-9]*\.?[0-9]+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(d)){var d=
parseFloat(c[1])/360,e=parseInt(c[2],10)/100,g=parseInt(c[3],10)/100;b(c[5]);return this.setHSL(d,e,g)}}}else if(c=/^\#([A-Fa-f0-9]+)$/.exec(a)){c=c[1];d=c.length;if(d===3){this.r=parseInt(c.charAt(0)+c.charAt(0),16)/255;this.g=parseInt(c.charAt(1)+c.charAt(1),16)/255;this.b=parseInt(c.charAt(2)+c.charAt(2),16)/255;return this}if(d===6){this.r=parseInt(c.charAt(0)+c.charAt(1),16)/255;this.g=parseInt(c.charAt(2)+c.charAt(3),16)/255;this.b=parseInt(c.charAt(4)+c.charAt(5),16)/255;return this}}if(a&&
a.length>0){c=THREE.ColorKeywords[a];c!==void 0?this.setHex(c):console.warn("THREE.Color: Unknown color "+a)}return this},clone:function(){return new this.constructor(this.r,this.g,this.b)},copy:function(a){this.r=a.r;this.g=a.g;this.b=a.b;return this},copyGammaToLinear:function(a,b){b===void 0&&(b=2);this.r=Math.pow(a.r,b);this.g=Math.pow(a.g,b);this.b=Math.pow(a.b,b);return this},copyLinearToGamma:function(a,b){b===void 0&&(b=2);var c=b>0?1/b:1;this.r=Math.pow(a.r,c);this.g=Math.pow(a.g,c);this.b=
Math.pow(a.b,c);return this},convertGammaToLinear:function(){var a=this.r,b=this.g,c=this.b;this.r=a*a;this.g=b*b;this.b=c*c;return this},convertLinearToGamma:function(){this.r=Math.sqrt(this.r);this.g=Math.sqrt(this.g);this.b=Math.sqrt(this.b);return this},getHex:function(){return this.r*255<<16^this.g*255<<8^this.b*255<<0},getHexString:function(){return("000000"+this.getHex().toString(16)).slice(-6)},getHSL:function(a){var a=a||{h:0,s:0,l:0},b=this.r,c=this.g,d=this.b,e=Math.max(b,c,d),g=Math.min(b,
c,d),f,h=(g+e)/2;if(g===e)g=f=0;else{var j=e-g,g=h<=0.5?j/(e+g):j/(2-e-g);switch(e){case b:f=(c-d)/j+(c<d?6:0);break;case c:f=(d-b)/j+2;break;case d:f=(b-c)/j+4}f=f/6}a.h=f;a.s=g;a.l=h;return a},getStyle:function(){return"rgb("+(this.r*255|0)+","+(this.g*255|0)+","+(this.b*255|0)+")"},offsetHSL:function(a,b,c){var d=this.getHSL();d.h=d.h+a;d.s=d.s+b;d.l=d.l+c;this.setHSL(d.h,d.s,d.l);return this},add:function(a){this.r=this.r+a.r;this.g=this.g+a.g;this.b=this.b+a.b;return this},addColors:function(a,
b){this.r=a.r+b.r;this.g=a.g+b.g;this.b=a.b+b.b;return this},addScalar:function(a){this.r=this.r+a;this.g=this.g+a;this.b=this.b+a;return this},multiply:function(a){this.r=this.r*a.r;this.g=this.g*a.g;this.b=this.b*a.b;return this},multiplyScalar:function(a){this.r=this.r*a;this.g=this.g*a;this.b=this.b*a;return this},lerp:function(a,b){this.r=this.r+(a.r-this.r)*b;this.g=this.g+(a.g-this.g)*b;this.b=this.b+(a.b-this.b)*b;return this},equals:function(a){return a.r===this.r&&a.g===this.g&&a.b===this.b},
fromArray:function(a,b){b===void 0&&(b=0);this.r=a[b];this.g=a[b+1];this.b=a[b+2];return this},toArray:function(a,b){a===void 0&&(a=[]);b===void 0&&(b=0);a[b]=this.r;a[b+1]=this.g;a[b+2]=this.b;return a}};
THREE.ColorKeywords={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,
darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,
grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,
lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,
palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,
tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};THREE.Quaternion=function(a,b,c,d){this._x=a||0;this._y=b||0;this._z=c||0;this._w=d!==void 0?d:1};
THREE.Quaternion.prototype={constructor:THREE.Quaternion,get x(){return this._x},set x(a){this._x=a;this.onChangeCallback()},get y(){return this._y},set y(a){this._y=a;this.onChangeCallback()},get z(){return this._z},set z(a){this._z=a;this.onChangeCallback()},get w(){return this._w},set w(a){this._w=a;this.onChangeCallback()},set:function(a,b,c,d){this._x=a;this._y=b;this._z=c;this._w=d;this.onChangeCallback();return this},clone:function(){return new this.constructor(this._x,this._y,this._z,this._w)},
copy:function(a){this._x=a.x;this._y=a.y;this._z=a.z;this._w=a.w;this.onChangeCallback();return this},setFromEuler:function(a,b){if(a instanceof THREE.Euler===false)throw Error("THREE.Quaternion: .setFromEuler() now expects a Euler rotation rather than a Vector3 and order.");var c=Math.cos(a._x/2),d=Math.cos(a._y/2),e=Math.cos(a._z/2),g=Math.sin(a._x/2),f=Math.sin(a._y/2),h=Math.sin(a._z/2),j=a.order;if(j==="XYZ"){this._x=g*d*e+c*f*h;this._y=c*f*e-g*d*h;this._z=c*d*h+g*f*e;this._w=c*d*e-g*f*h}else if(j===
"YXZ"){this._x=g*d*e+c*f*h;this._y=c*f*e-g*d*h;this._z=c*d*h-g*f*e;this._w=c*d*e+g*f*h}else if(j==="ZXY"){this._x=g*d*e-c*f*h;this._y=c*f*e+g*d*h;this._z=c*d*h+g*f*e;this._w=c*d*e-g*f*h}else if(j==="ZYX"){this._x=g*d*e-c*f*h;this._y=c*f*e+g*d*h;this._z=c*d*h-g*f*e;this._w=c*d*e+g*f*h}else if(j==="YZX"){this._x=g*d*e+c*f*h;this._y=c*f*e+g*d*h;this._z=c*d*h-g*f*e;this._w=c*d*e-g*f*h}else if(j==="XZY"){this._x=g*d*e-c*f*h;this._y=c*f*e-g*d*h;this._z=c*d*h+g*f*e;this._w=c*d*e+g*f*h}if(b!==false)this.onChangeCallback();
return this},setFromAxisAngle:function(a,b){var c=b/2,d=Math.sin(c);this._x=a.x*d;this._y=a.y*d;this._z=a.z*d;this._w=Math.cos(c);this.onChangeCallback();return this},setFromRotationMatrix:function(a){var b=a.elements,c=b[0],a=b[4],d=b[8],e=b[1],g=b[5],f=b[9],h=b[2],j=b[6],b=b[10],i=c+g+b;if(i>0){c=0.5/Math.sqrt(i+1);this._w=0.25/c;this._x=(j-f)*c;this._y=(d-h)*c;this._z=(e-a)*c}else if(c>g&&c>b){c=2*Math.sqrt(1+c-g-b);this._w=(j-f)/c;this._x=0.25*c;this._y=(a+e)/c;this._z=(d+h)/c}else if(g>b){c=
2*Math.sqrt(1+g-c-b);this._w=(d-h)/c;this._x=(a+e)/c;this._y=0.25*c;this._z=(f+j)/c}else{c=2*Math.sqrt(1+b-c-g);this._w=(e-a)/c;this._x=(d+h)/c;this._y=(f+j)/c;this._z=0.25*c}this.onChangeCallback();return this},setFromUnitVectors:function(){var a,b;return function(c,d){a===void 0&&(a=new THREE.Vector3);b=c.dot(d)+1;if(b<1.0E-6){b=0;Math.abs(c.x)>Math.abs(c.z)?a.set(-c.y,c.x,0):a.set(0,-c.z,c.y)}else a.crossVectors(c,d);this._x=a.x;this._y=a.y;this._z=a.z;this._w=b;this.normalize();return this}}(),
inverse:function(){this.conjugate().normalize();return this},conjugate:function(){this._x=this._x*-1;this._y=this._y*-1;this._z=this._z*-1;this.onChangeCallback();return this},dot:function(a){return this._x*a._x+this._y*a._y+this._z*a._z+this._w*a._w},lengthSq:function(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w},length:function(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)},normalize:function(){var a=this.length();if(a===0){this._z=
this._y=this._x=0;this._w=1}else{a=1/a;this._x=this._x*a;this._y=this._y*a;this._z=this._z*a;this._w=this._w*a}this.onChangeCallback();return this},multiply:function(a,b){if(b!==void 0){console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.");return this.multiplyQuaternions(a,b)}return this.multiplyQuaternions(this,a)},multiplyQuaternions:function(a,b){var c=a._x,d=a._y,e=a._z,g=a._w,f=b._x,h=b._y,j=b._z,i=b._w;this._x=c*i+g*f+d*j-e*h;
this._y=d*i+g*h+e*f-c*j;this._z=e*i+g*j+c*h-d*f;this._w=g*i-c*f-d*h-e*j;this.onChangeCallback();return this},multiplyVector3:function(a){console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.");return a.applyQuaternion(this)},slerp:function(a,b){if(b===0)return this;if(b===1)return this.copy(a);var c=this._x,d=this._y,e=this._z,g=this._w,f=g*a._w+c*a._x+d*a._y+e*a._z;if(f<0){this._w=-a._w;this._x=-a._x;this._y=-a._y;this._z=-a._z;
f=-f}else this.copy(a);if(f>=1){this._w=g;this._x=c;this._y=d;this._z=e;return this}var h=Math.acos(f),j=Math.sqrt(1-f*f);if(Math.abs(j)<0.001){this._w=0.5*(g+this._w);this._x=0.5*(c+this._x);this._y=0.5*(d+this._y);this._z=0.5*(e+this._z);return this}f=Math.sin((1-b)*h)/j;h=Math.sin(b*h)/j;this._w=g*f+this._w*h;this._x=c*f+this._x*h;this._y=d*f+this._y*h;this._z=e*f+this._z*h;this.onChangeCallback();return this},equals:function(a){return a._x===this._x&&a._y===this._y&&a._z===this._z&&a._w===this._w},
fromArray:function(a,b){b===void 0&&(b=0);this._x=a[b];this._y=a[b+1];this._z=a[b+2];this._w=a[b+3];this.onChangeCallback();return this},toArray:function(a,b){a===void 0&&(a=[]);b===void 0&&(b=0);a[b]=this._x;a[b+1]=this._y;a[b+2]=this._z;a[b+3]=this._w;return a},onChange:function(a){this.onChangeCallback=a;return this},onChangeCallback:function(){}};THREE.Quaternion.slerp=function(a,b,c,d){return c.copy(a).slerp(b,d)};THREE.Vector2=function(a,b){this.x=a||0;this.y=b||0};
THREE.Vector2.prototype={constructor:THREE.Vector2,get width(){return this.x},set width(a){this.x=a},get height(){return this.y},set height(a){this.y=a},set:function(a,b){this.x=a;this.y=b;return this},setX:function(a){this.x=a;return this},setY:function(a){this.y=a;return this},setComponent:function(a,b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;default:throw Error("index is out of range: "+a);}},getComponent:function(a){switch(a){case 0:return this.x;case 1:return this.y;default:throw Error("index is out of range: "+
a);}},clone:function(){return new this.constructor(this.x,this.y)},copy:function(a){this.x=a.x;this.y=a.y;return this},add:function(a,b){if(b!==void 0){console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.");return this.addVectors(a,b)}this.x=this.x+a.x;this.y=this.y+a.y;return this},addScalar:function(a){this.x=this.x+a;this.y=this.y+a;return this},addVectors:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;return this},addScaledVector:function(a,b){this.x=
this.x+a.x*b;this.y=this.y+a.y*b;return this},sub:function(a,b){if(b!==void 0){console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.");return this.subVectors(a,b)}this.x=this.x-a.x;this.y=this.y-a.y;return this},subScalar:function(a){this.x=this.x-a;this.y=this.y-a;return this},subVectors:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;return this},multiply:function(a){this.x=this.x*a.x;this.y=this.y*a.y;return this},multiplyScalar:function(a){if(isFinite(a)){this.x=
this.x*a;this.y=this.y*a}else this.y=this.x=0;return this},divide:function(a){this.x=this.x/a.x;this.y=this.y/a.y;return this},divideScalar:function(a){return this.multiplyScalar(1/a)},min:function(a){this.x=Math.min(this.x,a.x);this.y=Math.min(this.y,a.y);return this},max:function(a){this.x=Math.max(this.x,a.x);this.y=Math.max(this.y,a.y);return this},clamp:function(a,b){this.x=Math.max(a.x,Math.min(b.x,this.x));this.y=Math.max(a.y,Math.min(b.y,this.y));return this},clampScalar:function(){var a,
b;return function(c,d){if(a===void 0){a=new THREE.Vector2;b=new THREE.Vector2}a.set(c,c);b.set(d,d);return this.clamp(a,b)}}(),clampLength:function(a,b){var c=this.length();this.multiplyScalar(Math.max(a,Math.min(b,c))/c);return this},floor:function(){this.x=Math.floor(this.x);this.y=Math.floor(this.y);return this},ceil:function(){this.x=Math.ceil(this.x);this.y=Math.ceil(this.y);return this},round:function(){this.x=Math.round(this.x);this.y=Math.round(this.y);return this},roundToZero:function(){this.x=
this.x<0?Math.ceil(this.x):Math.floor(this.x);this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y);return this},negate:function(){this.x=-this.x;this.y=-this.y;return this},dot:function(a){return this.x*a.x+this.y*a.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)},normalize:function(){return this.divideScalar(this.length())},distanceTo:function(a){return Math.sqrt(this.distanceToSquared(a))},
distanceToSquared:function(a){var b=this.x-a.x,a=this.y-a.y;return b*b+a*a},setLength:function(a){return this.multiplyScalar(a/this.length())},lerp:function(a,b){this.x=this.x+(a.x-this.x)*b;this.y=this.y+(a.y-this.y)*b;return this},lerpVectors:function(a,b,c){this.subVectors(b,a).multiplyScalar(c).add(a);return this},equals:function(a){return a.x===this.x&&a.y===this.y},fromArray:function(a,b){b===void 0&&(b=0);this.x=a[b];this.y=a[b+1];return this},toArray:function(a,b){a===void 0&&(a=[]);b===void 0&&
(b=0);a[b]=this.x;a[b+1]=this.y;return a},fromAttribute:function(a,b,c){c===void 0&&(c=0);b=b*a.itemSize+c;this.x=a.array[b];this.y=a.array[b+1];return this},rotateAround:function(a,b){var c=Math.cos(b),d=Math.sin(b),e=this.x-a.x,g=this.y-a.y;this.x=e*c-g*d+a.x;this.y=e*d+g*c+a.y;return this}};THREE.Vector3=function(a,b,c){this.x=a||0;this.y=b||0;this.z=c||0};
THREE.Vector3.prototype={constructor:THREE.Vector3,set:function(a,b,c){this.x=a;this.y=b;this.z=c;return this},setX:function(a){this.x=a;return this},setY:function(a){this.y=a;return this},setZ:function(a){this.z=a;return this},setComponent:function(a,b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;case 2:this.z=b;break;default:throw Error("index is out of range: "+a);}},getComponent:function(a){switch(a){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw Error("index is out of range: "+
a);}},clone:function(){return new this.constructor(this.x,this.y,this.z)},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;return this},add:function(a,b){if(b!==void 0){console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.");return this.addVectors(a,b)}this.x=this.x+a.x;this.y=this.y+a.y;this.z=this.z+a.z;return this},addScalar:function(a){this.x=this.x+a;this.y=this.y+a;this.z=this.z+a;return this},addVectors:function(a,b){this.x=a.x+b.x;this.y=a.y+
b.y;this.z=a.z+b.z;return this},addScaledVector:function(a,b){this.x=this.x+a.x*b;this.y=this.y+a.y*b;this.z=this.z+a.z*b;return this},sub:function(a,b){if(b!==void 0){console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.");return this.subVectors(a,b)}this.x=this.x-a.x;this.y=this.y-a.y;this.z=this.z-a.z;return this},subScalar:function(a){this.x=this.x-a;this.y=this.y-a;this.z=this.z-a;return this},subVectors:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;
this.z=a.z-b.z;return this},multiply:function(a,b){if(b!==void 0){console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.");return this.multiplyVectors(a,b)}this.x=this.x*a.x;this.y=this.y*a.y;this.z=this.z*a.z;return this},multiplyScalar:function(a){if(isFinite(a)){this.x=this.x*a;this.y=this.y*a;this.z=this.z*a}else this.z=this.y=this.x=0;return this},multiplyVectors:function(a,b){this.x=a.x*b.x;this.y=a.y*b.y;this.z=a.z*b.z;return this},applyEuler:function(){var a;
return function(b){b instanceof THREE.Euler===false&&console.error("THREE.Vector3: .applyEuler() now expects a Euler rotation rather than a Vector3 and order.");a===void 0&&(a=new THREE.Quaternion);this.applyQuaternion(a.setFromEuler(b));return this}}(),applyAxisAngle:function(){var a;return function(b,c){a===void 0&&(a=new THREE.Quaternion);this.applyQuaternion(a.setFromAxisAngle(b,c));return this}}(),applyMatrix3:function(a){var b=this.x,c=this.y,d=this.z,a=a.elements;this.x=a[0]*b+a[3]*c+a[6]*
d;this.y=a[1]*b+a[4]*c+a[7]*d;this.z=a[2]*b+a[5]*c+a[8]*d;return this},applyMatrix4:function(a){var b=this.x,c=this.y,d=this.z,a=a.elements;this.x=a[0]*b+a[4]*c+a[8]*d+a[12];this.y=a[1]*b+a[5]*c+a[9]*d+a[13];this.z=a[2]*b+a[6]*c+a[10]*d+a[14];return this},applyProjection:function(a){var b=this.x,c=this.y,d=this.z,a=a.elements,e=1/(a[3]*b+a[7]*c+a[11]*d+a[15]);this.x=(a[0]*b+a[4]*c+a[8]*d+a[12])*e;this.y=(a[1]*b+a[5]*c+a[9]*d+a[13])*e;this.z=(a[2]*b+a[6]*c+a[10]*d+a[14])*e;return this},applyQuaternion:function(a){var b=
this.x,c=this.y,d=this.z,e=a.x,g=a.y,f=a.z,a=a.w,h=a*b+g*d-f*c,j=a*c+f*b-e*d,i=a*d+e*c-g*b,b=-e*b-g*c-f*d;this.x=h*a+b*-e+j*-f-i*-g;this.y=j*a+b*-g+i*-e-h*-f;this.z=i*a+b*-f+h*-g-j*-e;return this},project:function(){var a;return function(b){a===void 0&&(a=new THREE.Matrix4);a.multiplyMatrices(b.projectionMatrix,a.getInverse(b.matrixWorld));return this.applyProjection(a)}}(),unproject:function(){var a;return function(b){a===void 0&&(a=new THREE.Matrix4);a.multiplyMatrices(b.matrixWorld,a.getInverse(b.projectionMatrix));
return this.applyProjection(a)}}(),transformDirection:function(a){var b=this.x,c=this.y,d=this.z,a=a.elements;this.x=a[0]*b+a[4]*c+a[8]*d;this.y=a[1]*b+a[5]*c+a[9]*d;this.z=a[2]*b+a[6]*c+a[10]*d;this.normalize();return this},divide:function(a){this.x=this.x/a.x;this.y=this.y/a.y;this.z=this.z/a.z;return this},divideScalar:function(a){return this.multiplyScalar(1/a)},min:function(a){this.x=Math.min(this.x,a.x);this.y=Math.min(this.y,a.y);this.z=Math.min(this.z,a.z);return this},max:function(a){this.x=
Math.max(this.x,a.x);this.y=Math.max(this.y,a.y);this.z=Math.max(this.z,a.z);return this},clamp:function(a,b){this.x=Math.max(a.x,Math.min(b.x,this.x));this.y=Math.max(a.y,Math.min(b.y,this.y));this.z=Math.max(a.z,Math.min(b.z,this.z));return this},clampScalar:function(){var a,b;return function(c,d){if(a===void 0){a=new THREE.Vector3;b=new THREE.Vector3}a.set(c,c,c);b.set(d,d,d);return this.clamp(a,b)}}(),clampLength:function(a,b){var c=this.length();this.multiplyScalar(Math.max(a,Math.min(b,c))/
c);return this},floor:function(){this.x=Math.floor(this.x);this.y=Math.floor(this.y);this.z=Math.floor(this.z);return this},ceil:function(){this.x=Math.ceil(this.x);this.y=Math.ceil(this.y);this.z=Math.ceil(this.z);return this},round:function(){this.x=Math.round(this.x);this.y=Math.round(this.y);this.z=Math.round(this.z);return this},roundToZero:function(){this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x);this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y);this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z);
return this},negate:function(){this.x=-this.x;this.y=-this.y;this.z=-this.z;return this},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length())},setLength:function(a){return this.multiplyScalar(a/this.length())},
lerp:function(a,b){this.x=this.x+(a.x-this.x)*b;this.y=this.y+(a.y-this.y)*b;this.z=this.z+(a.z-this.z)*b;return this},lerpVectors:function(a,b,c){this.subVectors(b,a).multiplyScalar(c).add(a);return this},cross:function(a,b){if(b!==void 0){console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.");return this.crossVectors(a,b)}var c=this.x,d=this.y,e=this.z;this.x=d*a.z-e*a.y;this.y=e*a.x-c*a.z;this.z=c*a.y-d*a.x;return this},crossVectors:function(a,
b){var c=a.x,d=a.y,e=a.z,g=b.x,f=b.y,h=b.z;this.x=d*h-e*f;this.y=e*g-c*h;this.z=c*f-d*g;return this},projectOnVector:function(){var a,b;return function(c){a===void 0&&(a=new THREE.Vector3);a.copy(c).normalize();b=this.dot(a);return this.copy(a).multiplyScalar(b)}}(),projectOnPlane:function(){var a;return function(b){a===void 0&&(a=new THREE.Vector3);a.copy(this).projectOnVector(b);return this.sub(a)}}(),reflect:function(){var a;return function(b){a===void 0&&(a=new THREE.Vector3);return this.sub(a.copy(b).multiplyScalar(2*
this.dot(b)))}}(),angleTo:function(a){a=this.dot(a)/(this.length()*a.length());return Math.acos(THREE.Math.clamp(a,-1,1))},distanceTo:function(a){return Math.sqrt(this.distanceToSquared(a))},distanceToSquared:function(a){var b=this.x-a.x,c=this.y-a.y,a=this.z-a.z;return b*b+c*c+a*a},setEulerFromRotationMatrix:function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},setEulerFromQuaternion:function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")},
getPositionFromMatrix:function(a){console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().");return this.setFromMatrixPosition(a)},getScaleFromMatrix:function(a){console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().");return this.setFromMatrixScale(a)},getColumnFromMatrix:function(a,b){console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().");return this.setFromMatrixColumn(a,
b)},setFromMatrixPosition:function(a){this.x=a.elements[12];this.y=a.elements[13];this.z=a.elements[14];return this},setFromMatrixScale:function(a){var b=this.set(a.elements[0],a.elements[1],a.elements[2]).length(),c=this.set(a.elements[4],a.elements[5],a.elements[6]).length(),a=this.set(a.elements[8],a.elements[9],a.elements[10]).length();this.x=b;this.y=c;this.z=a;return this},setFromMatrixColumn:function(a,b){var c=a*4,d=b.elements;this.x=d[c];this.y=d[c+1];this.z=d[c+2];return this},equals:function(a){return a.x===
this.x&&a.y===this.y&&a.z===this.z},fromArray:function(a,b){b===void 0&&(b=0);this.x=a[b];this.y=a[b+1];this.z=a[b+2];return this},toArray:function(a,b){a===void 0&&(a=[]);b===void 0&&(b=0);a[b]=this.x;a[b+1]=this.y;a[b+2]=this.z;return a},fromAttribute:function(a,b,c){c===void 0&&(c=0);b=b*a.itemSize+c;this.x=a.array[b];this.y=a.array[b+1];this.z=a.array[b+2];return this}};THREE.Vector4=function(a,b,c,d){this.x=a||0;this.y=b||0;this.z=c||0;this.w=d!==void 0?d:1};
THREE.Vector4.prototype={constructor:THREE.Vector4,set:function(a,b,c,d){this.x=a;this.y=b;this.z=c;this.w=d;return this},setX:function(a){this.x=a;return this},setY:function(a){this.y=a;return this},setZ:function(a){this.z=a;return this},setW:function(a){this.w=a;return this},setComponent:function(a,b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;case 2:this.z=b;break;case 3:this.w=b;break;default:throw Error("index is out of range: "+a);}},getComponent:function(a){switch(a){case 0:return this.x;
case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw Error("index is out of range: "+a);}},clone:function(){return new this.constructor(this.x,this.y,this.z,this.w)},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;this.w=a.w!==void 0?a.w:1;return this},add:function(a,b){if(b!==void 0){console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.");return this.addVectors(a,b)}this.x=this.x+a.x;this.y=this.y+a.y;this.z=this.z+a.z;this.w=
this.w+a.w;return this},addScalar:function(a){this.x=this.x+a;this.y=this.y+a;this.z=this.z+a;this.w=this.w+a;return this},addVectors:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;this.w=a.w+b.w;return this},addScaledVector:function(a,b){this.x=this.x+a.x*b;this.y=this.y+a.y*b;this.z=this.z+a.z*b;this.w=this.w+a.w*b;return this},sub:function(a,b){if(b!==void 0){console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.");return this.subVectors(a,
b)}this.x=this.x-a.x;this.y=this.y-a.y;this.z=this.z-a.z;this.w=this.w-a.w;return this},subScalar:function(a){this.x=this.x-a;this.y=this.y-a;this.z=this.z-a;this.w=this.w-a;return this},subVectors:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;this.w=a.w-b.w;return this},multiplyScalar:function(a){if(isFinite(a)){this.x=this.x*a;this.y=this.y*a;this.z=this.z*a;this.w=this.w*a}else this.w=this.z=this.y=this.x=0;return this},applyMatrix4:function(a){var b=this.x,c=this.y,d=this.z,e=this.w,
a=a.elements;this.x=a[0]*b+a[4]*c+a[8]*d+a[12]*e;this.y=a[1]*b+a[5]*c+a[9]*d+a[13]*e;this.z=a[2]*b+a[6]*c+a[10]*d+a[14]*e;this.w=a[3]*b+a[7]*c+a[11]*d+a[15]*e;return this},divideScalar:function(a){return this.multiplyScalar(1/a)},setAxisAngleFromQuaternion:function(a){this.w=2*Math.acos(a.w);var b=Math.sqrt(1-a.w*a.w);if(b<1.0E-4){this.x=1;this.z=this.y=0}else{this.x=a.x/b;this.y=a.y/b;this.z=a.z/b}return this},setAxisAngleFromRotationMatrix:function(a){var b,c,d,a=a.elements,e=a[0];d=a[4];var g=
a[8],f=a[1],h=a[5],j=a[9];c=a[2];b=a[6];var i=a[10];if(Math.abs(d-f)<0.01&&Math.abs(g-c)<0.01&&Math.abs(j-b)<0.01){if(Math.abs(d+f)<0.1&&Math.abs(g+c)<0.1&&Math.abs(j+b)<0.1&&Math.abs(e+h+i-3)<0.1){this.set(1,0,0,0);return this}a=Math.PI;e=(e+1)/2;h=(h+1)/2;i=(i+1)/2;d=(d+f)/4;g=(g+c)/4;j=(j+b)/4;if(e>h&&e>i)if(e<0.01){b=0;d=c=0.707106781}else{b=Math.sqrt(e);c=d/b;d=g/b}else if(h>i)if(h<0.01){b=0.707106781;c=0;d=0.707106781}else{c=Math.sqrt(h);b=d/c;d=j/c}else if(i<0.01){c=b=0.707106781;d=0}else{d=
Math.sqrt(i);b=g/d;c=j/d}this.set(b,c,d,a);return this}a=Math.sqrt((b-j)*(b-j)+(g-c)*(g-c)+(f-d)*(f-d));Math.abs(a)<0.001&&(a=1);this.x=(b-j)/a;this.y=(g-c)/a;this.z=(f-d)/a;this.w=Math.acos((e+h+i-1)/2);return this},min:function(a){this.x=Math.min(this.x,a.x);this.y=Math.min(this.y,a.y);this.z=Math.min(this.z,a.z);this.w=Math.min(this.w,a.w);return this},max:function(a){this.x=Math.max(this.x,a.x);this.y=Math.max(this.y,a.y);this.z=Math.max(this.z,a.z);this.w=Math.max(this.w,a.w);return this},clamp:function(a,
b){this.x=Math.max(a.x,Math.min(b.x,this.x));this.y=Math.max(a.y,Math.min(b.y,this.y));this.z=Math.max(a.z,Math.min(b.z,this.z));this.w=Math.max(a.w,Math.min(b.w,this.w));return this},clampScalar:function(){var a,b;return function(c,d){if(a===void 0){a=new THREE.Vector4;b=new THREE.Vector4}a.set(c,c,c,c);b.set(d,d,d,d);return this.clamp(a,b)}}(),floor:function(){this.x=Math.floor(this.x);this.y=Math.floor(this.y);this.z=Math.floor(this.z);this.w=Math.floor(this.w);return this},ceil:function(){this.x=
Math.ceil(this.x);this.y=Math.ceil(this.y);this.z=Math.ceil(this.z);this.w=Math.ceil(this.w);return this},round:function(){this.x=Math.round(this.x);this.y=Math.round(this.y);this.z=Math.round(this.z);this.w=Math.round(this.w);return this},roundToZero:function(){this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x);this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y);this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z);this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w);return this},negate:function(){this.x=
-this.x;this.y=-this.y;this.z=-this.z;this.w=-this.w;return this},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z+this.w*a.w},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length())},setLength:function(a){return this.multiplyScalar(a/
this.length())},lerp:function(a,b){this.x=this.x+(a.x-this.x)*b;this.y=this.y+(a.y-this.y)*b;this.z=this.z+(a.z-this.z)*b;this.w=this.w+(a.w-this.w)*b;return this},lerpVectors:function(a,b,c){this.subVectors(b,a).multiplyScalar(c).add(a);return this},equals:function(a){return a.x===this.x&&a.y===this.y&&a.z===this.z&&a.w===this.w},fromArray:function(a,b){b===void 0&&(b=0);this.x=a[b];this.y=a[b+1];this.z=a[b+2];this.w=a[b+3];return this},toArray:function(a,b){a===void 0&&(a=[]);b===void 0&&(b=0);
a[b]=this.x;a[b+1]=this.y;a[b+2]=this.z;a[b+3]=this.w;return a},fromAttribute:function(a,b,c){c===void 0&&(c=0);b=b*a.itemSize+c;this.x=a.array[b];this.y=a.array[b+1];this.z=a.array[b+2];this.w=a.array[b+3];return this}};THREE.Euler=function(a,b,c,d){this._x=a||0;this._y=b||0;this._z=c||0;this._order=d||THREE.Euler.DefaultOrder};THREE.Euler.RotationOrders="XYZ YZX ZXY XZY YXZ ZYX".split(" ");THREE.Euler.DefaultOrder="XYZ";
THREE.Euler.prototype={constructor:THREE.Euler,get x(){return this._x},set x(a){this._x=a;this.onChangeCallback()},get y(){return this._y},set y(a){this._y=a;this.onChangeCallback()},get z(){return this._z},set z(a){this._z=a;this.onChangeCallback()},get order(){return this._order},set order(a){this._order=a;this.onChangeCallback()},set:function(a,b,c,d){this._x=a;this._y=b;this._z=c;this._order=d||this._order;this.onChangeCallback();return this},clone:function(){return new this.constructor(this._x,
this._y,this._z,this._order)},copy:function(a){this._x=a._x;this._y=a._y;this._z=a._z;this._order=a._order;this.onChangeCallback();return this},setFromRotationMatrix:function(a,b,c){var d=THREE.Math.clamp,e=a.elements,a=e[0],g=e[4],f=e[8],h=e[1],j=e[5],i=e[9],k=e[2],m=e[6],e=e[10],b=b||this._order;if(b==="XYZ"){this._y=Math.asin(d(f,-1,1));if(Math.abs(f)<0.99999){this._x=Math.atan2(-i,e);this._z=Math.atan2(-g,a)}else{this._x=Math.atan2(m,j);this._z=0}}else if(b==="YXZ"){this._x=Math.asin(-d(i,-1,
1));if(Math.abs(i)<0.99999){this._y=Math.atan2(f,e);this._z=Math.atan2(h,j)}else{this._y=Math.atan2(-k,a);this._z=0}}else if(b==="ZXY"){this._x=Math.asin(d(m,-1,1));if(Math.abs(m)<0.99999){this._y=Math.atan2(-k,e);this._z=Math.atan2(-g,j)}else{this._y=0;this._z=Math.atan2(h,a)}}else if(b==="ZYX"){this._y=Math.asin(-d(k,-1,1));if(Math.abs(k)<0.99999){this._x=Math.atan2(m,e);this._z=Math.atan2(h,a)}else{this._x=0;this._z=Math.atan2(-g,j)}}else if(b==="YZX"){this._z=Math.asin(d(h,-1,1));if(Math.abs(h)<
0.99999){this._x=Math.atan2(-i,j);this._y=Math.atan2(-k,a)}else{this._x=0;this._y=Math.atan2(f,e)}}else if(b==="XZY"){this._z=Math.asin(-d(g,-1,1));if(Math.abs(g)<0.99999){this._x=Math.atan2(m,j);this._y=Math.atan2(f,a)}else{this._x=Math.atan2(-i,e);this._y=0}}else console.warn("THREE.Euler: .setFromRotationMatrix() given unsupported order: "+b);this._order=b;if(c!==false)this.onChangeCallback();return this},setFromQuaternion:function(){var a;return function(b,c,d){a===void 0&&(a=new THREE.Matrix4);
a.makeRotationFromQuaternion(b);this.setFromRotationMatrix(a,c,d);return this}}(),setFromVector3:function(a,b){return this.set(a.x,a.y,a.z,b||this._order)},reorder:function(){var a=new THREE.Quaternion;return function(b){a.setFromEuler(this);this.setFromQuaternion(a,b)}}(),equals:function(a){return a._x===this._x&&a._y===this._y&&a._z===this._z&&a._order===this._order},fromArray:function(a){this._x=a[0];this._y=a[1];this._z=a[2];if(a[3]!==void 0)this._order=a[3];this.onChangeCallback();return this},
toArray:function(a,b){a===void 0&&(a=[]);b===void 0&&(b=0);a[b]=this._x;a[b+1]=this._y;a[b+2]=this._z;a[b+3]=this._order;return a},toVector3:function(a){return a?a.set(this._x,this._y,this._z):new THREE.Vector3(this._x,this._y,this._z)},onChange:function(a){this.onChangeCallback=a;return this},onChangeCallback:function(){}};THREE.Line3=function(a,b){this.start=a!==void 0?a:new THREE.Vector3;this.end=b!==void 0?b:new THREE.Vector3};
THREE.Line3.prototype={constructor:THREE.Line3,set:function(a,b){this.start.copy(a);this.end.copy(b);return this},clone:function(){return(new this.constructor).copy(this)},copy:function(a){this.start.copy(a.start);this.end.copy(a.end);return this},center:function(a){return(a||new THREE.Vector3).addVectors(this.start,this.end).multiplyScalar(0.5)},delta:function(a){return(a||new THREE.Vector3).subVectors(this.end,this.start)},distanceSq:function(){return this.start.distanceToSquared(this.end)},distance:function(){return this.start.distanceTo(this.end)},
at:function(a,b){return this.delta(b||new THREE.Vector3).multiplyScalar(a).add(this.start)},closestPointToPointParameter:function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(c,d){a.subVectors(c,this.start);b.subVectors(this.end,this.start);var e=b.dot(b),e=b.dot(a)/e;d&&(e=THREE.Math.clamp(e,0,1));return e}}(),closestPointToPoint:function(a,b,c){a=this.closestPointToPointParameter(a,b);return this.delta(c||new THREE.Vector3).multiplyScalar(a).add(this.start)},applyMatrix4:function(a){this.start.applyMatrix4(a);
this.end.applyMatrix4(a);return this},equals:function(a){return a.start.equals(this.start)&&a.end.equals(this.end)}};THREE.Box2=function(a,b){this.min=a!==void 0?a:new THREE.Vector2(Infinity,Infinity);this.max=b!==void 0?b:new THREE.Vector2(-Infinity,-Infinity)};
THREE.Box2.prototype={constructor:THREE.Box2,set:function(a,b){this.min.copy(a);this.max.copy(b);return this},setFromPoints:function(a){this.makeEmpty();for(var b=0,c=a.length;b<c;b++)this.expandByPoint(a[b]);return this},setFromCenterAndSize:function(){var a=new THREE.Vector2;return function(b,c){var d=a.copy(c).multiplyScalar(0.5);this.min.copy(b).sub(d);this.max.copy(b).add(d);return this}}(),clone:function(){return(new this.constructor).copy(this)},copy:function(a){this.min.copy(a.min);this.max.copy(a.max);
return this},makeEmpty:function(){this.min.x=this.min.y=Infinity;this.max.x=this.max.y=-Infinity;return this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y},center:function(a){return(a||new THREE.Vector2).addVectors(this.min,this.max).multiplyScalar(0.5)},size:function(a){return(a||new THREE.Vector2).subVectors(this.max,this.min)},expandByPoint:function(a){this.min.min(a);this.max.max(a);return this},expandByVector:function(a){this.min.sub(a);this.max.add(a);return this},expandByScalar:function(a){this.min.addScalar(-a);
this.max.addScalar(a);return this},containsPoint:function(a){return a.x<this.min.x||a.x>this.max.x||a.y<this.min.y||a.y>this.max.y?false:true},containsBox:function(a){return this.min.x<=a.min.x&&a.max.x<=this.max.x&&this.min.y<=a.min.y&&a.max.y<=this.max.y?true:false},getParameter:function(a,b){return(b||new THREE.Vector2).set((a.x-this.min.x)/(this.max.x-this.min.x),(a.y-this.min.y)/(this.max.y-this.min.y))},isIntersectionBox:function(a){return a.max.x<this.min.x||a.min.x>this.max.x||a.max.y<this.min.y||
a.min.y>this.max.y?false:true},clampPoint:function(a,b){return(b||new THREE.Vector2).copy(a).clamp(this.min,this.max)},distanceToPoint:function(){var a=new THREE.Vector2;return function(b){return a.copy(b).clamp(this.min,this.max).sub(b).length()}}(),intersect:function(a){this.min.max(a.min);this.max.min(a.max);return this},union:function(a){this.min.min(a.min);this.max.max(a.max);return this},translate:function(a){this.min.add(a);this.max.add(a);return this},equals:function(a){return a.min.equals(this.min)&&
a.max.equals(this.max)}};THREE.Box3=function(a,b){this.min=a!==void 0?a:new THREE.Vector3(Infinity,Infinity,Infinity);this.max=b!==void 0?b:new THREE.Vector3(-Infinity,-Infinity,-Infinity)};
THREE.Box3.prototype={constructor:THREE.Box3,set:function(a,b){this.min.copy(a);this.max.copy(b);return this},setFromPoints:function(a){this.makeEmpty();for(var b=0,c=a.length;b<c;b++)this.expandByPoint(a[b]);return this},setFromCenterAndSize:function(){var a=new THREE.Vector3;return function(b,c){var d=a.copy(c).multiplyScalar(0.5);this.min.copy(b).sub(d);this.max.copy(b).add(d);return this}}(),setFromObject:function(){var a=new THREE.Vector3;return function(b){var c=this;b.updateMatrixWorld(true);
this.makeEmpty();b.traverse(function(b){var e=b.geometry;if(e!==void 0)if(e instanceof THREE.Geometry)for(var g=e.vertices,e=0,f=g.length;e<f;e++){a.copy(g[e]);a.applyMatrix4(b.matrixWorld);c.expandByPoint(a)}else if(e instanceof THREE.BufferGeometry&&e.attributes.position!==void 0){g=e.attributes.position.array;e=0;for(f=g.length;e<f;e=e+3){a.set(g[e],g[e+1],g[e+2]);a.applyMatrix4(b.matrixWorld);c.expandByPoint(a)}}});return this}}(),clone:function(){return(new this.constructor).copy(this)},copy:function(a){this.min.copy(a.min);
this.max.copy(a.max);return this},makeEmpty:function(){this.min.x=this.min.y=this.min.z=Infinity;this.max.x=this.max.y=this.max.z=-Infinity;return this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},center:function(a){return(a||new THREE.Vector3).addVectors(this.min,this.max).multiplyScalar(0.5)},size:function(a){return(a||new THREE.Vector3).subVectors(this.max,this.min)},expandByPoint:function(a){this.min.min(a);this.max.max(a);return this},expandByVector:function(a){this.min.sub(a);
this.max.add(a);return this},expandByScalar:function(a){this.min.addScalar(-a);this.max.addScalar(a);return this},containsPoint:function(a){return a.x<this.min.x||a.x>this.max.x||a.y<this.min.y||a.y>this.max.y||a.z<this.min.z||a.z>this.max.z?false:true},containsBox:function(a){return this.min.x<=a.min.x&&a.max.x<=this.max.x&&this.min.y<=a.min.y&&a.max.y<=this.max.y&&this.min.z<=a.min.z&&a.max.z<=this.max.z?true:false},getParameter:function(a,b){return(b||new THREE.Vector3).set((a.x-this.min.x)/(this.max.x-
this.min.x),(a.y-this.min.y)/(this.max.y-this.min.y),(a.z-this.min.z)/(this.max.z-this.min.z))},isIntersectionBox:function(a){return a.max.x<this.min.x||a.min.x>this.max.x||a.max.y<this.min.y||a.min.y>this.max.y||a.max.z<this.min.z||a.min.z>this.max.z?false:true},clampPoint:function(a,b){return(b||new THREE.Vector3).copy(a).clamp(this.min,this.max)},distanceToPoint:function(){var a=new THREE.Vector3;return function(b){return a.copy(b).clamp(this.min,this.max).sub(b).length()}}(),getBoundingSphere:function(){var a=
new THREE.Vector3;return function(b){b=b||new THREE.Sphere;b.center=this.center();b.radius=this.size(a).length()*0.5;return b}}(),intersect:function(a){this.min.max(a.min);this.max.min(a.max);return this},union:function(a){this.min.min(a.min);this.max.max(a.max);return this},applyMatrix4:function(){var a=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];return function(b){a[0].set(this.min.x,this.min.y,
this.min.z).applyMatrix4(b);a[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(b);a[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(b);a[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(b);a[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(b);a[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(b);a[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(b);a[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(b);this.makeEmpty();this.setFromPoints(a);return this}}(),translate:function(a){this.min.add(a);
this.max.add(a);return this},equals:function(a){return a.min.equals(this.min)&&a.max.equals(this.max)}};THREE.Matrix3=function(){this.elements=new Float32Array([1,0,0,0,1,0,0,0,1]);arguments.length>0&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")};
THREE.Matrix3.prototype={constructor:THREE.Matrix3,set:function(a,b,c,d,e,g,f,h,j){var i=this.elements;i[0]=a;i[3]=b;i[6]=c;i[1]=d;i[4]=e;i[7]=g;i[2]=f;i[5]=h;i[8]=j;return this},identity:function(){this.set(1,0,0,0,1,0,0,0,1);return this},clone:function(){return(new this.constructor).fromArray(this.elements)},copy:function(a){a=a.elements;this.set(a[0],a[3],a[6],a[1],a[4],a[7],a[2],a[5],a[8]);return this},multiplyVector3:function(a){console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.");
return a.applyMatrix3(this)},multiplyVector3Array:function(a){console.warn("THREE.Matrix3: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.");return this.applyToVector3Array(a)},applyToVector3Array:function(){var a;return function(b,c,d){a===void 0&&(a=new THREE.Vector3);c===void 0&&(c=0);if(d===void 0)d=b.length;for(var e=0;e<d;e=e+3,c=c+3){a.fromArray(b,c);a.applyMatrix3(this);a.toArray(b,c)}return b}}(),applyToBuffer:function(){var a;return function(b,
c,d){a===void 0&&(a=new THREE.Vector3);c===void 0&&(c=0);d===void 0&&(d=b.length/b.itemSize);for(var e=0;e<d;e++,c++){a.x=b.getX(c);a.y=b.getY(c);a.z=b.getZ(c);a.applyMatrix3(this);b.setXYZ(a.x,a.y,a.z)}return b}}(),multiplyScalar:function(a){var b=this.elements;b[0]=b[0]*a;b[3]=b[3]*a;b[6]=b[6]*a;b[1]=b[1]*a;b[4]=b[4]*a;b[7]=b[7]*a;b[2]=b[2]*a;b[5]=b[5]*a;b[8]=b[8]*a;return this},determinant:function(){var a=this.elements,b=a[0],c=a[1],d=a[2],e=a[3],g=a[4],f=a[5],h=a[6],j=a[7],a=a[8];return b*g*
a-b*f*j-c*e*a+c*f*h+d*e*j-d*g*h},getInverse:function(a,b){var c=a.elements,d=this.elements;d[0]=c[10]*c[5]-c[6]*c[9];d[1]=-c[10]*c[1]+c[2]*c[9];d[2]=c[6]*c[1]-c[2]*c[5];d[3]=-c[10]*c[4]+c[6]*c[8];d[4]=c[10]*c[0]-c[2]*c[8];d[5]=-c[6]*c[0]+c[2]*c[4];d[6]=c[9]*c[4]-c[5]*c[8];d[7]=-c[9]*c[0]+c[1]*c[8];d[8]=c[5]*c[0]-c[1]*c[4];c=c[0]*d[0]+c[1]*d[3]+c[2]*d[6];if(c===0){if(b)throw Error("Matrix3.getInverse(): can't invert matrix, determinant is 0");console.warn("Matrix3.getInverse(): can't invert matrix, determinant is 0");
this.identity();return this}this.multiplyScalar(1/c);return this},transpose:function(){var a,b=this.elements;a=b[1];b[1]=b[3];b[3]=a;a=b[2];b[2]=b[6];b[6]=a;a=b[5];b[5]=b[7];b[7]=a;return this},flattenToArrayOffset:function(a,b){var c=this.elements;a[b]=c[0];a[b+1]=c[1];a[b+2]=c[2];a[b+3]=c[3];a[b+4]=c[4];a[b+5]=c[5];a[b+6]=c[6];a[b+7]=c[7];a[b+8]=c[8];return a},getNormalMatrix:function(a){this.getInverse(a).transpose();return this},transposeIntoArray:function(a){var b=this.elements;a[0]=b[0];a[1]=
b[3];a[2]=b[6];a[3]=b[1];a[4]=b[4];a[5]=b[7];a[6]=b[2];a[7]=b[5];a[8]=b[8];return this},fromArray:function(a){this.elements.set(a);return this},toArray:function(){var a=this.elements;return[a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8]]}};THREE.Matrix4=function(){this.elements=new Float32Array([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]);arguments.length>0&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")};
THREE.Matrix4.prototype={constructor:THREE.Matrix4,set:function(a,b,c,d,e,g,f,h,j,i,k,m,l,n,p,r){var s=this.elements;s[0]=a;s[4]=b;s[8]=c;s[12]=d;s[1]=e;s[5]=g;s[9]=f;s[13]=h;s[2]=j;s[6]=i;s[10]=k;s[14]=m;s[3]=l;s[7]=n;s[11]=p;s[15]=r;return this},identity:function(){this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);return this},clone:function(){return(new THREE.Matrix4).fromArray(this.elements)},copy:function(a){this.elements.set(a.elements);return this},extractPosition:function(a){console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().");
return this.copyPosition(a)},copyPosition:function(a){var b=this.elements,a=a.elements;b[12]=a[12];b[13]=a[13];b[14]=a[14];return this},extractBasis:function(a,b,c){var d=this.elements;a.set(d[0],d[1],d[2]);b.set(d[4],d[5],d[6]);c.set(d[8],d[9],d[10]);return this},makeBasis:function(a,b,c){this.set(a.x,b.x,c.x,0,a.y,b.y,c.y,0,a.z,b.z,c.z,0,0,0,0,1);return this},extractRotation:function(){var a;return function(b){a===void 0&&(a=new THREE.Vector3);var c=this.elements,b=b.elements,d=1/a.set(b[0],b[1],
b[2]).length(),e=1/a.set(b[4],b[5],b[6]).length(),g=1/a.set(b[8],b[9],b[10]).length();c[0]=b[0]*d;c[1]=b[1]*d;c[2]=b[2]*d;c[4]=b[4]*e;c[5]=b[5]*e;c[6]=b[6]*e;c[8]=b[8]*g;c[9]=b[9]*g;c[10]=b[10]*g;return this}}(),makeRotationFromEuler:function(a){a instanceof THREE.Euler===false&&console.error("THREE.Matrix: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");var b=this.elements,c=a.x,d=a.y,e=a.z,g=Math.cos(c),c=Math.sin(c),f=Math.cos(d),d=Math.sin(d),h=Math.cos(e),
e=Math.sin(e);if(a.order==="XYZ"){var a=g*h,j=g*e,i=c*h,k=c*e;b[0]=f*h;b[4]=-f*e;b[8]=d;b[1]=j+i*d;b[5]=a-k*d;b[9]=-c*f;b[2]=k-a*d;b[6]=i+j*d;b[10]=g*f}else if(a.order==="YXZ"){a=f*h;j=f*e;i=d*h;k=d*e;b[0]=a+k*c;b[4]=i*c-j;b[8]=g*d;b[1]=g*e;b[5]=g*h;b[9]=-c;b[2]=j*c-i;b[6]=k+a*c;b[10]=g*f}else if(a.order==="ZXY"){a=f*h;j=f*e;i=d*h;k=d*e;b[0]=a-k*c;b[4]=-g*e;b[8]=i+j*c;b[1]=j+i*c;b[5]=g*h;b[9]=k-a*c;b[2]=-g*d;b[6]=c;b[10]=g*f}else if(a.order==="ZYX"){a=g*h;j=g*e;i=c*h;k=c*e;b[0]=f*h;b[4]=i*d-j;b[8]=
a*d+k;b[1]=f*e;b[5]=k*d+a;b[9]=j*d-i;b[2]=-d;b[6]=c*f;b[10]=g*f}else if(a.order==="YZX"){a=g*f;j=g*d;i=c*f;k=c*d;b[0]=f*h;b[4]=k-a*e;b[8]=i*e+j;b[1]=e;b[5]=g*h;b[9]=-c*h;b[2]=-d*h;b[6]=j*e+i;b[10]=a-k*e}else if(a.order==="XZY"){a=g*f;j=g*d;i=c*f;k=c*d;b[0]=f*h;b[4]=-e;b[8]=d*h;b[1]=a*e+k;b[5]=g*h;b[9]=j*e-i;b[2]=i*e-j;b[6]=c*h;b[10]=k*e+a}b[3]=0;b[7]=0;b[11]=0;b[12]=0;b[13]=0;b[14]=0;b[15]=1;return this},setRotationFromQuaternion:function(a){console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().");
return this.makeRotationFromQuaternion(a)},makeRotationFromQuaternion:function(a){var b=this.elements,c=a.x,d=a.y,e=a.z,g=a.w,f=c+c,h=d+d,j=e+e,a=c*f,i=c*h,c=c*j,k=d*h,d=d*j,e=e*j,f=g*f,h=g*h,g=g*j;b[0]=1-(k+e);b[4]=i-g;b[8]=c+h;b[1]=i+g;b[5]=1-(a+e);b[9]=d-f;b[2]=c-h;b[6]=d+f;b[10]=1-(a+k);b[3]=0;b[7]=0;b[11]=0;b[12]=0;b[13]=0;b[14]=0;b[15]=1;return this},lookAt:function(){var a,b,c;return function(d,e,g){a===void 0&&(a=new THREE.Vector3);b===void 0&&(b=new THREE.Vector3);c===void 0&&(c=new THREE.Vector3);
var f=this.elements;c.subVectors(d,e).normalize();if(c.lengthSq()===0)c.z=1;a.crossVectors(g,c).normalize();if(a.lengthSq()===0){c.x=c.x+1.0E-4;a.crossVectors(g,c).normalize()}b.crossVectors(c,a);f[0]=a.x;f[4]=b.x;f[8]=c.x;f[1]=a.y;f[5]=b.y;f[9]=c.y;f[2]=a.z;f[6]=b.z;f[10]=c.z;return this}}(),multiply:function(a,b){if(b!==void 0){console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.");return this.multiplyMatrices(a,b)}return this.multiplyMatrices(this,
a)},multiplyMatrices:function(a,b){var c=a.elements,d=b.elements,e=this.elements,g=c[0],f=c[4],h=c[8],j=c[12],i=c[1],k=c[5],m=c[9],l=c[13],n=c[2],p=c[6],r=c[10],s=c[14],q=c[3],u=c[7],A=c[11],c=c[15],t=d[0],y=d[4],v=d[8],w=d[12],x=d[1],K=d[5],F=d[9],C=d[13],J=d[2],I=d[6],L=d[10],D=d[14],B=d[3],z=d[7],H=d[11],d=d[15];e[0]=g*t+f*x+h*J+j*B;e[4]=g*y+f*K+h*I+j*z;e[8]=g*v+f*F+h*L+j*H;e[12]=g*w+f*C+h*D+j*d;e[1]=i*t+k*x+m*J+l*B;e[5]=i*y+k*K+m*I+l*z;e[9]=i*v+k*F+m*L+l*H;e[13]=i*w+k*C+m*D+l*d;e[2]=n*t+p*x+r*
J+s*B;e[6]=n*y+p*K+r*I+s*z;e[10]=n*v+p*F+r*L+s*H;e[14]=n*w+p*C+r*D+s*d;e[3]=q*t+u*x+A*J+c*B;e[7]=q*y+u*K+A*I+c*z;e[11]=q*v+u*F+A*L+c*H;e[15]=q*w+u*C+A*D+c*d;return this},multiplyToArray:function(a,b,c){var d=this.elements;this.multiplyMatrices(a,b);c[0]=d[0];c[1]=d[1];c[2]=d[2];c[3]=d[3];c[4]=d[4];c[5]=d[5];c[6]=d[6];c[7]=d[7];c[8]=d[8];c[9]=d[9];c[10]=d[10];c[11]=d[11];c[12]=d[12];c[13]=d[13];c[14]=d[14];c[15]=d[15];return this},multiplyScalar:function(a){var b=this.elements;b[0]=b[0]*a;b[4]=b[4]*
a;b[8]=b[8]*a;b[12]=b[12]*a;b[1]=b[1]*a;b[5]=b[5]*a;b[9]=b[9]*a;b[13]=b[13]*a;b[2]=b[2]*a;b[6]=b[6]*a;b[10]=b[10]*a;b[14]=b[14]*a;b[3]=b[3]*a;b[7]=b[7]*a;b[11]=b[11]*a;b[15]=b[15]*a;return this},multiplyVector3:function(a){console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead.");return a.applyProjection(this)},multiplyVector4:function(a){console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.");
return a.applyMatrix4(this)},multiplyVector3Array:function(a){console.warn("THREE.Matrix4: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.");return this.applyToVector3Array(a)},applyToVector3Array:function(){var a;return function(b,c,d){a===void 0&&(a=new THREE.Vector3);c===void 0&&(c=0);if(d===void 0)d=b.length;for(var e=0;e<d;e=e+3,c=c+3){a.fromArray(b,c);a.applyMatrix4(this);a.toArray(b,c)}return b}}(),applyToBuffer:function(){var a;return function(b,
c,d){a===void 0&&(a=new THREE.Vector3);c===void 0&&(c=0);d===void 0&&(d=b.length/b.itemSize);for(var e=0;e<d;e++,c++){a.x=b.getX(c);a.y=b.getY(c);a.z=b.getZ(c);a.applyMatrix4(this);b.setXYZ(a.x,a.y,a.z)}return b}}(),rotateAxis:function(a){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.");a.transformDirection(this)},crossVector:function(a){console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.");
return a.applyMatrix4(this)},determinant:function(){var a=this.elements,b=a[0],c=a[4],d=a[8],e=a[12],g=a[1],f=a[5],h=a[9],j=a[13],i=a[2],k=a[6],m=a[10],l=a[14];return a[3]*(+e*h*k-d*j*k-e*f*m+c*j*m+d*f*l-c*h*l)+a[7]*(+b*h*l-b*j*m+e*g*m-d*g*l+d*j*i-e*h*i)+a[11]*(+b*j*k-b*f*l-e*g*k+c*g*l+e*f*i-c*j*i)+a[15]*(-d*f*i-b*h*k+b*f*m+d*g*k-c*g*m+c*h*i)},transpose:function(){var a=this.elements,b;b=a[1];a[1]=a[4];a[4]=b;b=a[2];a[2]=a[8];a[8]=b;b=a[6];a[6]=a[9];a[9]=b;b=a[3];a[3]=a[12];a[12]=b;b=a[7];a[7]=a[13];
a[13]=b;b=a[11];a[11]=a[14];a[14]=b;return this},flattenToArrayOffset:function(a,b){var c=this.elements;a[b]=c[0];a[b+1]=c[1];a[b+2]=c[2];a[b+3]=c[3];a[b+4]=c[4];a[b+5]=c[5];a[b+6]=c[6];a[b+7]=c[7];a[b+8]=c[8];a[b+9]=c[9];a[b+10]=c[10];a[b+11]=c[11];a[b+12]=c[12];a[b+13]=c[13];a[b+14]=c[14];a[b+15]=c[15];return a},getPosition:function(){var a;return function(){a===void 0&&(a=new THREE.Vector3);console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.");
var b=this.elements;return a.set(b[12],b[13],b[14])}}(),setPosition:function(a){var b=this.elements;b[12]=a.x;b[13]=a.y;b[14]=a.z;return this},getInverse:function(a,b){var c=this.elements,d=a.elements,e=d[0],g=d[4],f=d[8],h=d[12],j=d[1],i=d[5],k=d[9],m=d[13],l=d[2],n=d[6],p=d[10],r=d[14],s=d[3],q=d[7],u=d[11],d=d[15];c[0]=k*r*q-m*p*q+m*n*u-i*r*u-k*n*d+i*p*d;c[4]=h*p*q-f*r*q-h*n*u+g*r*u+f*n*d-g*p*d;c[8]=f*m*q-h*k*q+h*i*u-g*m*u-f*i*d+g*k*d;c[12]=h*k*n-f*m*n-h*i*p+g*m*p+f*i*r-g*k*r;c[1]=m*p*s-k*r*s-
m*l*u+j*r*u+k*l*d-j*p*d;c[5]=f*r*s-h*p*s+h*l*u-e*r*u-f*l*d+e*p*d;c[9]=h*k*s-f*m*s-h*j*u+e*m*u+f*j*d-e*k*d;c[13]=f*m*l-h*k*l+h*j*p-e*m*p-f*j*r+e*k*r;c[2]=i*r*s-m*n*s+m*l*q-j*r*q-i*l*d+j*n*d;c[6]=h*n*s-g*r*s-h*l*q+e*r*q+g*l*d-e*n*d;c[10]=g*m*s-h*i*s+h*j*q-e*m*q-g*j*d+e*i*d;c[14]=h*i*l-g*m*l-h*j*n+e*m*n+g*j*r-e*i*r;c[3]=k*n*s-i*p*s-k*l*q+j*p*q+i*l*u-j*n*u;c[7]=g*p*s-f*n*s+f*l*q-e*p*q-g*l*u+e*n*u;c[11]=f*i*s-g*k*s-f*j*q+e*k*q+g*j*u-e*i*u;c[15]=g*k*l-f*i*l+f*j*n-e*k*n-g*j*p+e*i*p;c=e*c[0]+j*c[4]+l*c[8]+
s*c[12];if(c===0){if(b)throw Error("THREE.Matrix4.getInverse(): can't invert matrix, determinant is 0");console.warn("THREE.Matrix4.getInverse(): can't invert matrix, determinant is 0");this.identity();return this}this.multiplyScalar(1/c);return this},translate:function(){console.error("THREE.Matrix4: .translate() has been removed.")},rotateX:function(){console.error("THREE.Matrix4: .rotateX() has been removed.")},rotateY:function(){console.error("THREE.Matrix4: .rotateY() has been removed.")},rotateZ:function(){console.error("THREE.Matrix4: .rotateZ() has been removed.")},
rotateByAxis:function(){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")},scale:function(a){var b=this.elements,c=a.x,d=a.y,a=a.z;b[0]=b[0]*c;b[4]=b[4]*d;b[8]=b[8]*a;b[1]=b[1]*c;b[5]=b[5]*d;b[9]=b[9]*a;b[2]=b[2]*c;b[6]=b[6]*d;b[10]=b[10]*a;b[3]=b[3]*c;b[7]=b[7]*d;b[11]=b[11]*a;return this},getMaxScaleOnAxis:function(){var a=this.elements;return Math.sqrt(Math.max(a[0]*a[0]+a[1]*a[1]+a[2]*a[2],a[4]*a[4]+a[5]*a[5]+a[6]*a[6],a[8]*a[8]+a[9]*a[9]+a[10]*a[10]))},makeTranslation:function(a,
b,c){this.set(1,0,0,a,0,1,0,b,0,0,1,c,0,0,0,1);return this},makeRotationX:function(a){var b=Math.cos(a),a=Math.sin(a);this.set(1,0,0,0,0,b,-a,0,0,a,b,0,0,0,0,1);return this},makeRotationY:function(a){var b=Math.cos(a),a=Math.sin(a);this.set(b,0,a,0,0,1,0,0,-a,0,b,0,0,0,0,1);return this},makeRotationZ:function(a){var b=Math.cos(a),a=Math.sin(a);this.set(b,-a,0,0,a,b,0,0,0,0,1,0,0,0,0,1);return this},makeRotationAxis:function(a,b){var c=Math.cos(b),d=Math.sin(b),e=1-c,g=a.x,f=a.y,h=a.z,j=e*g,i=e*f;
this.set(j*g+c,j*f-d*h,j*h+d*f,0,j*f+d*h,i*f+c,i*h-d*g,0,j*h-d*f,i*h+d*g,e*h*h+c,0,0,0,0,1);return this},makeScale:function(a,b,c){this.set(a,0,0,0,0,b,0,0,0,0,c,0,0,0,0,1);return this},compose:function(a,b,c){this.makeRotationFromQuaternion(b);this.scale(c);this.setPosition(a);return this},decompose:function(){var a,b;return function(c,d,e){a===void 0&&(a=new THREE.Vector3);b===void 0&&(b=new THREE.Matrix4);var g=this.elements,f=a.set(g[0],g[1],g[2]).length(),h=a.set(g[4],g[5],g[6]).length(),j=a.set(g[8],
g[9],g[10]).length();this.determinant()<0&&(f=-f);c.x=g[12];c.y=g[13];c.z=g[14];b.elements.set(this.elements);var c=1/f,g=1/h,i=1/j;b.elements[0]=b.elements[0]*c;b.elements[1]=b.elements[1]*c;b.elements[2]=b.elements[2]*c;b.elements[4]=b.elements[4]*g;b.elements[5]=b.elements[5]*g;b.elements[6]=b.elements[6]*g;b.elements[8]=b.elements[8]*i;b.elements[9]=b.elements[9]*i;b.elements[10]=b.elements[10]*i;d.setFromRotationMatrix(b);e.x=f;e.y=h;e.z=j;return this}}(),makeFrustum:function(a,b,c,d,e,g){var f=
this.elements;f[0]=2*e/(b-a);f[4]=0;f[8]=(b+a)/(b-a);f[12]=0;f[1]=0;f[5]=2*e/(d-c);f[9]=(d+c)/(d-c);f[13]=0;f[2]=0;f[6]=0;f[10]=-(g+e)/(g-e);f[14]=-2*g*e/(g-e);f[3]=0;f[7]=0;f[11]=-1;f[15]=0;return this},makePerspective:function(a,b,c,d){var a=c*Math.tan(THREE.Math.degToRad(a*0.5)),e=-a;return this.makeFrustum(e*b,a*b,e,a,c,d)},makeOrthographic:function(a,b,c,d,e,g){var f=this.elements,h=b-a,j=c-d,i=g-e;f[0]=2/h;f[4]=0;f[8]=0;f[12]=-((b+a)/h);f[1]=0;f[5]=2/j;f[9]=0;f[13]=-((c+d)/j);f[2]=0;f[6]=0;
f[10]=-2/i;f[14]=-((g+e)/i);f[3]=0;f[7]=0;f[11]=0;f[15]=1;return this},equals:function(a){for(var b=this.elements,a=a.elements,c=0;c<16;c++)if(b[c]!==a[c])return false;return true},fromArray:function(a){this.elements.set(a);return this},toArray:function(){var a=this.elements;return[a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13],a[14],a[15]]}};THREE.Ray=function(a,b){this.origin=a!==void 0?a:new THREE.Vector3;this.direction=b!==void 0?b:new THREE.Vector3};
THREE.Ray.prototype={constructor:THREE.Ray,set:function(a,b){this.origin.copy(a);this.direction.copy(b);return this},clone:function(){return(new this.constructor).copy(this)},copy:function(a){this.origin.copy(a.origin);this.direction.copy(a.direction);return this},at:function(a,b){return(b||new THREE.Vector3).copy(this.direction).multiplyScalar(a).add(this.origin)},recast:function(){var a=new THREE.Vector3;return function(b){this.origin.copy(this.at(b,a));return this}}(),closestPointToPoint:function(a,
b){var c=b||new THREE.Vector3;c.subVectors(a,this.origin);var d=c.dot(this.direction);return d<0?c.copy(this.origin):c.copy(this.direction).multiplyScalar(d).add(this.origin)},distanceToPoint:function(a){return Math.sqrt(this.distanceSqToPoint(a))},distanceSqToPoint:function(){var a=new THREE.Vector3;return function(b){var c=a.subVectors(b,this.origin).dot(this.direction);if(c<0)return this.origin.distanceToSquared(b);a.copy(this.direction).multiplyScalar(c).add(this.origin);return a.distanceToSquared(b)}}(),
distanceSqToSegment:function(){var a=new THREE.Vector3,b=new THREE.Vector3,c=new THREE.Vector3;return function(d,e,g,f){a.copy(d).add(e).multiplyScalar(0.5);b.copy(e).sub(d).normalize();c.copy(this.origin).sub(a);var h=d.distanceTo(e)*0.5,j=-this.direction.dot(b),i=c.dot(this.direction),k=-c.dot(b),m=c.lengthSq(),l=Math.abs(1-j*j),n;if(l>0){d=j*k-i;e=j*i-k;n=h*l;if(d>=0)if(e>=-n)if(e<=n){h=1/l;d=d*h;e=e*h;j=d*(d+j*e+2*i)+e*(j*d+e+2*k)+m}else{e=h;d=Math.max(0,-(j*e+i));j=-d*d+e*(e+2*k)+m}else{e=-h;
d=Math.max(0,-(j*e+i));j=-d*d+e*(e+2*k)+m}else if(e<=-n){d=Math.max(0,-(-j*h+i));e=d>0?-h:Math.min(Math.max(-h,-k),h);j=-d*d+e*(e+2*k)+m}else if(e<=n){d=0;e=Math.min(Math.max(-h,-k),h);j=e*(e+2*k)+m}else{d=Math.max(0,-(j*h+i));e=d>0?h:Math.min(Math.max(-h,-k),h);j=-d*d+e*(e+2*k)+m}}else{e=j>0?-h:h;d=Math.max(0,-(j*e+i));j=-d*d+e*(e+2*k)+m}g&&g.copy(this.direction).multiplyScalar(d).add(this.origin);f&&f.copy(b).multiplyScalar(e).add(a);return j}}(),isIntersectionSphere:function(a){return this.distanceToPoint(a.center)<=
a.radius},intersectSphere:function(){var a=new THREE.Vector3;return function(b,c){a.subVectors(b.center,this.origin);var d=a.dot(this.direction),e=a.dot(a)-d*d,g=b.radius*b.radius;if(e>g)return null;g=Math.sqrt(g-e);e=d-g;d=d+g;return e<0&&d<0?null:e<0?this.at(d,c):this.at(e,c)}}(),isIntersectionPlane:function(a){var b=a.distanceToPoint(this.origin);return b===0||a.normal.dot(this.direction)*b<0?true:false},distanceToPlane:function(a){var b=a.normal.dot(this.direction);if(b===0)return a.distanceToPoint(this.origin)===
0?0:null;a=-(this.origin.dot(a.normal)+a.constant)/b;return a>=0?a:null},intersectPlane:function(a,b){var c=this.distanceToPlane(a);return c===null?null:this.at(c,b)},isIntersectionBox:function(){var a=new THREE.Vector3;return function(b){return this.intersectBox(b,a)!==null}}(),intersectBox:function(a,b){var c,d,e,g,f;d=1/this.direction.x;g=1/this.direction.y;f=1/this.direction.z;var h=this.origin;if(d>=0){c=(a.min.x-h.x)*d;d=(a.max.x-h.x)*d}else{c=(a.max.x-h.x)*d;d=(a.min.x-h.x)*d}if(g>=0){e=(a.min.y-
h.y)*g;g=(a.max.y-h.y)*g}else{e=(a.max.y-h.y)*g;g=(a.min.y-h.y)*g}if(c>g||e>d)return null;if(e>c||c!==c)c=e;if(g<d||d!==d)d=g;if(f>=0){e=(a.min.z-h.z)*f;f=(a.max.z-h.z)*f}else{e=(a.max.z-h.z)*f;f=(a.min.z-h.z)*f}if(c>f||e>d)return null;if(e>c||c!==c)c=e;if(f<d||d!==d)d=f;return d<0?null:this.at(c>=0?c:d,b)},intersectTriangle:function(){var a=new THREE.Vector3,b=new THREE.Vector3,c=new THREE.Vector3,d=new THREE.Vector3;return function(e,g,f,h,j){b.subVectors(g,e);c.subVectors(f,e);d.crossVectors(b,
c);g=this.direction.dot(d);if(g>0){if(h)return null;h=1}else if(g<0){h=-1;g=-g}else return null;a.subVectors(this.origin,e);e=h*this.direction.dot(c.crossVectors(a,c));if(e<0)return null;f=h*this.direction.dot(b.cross(a));if(f<0||e+f>g)return null;e=-h*a.dot(d);return e<0?null:this.at(e/g,j)}}(),applyMatrix4:function(a){this.direction.add(this.origin).applyMatrix4(a);this.origin.applyMatrix4(a);this.direction.sub(this.origin);this.direction.normalize();return this},equals:function(a){return a.origin.equals(this.origin)&&
a.direction.equals(this.direction)}};THREE.Sphere=function(a,b){this.center=a!==void 0?a:new THREE.Vector3;this.radius=b!==void 0?b:0};
THREE.Sphere.prototype={constructor:THREE.Sphere,set:function(a,b){this.center.copy(a);this.radius=b;return this},setFromPoints:function(){var a=new THREE.Box3;return function(b,c){var d=this.center;c!==void 0?d.copy(c):a.setFromPoints(b).center(d);for(var e=0,g=0,f=b.length;g<f;g++)e=Math.max(e,d.distanceToSquared(b[g]));this.radius=Math.sqrt(e);return this}}(),clone:function(){return(new this.constructor).copy(this)},copy:function(a){this.center.copy(a.center);this.radius=a.radius;return this},
empty:function(){return this.radius<=0},containsPoint:function(a){return a.distanceToSquared(this.center)<=this.radius*this.radius},distanceToPoint:function(a){return a.distanceTo(this.center)-this.radius},intersectsSphere:function(a){var b=this.radius+a.radius;return a.center.distanceToSquared(this.center)<=b*b},clampPoint:function(a,b){var c=this.center.distanceToSquared(a),d=b||new THREE.Vector3;d.copy(a);if(c>this.radius*this.radius){d.sub(this.center).normalize();d.multiplyScalar(this.radius).add(this.center)}return d},
getBoundingBox:function(a){a=a||new THREE.Box3;a.set(this.center,this.center);a.expandByScalar(this.radius);return a},applyMatrix4:function(a){this.center.applyMatrix4(a);this.radius=this.radius*a.getMaxScaleOnAxis();return this},translate:function(a){this.center.add(a);return this},equals:function(a){return a.center.equals(this.center)&&a.radius===this.radius}};
THREE.Frustum=function(a,b,c,d,e,g){this.planes=[a!==void 0?a:new THREE.Plane,b!==void 0?b:new THREE.Plane,c!==void 0?c:new THREE.Plane,d!==void 0?d:new THREE.Plane,e!==void 0?e:new THREE.Plane,g!==void 0?g:new THREE.Plane]};
THREE.Frustum.prototype={constructor:THREE.Frustum,set:function(a,b,c,d,e,g){var f=this.planes;f[0].copy(a);f[1].copy(b);f[2].copy(c);f[3].copy(d);f[4].copy(e);f[5].copy(g);return this},clone:function(){return(new this.constructor).copy(this)},copy:function(a){for(var b=this.planes,c=0;c<6;c++)b[c].copy(a.planes[c]);return this},setFromMatrix:function(a){var b=this.planes,c=a.elements,a=c[0],d=c[1],e=c[2],g=c[3],f=c[4],h=c[5],j=c[6],i=c[7],k=c[8],m=c[9],l=c[10],n=c[11],p=c[12],r=c[13],s=c[14],c=c[15];
b[0].setComponents(g-a,i-f,n-k,c-p).normalize();b[1].setComponents(g+a,i+f,n+k,c+p).normalize();b[2].setComponents(g+d,i+h,n+m,c+r).normalize();b[3].setComponents(g-d,i-h,n-m,c-r).normalize();b[4].setComponents(g-e,i-j,n-l,c-s).normalize();b[5].setComponents(g+e,i+j,n+l,c+s).normalize();return this},intersectsObject:function(){var a=new THREE.Sphere;return function(b){var c=b.geometry;c.boundingSphere===null&&c.computeBoundingSphere();a.copy(c.boundingSphere);a.applyMatrix4(b.matrixWorld);return this.intersectsSphere(a)}}(),
intersectsSphere:function(a){for(var b=this.planes,c=a.center,a=-a.radius,d=0;d<6;d++)if(b[d].distanceToPoint(c)<a)return false;return true},intersectsBox:function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(c){for(var d=this.planes,e=0;e<6;e++){var g=d[e];a.x=g.normal.x>0?c.min.x:c.max.x;b.x=g.normal.x>0?c.max.x:c.min.x;a.y=g.normal.y>0?c.min.y:c.max.y;b.y=g.normal.y>0?c.max.y:c.min.y;a.z=g.normal.z>0?c.min.z:c.max.z;b.z=g.normal.z>0?c.max.z:c.min.z;var f=g.distanceToPoint(a),g=
g.distanceToPoint(b);if(f<0&&g<0)return false}return true}}(),containsPoint:function(a){for(var b=this.planes,c=0;c<6;c++)if(b[c].distanceToPoint(a)<0)return false;return true}};THREE.Plane=function(a,b){this.normal=a!==void 0?a:new THREE.Vector3(1,0,0);this.constant=b!==void 0?b:0};
THREE.Plane.prototype={constructor:THREE.Plane,set:function(a,b){this.normal.copy(a);this.constant=b;return this},setComponents:function(a,b,c,d){this.normal.set(a,b,c);this.constant=d;return this},setFromNormalAndCoplanarPoint:function(a,b){this.normal.copy(a);this.constant=-b.dot(this.normal);return this},setFromCoplanarPoints:function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(c,d,e){this.setFromNormalAndCoplanarPoint(a.subVectors(e,d).cross(b.subVectors(c,d)).normalize(),c);
return this}}(),clone:function(){return(new this.constructor).copy(this)},copy:function(a){this.normal.copy(a.normal);this.constant=a.constant;return this},normalize:function(){var a=1/this.normal.length();this.normal.multiplyScalar(a);this.constant=this.constant*a;return this},negate:function(){this.constant=this.constant*-1;this.normal.negate();return this},distanceToPoint:function(a){return this.normal.dot(a)+this.constant},distanceToSphere:function(a){return this.distanceToPoint(a.center)-a.radius},
projectPoint:function(a,b){return this.orthoPoint(a,b).sub(a).negate()},orthoPoint:function(a,b){var c=this.distanceToPoint(a);return(b||new THREE.Vector3).copy(this.normal).multiplyScalar(c)},isIntersectionLine:function(a){var b=this.distanceToPoint(a.start),a=this.distanceToPoint(a.end);return b<0&&a>0||a<0&&b>0},intersectLine:function(){var a=new THREE.Vector3;return function(b,c){var d=c||new THREE.Vector3,e=b.delta(a),g=this.normal.dot(e);if(g===0){if(this.distanceToPoint(b.start)===0)return d.copy(b.start)}else{g=
-(b.start.dot(this.normal)+this.constant)/g;return g<0||g>1?void 0:d.copy(e).multiplyScalar(g).add(b.start)}}}(),coplanarPoint:function(a){return(a||new THREE.Vector3).copy(this.normal).multiplyScalar(-this.constant)},applyMatrix4:function(){var a=new THREE.Vector3,b=new THREE.Vector3,c=new THREE.Matrix3;return function(d,e){var g=e||c.getNormalMatrix(d),g=a.copy(this.normal).applyMatrix3(g),f=this.coplanarPoint(b);f.applyMatrix4(d);this.setFromNormalAndCoplanarPoint(g,f);return this}}(),translate:function(a){this.constant=
this.constant-a.dot(this.normal);return this},equals:function(a){return a.normal.equals(this.normal)&&a.constant===this.constant}};
THREE.Math={generateUUID:function(){var a=["0","1","2","3","4","5","6","7","8","9","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z"],b=Array(36),c=0,d;return function(){for(var e=0;e<36;e++)if(e===8||e===13||e===18||e===23)b[e]="-";else if(e===14)b[e]="4";else{c<=2&&(c=33554432+Math.random()*16777216|0);d=c&15;c=c>>4;b[e]=a[e===19?d&3|8:d]}return b.join("")}}(),
clamp:function(a,b,c){return Math.max(b,Math.min(c,a))},euclideanModulo:function(a,b){return(a%b+b)%b},mapLinear:function(a,b,c,d,e){return d+(a-b)*(e-d)/(c-b)},smoothstep:function(a,b,c){if(a<=b)return 0;if(a>=c)return 1;a=(a-b)/(c-b);return a*a*(3-2*a)},smootherstep:function(a,b,c){if(a<=b)return 0;if(a>=c)return 1;a=(a-b)/(c-b);return a*a*a*(a*(a*6-15)+10)},random16:function(){return(65280*Math.random()+255*Math.random())/65535},randInt:function(a,b){return a+Math.floor(Math.random()*(b-a+1))},
randFloat:function(a,b){return a+Math.random()*(b-a)},randFloatSpread:function(a){return a*(0.5-Math.random())},degToRad:function(){var a=Math.PI/180;return function(b){return b*a}}(),radToDeg:function(){var a=180/Math.PI;return function(b){return b*a}}(),isPowerOfTwo:function(a){return(a&a-1)===0&&a!==0},nearestPowerOfTwo:function(a){return Math.pow(2,Math.round(Math.log(a)/Math.LN2))},nextPowerOfTwo:function(a){a--;a=a|a>>1;a=a|a>>2;a=a|a>>4;a=a|a>>8;a=a|a>>16;a++;return a}};
THREE.Spline=function(a){function b(a,b,c,d,e,g,f){a=(c-a)*0.5;d=(d-b)*0.5;return(2*(b-c)+a+d)*f+(-3*(b-c)-2*a-d)*g+a*e+b}this.points=a;var c=[],d={x:0,y:0,z:0},e,g,f,h,j,i,k,m,l;this.initFromArray=function(a){this.points=[];for(var b=0;b<a.length;b++)this.points[b]={x:a[b][0],y:a[b][1],z:a[b][2]}};this.getPoint=function(a){e=(this.points.length-1)*a;g=Math.floor(e);f=e-g;c[0]=g===0?g:g-1;c[1]=g;c[2]=g>this.points.length-2?this.points.length-1:g+1;c[3]=g>this.points.length-3?this.points.length-1:
g+2;i=this.points[c[0]];k=this.points[c[1]];m=this.points[c[2]];l=this.points[c[3]];h=f*f;j=f*h;d.x=b(i.x,k.x,m.x,l.x,f,h,j);d.y=b(i.y,k.y,m.y,l.y,f,h,j);d.z=b(i.z,k.z,m.z,l.z,f,h,j);return d};this.getControlPointsArray=function(){var a,b,c=this.points.length,d=[];for(a=0;a<c;a++){b=this.points[a];d[a]=[b.x,b.y,b.z]}return d};this.getLength=function(a){var b,c,d,e=b=b=0,g=new THREE.Vector3,f=new THREE.Vector3,h=[],j=0;h[0]=0;a||(a=100);c=this.points.length*a;g.copy(this.points[0]);for(a=1;a<c;a++){b=
a/c;d=this.getPoint(b);f.copy(d);j=j+f.distanceTo(g);g.copy(d);b=(this.points.length-1)*b;b=Math.floor(b);if(b!==e){h[b]=j;e=b}}h[h.length]=j;return{chunks:h,total:j}};this.reparametrizeByArcLength=function(a){var b,c,d,e,g,f,h=[],j=new THREE.Vector3,i=this.getLength();h.push(j.copy(this.points[0]).clone());for(b=1;b<this.points.length;b++){c=i.chunks[b]-i.chunks[b-1];f=Math.ceil(a*c/i.total);e=(b-1)/(this.points.length-1);g=b/(this.points.length-1);for(c=1;c<f-1;c++){d=e+c*(1/f)*(g-e);d=this.getPoint(d);
h.push(j.copy(d).clone())}h.push(j.copy(this.points[b]).clone())}this.points=h}};THREE.Triangle=function(a,b,c){this.a=a!==void 0?a:new THREE.Vector3;this.b=b!==void 0?b:new THREE.Vector3;this.c=c!==void 0?c:new THREE.Vector3};THREE.Triangle.normal=function(){var a=new THREE.Vector3;return function(b,c,d,e){e=e||new THREE.Vector3;e.subVectors(d,c);a.subVectors(b,c);e.cross(a);b=e.lengthSq();return b>0?e.multiplyScalar(1/Math.sqrt(b)):e.set(0,0,0)}}();
THREE.Triangle.barycoordFromPoint=function(){var a=new THREE.Vector3,b=new THREE.Vector3,c=new THREE.Vector3;return function(d,e,g,f,h){a.subVectors(f,e);b.subVectors(g,e);c.subVectors(d,e);var d=a.dot(a),e=a.dot(b),g=a.dot(c),j=b.dot(b),f=b.dot(c),i=d*j-e*e,h=h||new THREE.Vector3;if(i===0)return h.set(-2,-1,-1);i=1/i;j=(j*g-e*f)*i;d=(d*f-e*g)*i;return h.set(1-j-d,d,j)}}();
THREE.Triangle.containsPoint=function(){var a=new THREE.Vector3;return function(b,c,d,e){b=THREE.Triangle.barycoordFromPoint(b,c,d,e,a);return b.x>=0&&b.y>=0&&b.x+b.y<=1}}();
THREE.Triangle.prototype={constructor:THREE.Triangle,set:function(a,b,c){this.a.copy(a);this.b.copy(b);this.c.copy(c);return this},setFromPointsAndIndices:function(a,b,c,d){this.a.copy(a[b]);this.b.copy(a[c]);this.c.copy(a[d]);return this},clone:function(){return(new this.constructor).copy(this)},copy:function(a){this.a.copy(a.a);this.b.copy(a.b);this.c.copy(a.c);return this},area:function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(){a.subVectors(this.c,this.b);b.subVectors(this.a,
this.b);return a.cross(b).length()*0.5}}(),midpoint:function(a){return(a||new THREE.Vector3).addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)},normal:function(a){return THREE.Triangle.normal(this.a,this.b,this.c,a)},plane:function(a){return(a||new THREE.Plane).setFromCoplanarPoints(this.a,this.b,this.c)},barycoordFromPoint:function(a,b){return THREE.Triangle.barycoordFromPoint(a,this.a,this.b,this.c,b)},containsPoint:function(a){return THREE.Triangle.containsPoint(a,this.a,this.b,this.c)},
equals:function(a){return a.a.equals(this.a)&&a.b.equals(this.b)&&a.c.equals(this.c)}};THREE.Channels=function(){this.mask=1};THREE.Channels.prototype={constructor:THREE.Channels,set:function(a){this.mask=1<<a},enable:function(a){this.mask=this.mask|1<<a},toggle:function(a){this.mask=this.mask^1<<a},disable:function(a){this.mask=this.mask&~(1<<a)}};THREE.Clock=function(a){this.autoStart=a!==void 0?a:true;this.elapsedTime=this.oldTime=this.startTime=0;this.running=false};
THREE.Clock.prototype={constructor:THREE.Clock,start:function(){this.oldTime=this.startTime=self.performance.now();this.running=true},stop:function(){this.getElapsedTime();this.running=false},getElapsedTime:function(){this.getDelta();return this.elapsedTime},getDelta:function(){var a=0;this.autoStart&&!this.running&&this.start();if(this.running){var b=self.performance.now(),a=0.001*(b-this.oldTime);this.oldTime=b;this.elapsedTime=this.elapsedTime+a}return a}};THREE.EventDispatcher=function(){};
THREE.EventDispatcher.prototype={constructor:THREE.EventDispatcher,apply:function(a){a.addEventListener=THREE.EventDispatcher.prototype.addEventListener;a.hasEventListener=THREE.EventDispatcher.prototype.hasEventListener;a.removeEventListener=THREE.EventDispatcher.prototype.removeEventListener;a.dispatchEvent=THREE.EventDispatcher.prototype.dispatchEvent},addEventListener:function(a,b){if(this._listeners===void 0)this._listeners={};var c=this._listeners;c[a]===void 0&&(c[a]=[]);c[a].indexOf(b)===
-1&&c[a].push(b)},hasEventListener:function(a,b){if(this._listeners===void 0)return false;var c=this._listeners;return c[a]!==void 0&&c[a].indexOf(b)!==-1?true:false},removeEventListener:function(a,b){if(this._listeners!==void 0){var c=this._listeners[a];if(c!==void 0){var d=c.indexOf(b);d!==-1&&c.splice(d,1)}}},dispatchEvent:function(a){if(this._listeners!==void 0){var b=this._listeners[a.type];if(b!==void 0){a.target=this;for(var c=[],d=b.length,e=0;e<d;e++)c[e]=b[e];for(e=0;e<d;e++)c[e].call(this,
a)}}}};
(function(a){function b(a,b){return a.distance-b.distance}function c(a,b,g,f){if(a.visible!==false){a.raycast(b,g);if(f===true)for(var a=a.children,f=0,h=a.length;f<h;f++)c(a[f],b,g,true)}}a.Raycaster=function(b,c,g,f){this.ray=new a.Ray(b,c);this.near=g||0;this.far=f||Infinity;this.params={Mesh:{},Line:{},LOD:{},Points:{threshold:1},Sprite:{}};Object.defineProperties(this.params,{PointCloud:{get:function(){console.warn("THREE.Raycaster: params.PointCloud has been renamed to params.Points.");return this.Points}}})};
a.Raycaster.prototype={constructor:a.Raycaster,linePrecision:1,set:function(a,b){this.ray.set(a,b)},setFromCamera:function(b,c){if(c instanceof a.PerspectiveCamera){this.ray.origin.setFromMatrixPosition(c.matrixWorld);this.ray.direction.set(b.x,b.y,0.5).unproject(c).sub(this.ray.origin).normalize()}else if(c instanceof a.OrthographicCamera){this.ray.origin.set(b.x,b.y,-1).unproject(c);this.ray.direction.set(0,0,-1).transformDirection(c.matrixWorld)}else console.error("THREE.Raycaster: Unsupported camera type.")},
intersectObject:function(a,e){var g=[];c(a,this,g,e);g.sort(b);return g},intersectObjects:function(a,e){var g=[];if(Array.isArray(a)===false){console.warn("THREE.Raycaster.intersectObjects: objects is not an Array.");return g}for(var f=0,h=a.length;f<h;f++)c(a[f],this,g,e);g.sort(b);return g}}})(THREE);
THREE.Object3D=function(){Object.defineProperty(this,"id",{value:THREE.Object3DIdCount++});this.uuid=THREE.Math.generateUUID();this.name="";this.type="Object3D";this.parent=null;this.channels=new THREE.Channels;this.children=[];this.up=THREE.Object3D.DefaultUp.clone();var a=new THREE.Vector3,b=new THREE.Euler,c=new THREE.Quaternion,d=new THREE.Vector3(1,1,1);b.onChange(function(){c.setFromEuler(b,false)});c.onChange(function(){b.setFromQuaternion(c,void 0,false)});Object.defineProperties(this,{position:{enumerable:true,
value:a},rotation:{enumerable:true,value:b},quaternion:{enumerable:true,value:c},scale:{enumerable:true,value:d},modelViewMatrix:{value:new THREE.Matrix4},normalMatrix:{value:new THREE.Matrix3}});this.rotationAutoUpdate=true;this.matrix=new THREE.Matrix4;this.matrixWorld=new THREE.Matrix4;this.matrixAutoUpdate=THREE.Object3D.DefaultMatrixAutoUpdate;this.matrixWorldNeedsUpdate=false;this.visible=true;this.receiveShadow=this.castShadow=false;this.frustumCulled=true;this.renderOrder=0;this.userData=
{}};THREE.Object3D.DefaultUp=new THREE.Vector3(0,1,0);THREE.Object3D.DefaultMatrixAutoUpdate=!0;
THREE.Object3D.prototype={constructor:THREE.Object3D,get eulerOrder(){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order.");return this.rotation.order},set eulerOrder(a){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order.");this.rotation.order=a},get useQuaternion(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set useQuaternion(a){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},
set renderDepth(a){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")},applyMatrix:function(a){this.matrix.multiplyMatrices(a,this.matrix);this.matrix.decompose(this.position,this.quaternion,this.scale)},setRotationFromAxisAngle:function(a,b){this.quaternion.setFromAxisAngle(a,b)},setRotationFromEuler:function(a){this.quaternion.setFromEuler(a,true)},setRotationFromMatrix:function(a){this.quaternion.setFromRotationMatrix(a)},setRotationFromQuaternion:function(a){this.quaternion.copy(a)},
rotateOnAxis:function(){var a=new THREE.Quaternion;return function(b,c){a.setFromAxisAngle(b,c);this.quaternion.multiply(a);return this}}(),rotateX:function(){var a=new THREE.Vector3(1,0,0);return function(b){return this.rotateOnAxis(a,b)}}(),rotateY:function(){var a=new THREE.Vector3(0,1,0);return function(b){return this.rotateOnAxis(a,b)}}(),rotateZ:function(){var a=new THREE.Vector3(0,0,1);return function(b){return this.rotateOnAxis(a,b)}}(),translateOnAxis:function(){var a=new THREE.Vector3;return function(b,
c){a.copy(b).applyQuaternion(this.quaternion);this.position.add(a.multiplyScalar(c));return this}}(),translate:function(a,b){console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.");return this.translateOnAxis(b,a)},translateX:function(){var a=new THREE.Vector3(1,0,0);return function(b){return this.translateOnAxis(a,b)}}(),translateY:function(){var a=new THREE.Vector3(0,1,0);return function(b){return this.translateOnAxis(a,b)}}(),translateZ:function(){var a=
new THREE.Vector3(0,0,1);return function(b){return this.translateOnAxis(a,b)}}(),localToWorld:function(a){return a.applyMatrix4(this.matrixWorld)},worldToLocal:function(){var a=new THREE.Matrix4;return function(b){return b.applyMatrix4(a.getInverse(this.matrixWorld))}}(),lookAt:function(){var a=new THREE.Matrix4;return function(b){a.lookAt(b,this.position,this.up);this.quaternion.setFromRotationMatrix(a)}}(),add:function(a){if(arguments.length>1){for(var b=0;b<arguments.length;b++)this.add(arguments[b]);
return this}if(a===this){console.error("THREE.Object3D.add: object can't be added as a child of itself.",a);return this}if(a instanceof THREE.Object3D){a.parent!==null&&a.parent.remove(a);a.parent=this;a.dispatchEvent({type:"added"});this.children.push(a)}else console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",a);return this},remove:function(a){if(arguments.length>1)for(var b=0;b<arguments.length;b++)this.remove(arguments[b]);b=this.children.indexOf(a);if(b!==-1){a.parent=
null;a.dispatchEvent({type:"removed"});this.children.splice(b,1)}},getChildByName:function(a){console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().");return this.getObjectByName(a)},getObjectById:function(a){return this.getObjectByProperty("id",a)},getObjectByName:function(a){return this.getObjectByProperty("name",a)},getObjectByProperty:function(a,b){if(this[a]===b)return this;for(var c=0,d=this.children.length;c<d;c++){var e=this.children[c].getObjectByProperty(a,
b);if(e!==void 0)return e}},getWorldPosition:function(a){a=a||new THREE.Vector3;this.updateMatrixWorld(true);return a.setFromMatrixPosition(this.matrixWorld)},getWorldQuaternion:function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(c){c=c||new THREE.Quaternion;this.updateMatrixWorld(true);this.matrixWorld.decompose(a,c,b);return c}}(),getWorldRotation:function(){var a=new THREE.Quaternion;return function(b){b=b||new THREE.Euler;this.getWorldQuaternion(a);return b.setFromQuaternion(a,
this.rotation.order,false)}}(),getWorldScale:function(){var a=new THREE.Vector3,b=new THREE.Quaternion;return function(c){c=c||new THREE.Vector3;this.updateMatrixWorld(true);this.matrixWorld.decompose(a,b,c);return c}}(),getWorldDirection:function(){var a=new THREE.Quaternion;return function(b){b=b||new THREE.Vector3;this.getWorldQuaternion(a);return b.set(0,0,1).applyQuaternion(a)}}(),raycast:function(){},traverse:function(a){a(this);for(var b=this.children,c=0,d=b.length;c<d;c++)b[c].traverse(a)},
traverseVisible:function(a){if(this.visible!==false){a(this);for(var b=this.children,c=0,d=b.length;c<d;c++)b[c].traverseVisible(a)}},traverseAncestors:function(a){var b=this.parent;if(b!==null){a(b);b.traverseAncestors(a)}},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale);this.matrixWorldNeedsUpdate=true},updateMatrixWorld:function(a){this.matrixAutoUpdate===true&&this.updateMatrix();if(this.matrixWorldNeedsUpdate===true||a===true){this.parent===null?this.matrixWorld.copy(this.matrix):
this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix);this.matrixWorldNeedsUpdate=false;a=true}for(var b=0,c=this.children.length;b<c;b++)this.children[b].updateMatrixWorld(a)},toJSON:function(a){function b(a){var b=[],c;for(c in a){var d=a[c];delete d.metadata;b.push(d)}return b}var c=a===void 0,d={};if(c){a={geometries:{},materials:{},textures:{},images:{}};d.metadata={version:4.4,type:"Object",generator:"Object3D.toJSON"}}var e={};e.uuid=this.uuid;e.type=this.type;if(this.name!==
"")e.name=this.name;if(JSON.stringify(this.userData)!=="{}")e.userData=this.userData;if(this.castShadow===true)e.castShadow=true;if(this.receiveShadow===true)e.receiveShadow=true;if(this.visible===false)e.visible=false;e.matrix=this.matrix.toArray();if(this.geometry!==void 0){a.geometries[this.geometry.uuid]===void 0&&(a.geometries[this.geometry.uuid]=this.geometry.toJSON(a));e.geometry=this.geometry.uuid}if(this.material!==void 0){a.materials[this.material.uuid]===void 0&&(a.materials[this.material.uuid]=
this.material.toJSON(a));e.material=this.material.uuid}if(this.children.length>0){e.children=[];for(var g=0;g<this.children.length;g++)e.children.push(this.children[g].toJSON(a).object)}if(c){var c=b(a.geometries),g=b(a.materials),f=b(a.textures),a=b(a.images);if(c.length>0)d.geometries=c;if(g.length>0)d.materials=g;if(f.length>0)d.textures=f;if(a.length>0)d.images=a}d.object=e;return d},clone:function(a){return(new this.constructor).copy(this,a)},copy:function(a,b){b===void 0&&(b=true);this.name=
a.name;this.up.copy(a.up);this.position.copy(a.position);this.quaternion.copy(a.quaternion);this.scale.copy(a.scale);this.rotationAutoUpdate=a.rotationAutoUpdate;this.matrix.copy(a.matrix);this.matrixWorld.copy(a.matrixWorld);this.matrixAutoUpdate=a.matrixAutoUpdate;this.matrixWorldNeedsUpdate=a.matrixWorldNeedsUpdate;this.visible=a.visible;this.castShadow=a.castShadow;this.receiveShadow=a.receiveShadow;this.frustumCulled=a.frustumCulled;this.renderOrder=a.renderOrder;this.userData=JSON.parse(JSON.stringify(a.userData));
if(b===true)for(var c=0;c<a.children.length;c++)this.add(a.children[c].clone());return this}};THREE.EventDispatcher.prototype.apply(THREE.Object3D.prototype);THREE.Object3DIdCount=0;THREE.Face3=function(a,b,c,d,e,g){this.a=a;this.b=b;this.c=c;this.normal=d instanceof THREE.Vector3?d:new THREE.Vector3;this.vertexNormals=Array.isArray(d)?d:[];this.color=e instanceof THREE.Color?e:new THREE.Color;this.vertexColors=Array.isArray(e)?e:[];this.materialIndex=g!==void 0?g:0};
THREE.Face3.prototype={constructor:THREE.Face3,clone:function(){return(new this.constructor).copy(this)},copy:function(a){this.a=a.a;this.b=a.b;this.c=a.c;this.normal.copy(a.normal);this.color.copy(a.color);this.materialIndex=a.materialIndex;for(var b=0,c=a.vertexNormals.length;b<c;b++)this.vertexNormals[b]=a.vertexNormals[b].clone();b=0;for(c=a.vertexColors.length;b<c;b++)this.vertexColors[b]=a.vertexColors[b].clone();return this}};
THREE.Face4=function(a,b,c,d,e,g,f){console.warn("THREE.Face4 has been removed. A THREE.Face3 will be created instead.");return new THREE.Face3(a,b,c,e,g,f)};THREE.BufferAttribute=function(a,b){this.uuid=THREE.Math.generateUUID();this.array=a;this.itemSize=b;this.dynamic=false;this.updateRange={offset:0,count:-1};this.version=0};
THREE.BufferAttribute.prototype={constructor:THREE.BufferAttribute,get length(){console.warn("THREE.BufferAttribute: .length has been deprecated. Please use .count.");return this.array.length},get count(){return this.array.length/this.itemSize},set needsUpdate(a){a===true&&this.version++},setDynamic:function(a){this.dynamic=a;return this},copy:function(a){this.array=new a.array.constructor(a.array);this.itemSize=a.itemSize;this.dynamic=a.dynamic;return this},copyAt:function(a,b,c){for(var a=a*this.itemSize,
c=c*b.itemSize,d=0,e=this.itemSize;d<e;d++)this.array[a+d]=b.array[c+d];return this},copyArray:function(a){this.array.set(a);return this},copyColorsArray:function(a){for(var b=this.array,c=0,d=0,e=a.length;d<e;d++){var g=a[d];if(g===void 0){console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",d);g=new THREE.Color}b[c++]=g.r;b[c++]=g.g;b[c++]=g.b}return this},copyIndicesArray:function(a){for(var b=this.array,c=0,d=0,e=a.length;d<e;d++){var g=a[d];b[c++]=g.a;b[c++]=g.b;b[c++]=
g.c}return this},copyVector2sArray:function(a){for(var b=this.array,c=0,d=0,e=a.length;d<e;d++){var g=a[d];if(g===void 0){console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",d);g=new THREE.Vector2}b[c++]=g.x;b[c++]=g.y}return this},copyVector3sArray:function(a){for(var b=this.array,c=0,d=0,e=a.length;d<e;d++){var g=a[d];if(g===void 0){console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",d);g=new THREE.Vector3}b[c++]=g.x;b[c++]=g.y;b[c++]=g.z}return this},
copyVector4sArray:function(a){for(var b=this.array,c=0,d=0,e=a.length;d<e;d++){var g=a[d];if(g===void 0){console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",d);g=new THREE.Vector4}b[c++]=g.x;b[c++]=g.y;b[c++]=g.z;b[c++]=g.w}return this},set:function(a,b){b===void 0&&(b=0);this.array.set(a,b);return this},getX:function(a){return this.array[a*this.itemSize]},setX:function(a,b){this.array[a*this.itemSize]=b;return this},getY:function(a){return this.array[a*this.itemSize+1]},
setY:function(a,b){this.array[a*this.itemSize+1]=b;return this},getZ:function(a){return this.array[a*this.itemSize+2]},setZ:function(a,b){this.array[a*this.itemSize+2]=b;return this},getW:function(a){return this.array[a*this.itemSize+3]},setW:function(a,b){this.array[a*this.itemSize+3]=b;return this},setXY:function(a,b,c){a=a*this.itemSize;this.array[a+0]=b;this.array[a+1]=c;return this},setXYZ:function(a,b,c,d){a=a*this.itemSize;this.array[a+0]=b;this.array[a+1]=c;this.array[a+2]=d;return this},
setXYZW:function(a,b,c,d,e){a=a*this.itemSize;this.array[a+0]=b;this.array[a+1]=c;this.array[a+2]=d;this.array[a+3]=e;return this},clone:function(){return(new this.constructor).copy(this)}};THREE.Int8Attribute=function(a,b){return new THREE.BufferAttribute(new Int8Array(a),b)};THREE.Uint8Attribute=function(a,b){return new THREE.BufferAttribute(new Uint8Array(a),b)};THREE.Uint8ClampedAttribute=function(a,b){return new THREE.BufferAttribute(new Uint8ClampedArray(a),b)};
THREE.Int16Attribute=function(a,b){return new THREE.BufferAttribute(new Int16Array(a),b)};THREE.Uint16Attribute=function(a,b){return new THREE.BufferAttribute(new Uint16Array(a),b)};THREE.Int32Attribute=function(a,b){return new THREE.BufferAttribute(new Int32Array(a),b)};THREE.Uint32Attribute=function(a,b){return new THREE.BufferAttribute(new Uint32Array(a),b)};THREE.Float32Attribute=function(a,b){return new THREE.BufferAttribute(new Float32Array(a),b)};
THREE.Float64Attribute=function(a,b){return new THREE.BufferAttribute(new Float64Array(a),b)};THREE.DynamicBufferAttribute=function(a,b){console.warn("THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead.");return(new THREE.BufferAttribute(a,b)).setDynamic(true)};THREE.InstancedBufferAttribute=function(a,b,c){THREE.BufferAttribute.call(this,a,b);this.meshPerAttribute=c||1};THREE.InstancedBufferAttribute.prototype=Object.create(THREE.BufferAttribute.prototype);
THREE.InstancedBufferAttribute.prototype.constructor=THREE.InstancedBufferAttribute;THREE.InstancedBufferAttribute.prototype.copy=function(a){THREE.BufferAttribute.prototype.copy.call(this,a);this.meshPerAttribute=a.meshPerAttribute;return this};THREE.InterleavedBuffer=function(a,b){this.uuid=THREE.Math.generateUUID();this.array=a;this.stride=b;this.dynamic=false;this.updateRange={offset:0,count:-1};this.version=0};
THREE.InterleavedBuffer.prototype={constructor:THREE.InterleavedBuffer,get length(){return this.array.length},get count(){return this.array.length/this.stride},set needsUpdate(a){a===true&&this.version++},setDynamic:function(a){this.dynamic=a;return this},copy:function(a){this.array=new a.array.constructor(a.array);this.stride=a.stride;this.dynamic=a.dynamic},copyAt:function(a,b,c){for(var a=a*this.stride,c=c*b.stride,d=0,e=this.stride;d<e;d++)this.array[a+d]=b.array[c+d];return this},set:function(a,
b){b===void 0&&(b=0);this.array.set(a,b);return this},clone:function(){return(new this.constructor).copy(this)}};THREE.InstancedInterleavedBuffer=function(a,b,c){THREE.InterleavedBuffer.call(this,a,b);this.meshPerAttribute=c||1};THREE.InstancedInterleavedBuffer.prototype=Object.create(THREE.InterleavedBuffer.prototype);THREE.InstancedInterleavedBuffer.prototype.constructor=THREE.InstancedInterleavedBuffer;
THREE.InstancedInterleavedBuffer.prototype.copy=function(a){THREE.InterleavedBuffer.prototype.copy.call(this,a);this.meshPerAttribute=a.meshPerAttribute;return this};THREE.InterleavedBufferAttribute=function(a,b,c){this.uuid=THREE.Math.generateUUID();this.data=a;this.itemSize=b;this.offset=c};
THREE.InterleavedBufferAttribute.prototype={constructor:THREE.InterleavedBufferAttribute,get length(){console.warn("THREE.BufferAttribute: .length has been deprecated. Please use .count.");return this.array.length},get count(){return this.data.array.length/this.data.stride},setX:function(a,b){this.data.array[a*this.data.stride+this.offset]=b;return this},setY:function(a,b){this.data.array[a*this.data.stride+this.offset+1]=b;return this},setZ:function(a,b){this.data.array[a*this.data.stride+this.offset+
2]=b;return this},setW:function(a,b){this.data.array[a*this.data.stride+this.offset+3]=b;return this},getX:function(a){return this.data.array[a*this.data.stride+this.offset]},getY:function(a){return this.data.array[a*this.data.stride+this.offset+1]},getZ:function(a){return this.data.array[a*this.data.stride+this.offset+2]},getW:function(a){return this.data.array[a*this.data.stride+this.offset+3]},setXY:function(a,b,c){a=a*this.data.stride+this.offset;this.data.array[a+0]=b;this.data.array[a+1]=c;
return this},setXYZ:function(a,b,c,d){a=a*this.data.stride+this.offset;this.data.array[a+0]=b;this.data.array[a+1]=c;this.data.array[a+2]=d;return this},setXYZW:function(a,b,c,d,e){a=a*this.data.stride+this.offset;this.data.array[a+0]=b;this.data.array[a+1]=c;this.data.array[a+2]=d;this.data.array[a+3]=e;return this}};
THREE.Geometry=function(){Object.defineProperty(this,"id",{value:THREE.GeometryIdCount++});this.uuid=THREE.Math.generateUUID();this.name="";this.type="Geometry";this.vertices=[];this.colors=[];this.faces=[];this.faceVertexUvs=[[]];this.morphTargets=[];this.morphNormals=[];this.skinWeights=[];this.skinIndices=[];this.lineDistances=[];this.boundingSphere=this.boundingBox=null;this.groupsNeedUpdate=this.lineDistancesNeedUpdate=this.colorsNeedUpdate=this.normalsNeedUpdate=this.uvsNeedUpdate=this.elementsNeedUpdate=
this.verticesNeedUpdate=false};
THREE.Geometry.prototype={constructor:THREE.Geometry,applyMatrix:function(a){for(var b=(new THREE.Matrix3).getNormalMatrix(a),c=0,d=this.vertices.length;c<d;c++)this.vertices[c].applyMatrix4(a);c=0;for(d=this.faces.length;c<d;c++){a=this.faces[c];a.normal.applyMatrix3(b).normalize();for(var e=0,g=a.vertexNormals.length;e<g;e++)a.vertexNormals[e].applyMatrix3(b).normalize()}this.boundingBox!==null&&this.computeBoundingBox();this.boundingSphere!==null&&this.computeBoundingSphere();this.normalsNeedUpdate=
this.verticesNeedUpdate=true},rotateX:function(){var a;return function(b){a===void 0&&(a=new THREE.Matrix4);a.makeRotationX(b);this.applyMatrix(a);return this}}(),rotateY:function(){var a;return function(b){a===void 0&&(a=new THREE.Matrix4);a.makeRotationY(b);this.applyMatrix(a);return this}}(),rotateZ:function(){var a;return function(b){a===void 0&&(a=new THREE.Matrix4);a.makeRotationZ(b);this.applyMatrix(a);return this}}(),translate:function(){var a;return function(b,c,d){a===void 0&&(a=new THREE.Matrix4);
a.makeTranslation(b,c,d);this.applyMatrix(a);return this}}(),scale:function(){var a;return function(b,c,d){a===void 0&&(a=new THREE.Matrix4);a.makeScale(b,c,d);this.applyMatrix(a);return this}}(),lookAt:function(){var a;return function(b){a===void 0&&(a=new THREE.Object3D);a.lookAt(b);a.updateMatrix();this.applyMatrix(a.matrix)}}(),fromBufferGeometry:function(a){function b(a,b,d){var e=f!==void 0?[k[a].clone(),k[b].clone(),k[d].clone()]:[],g=h!==void 0?[c.colors[a].clone(),c.colors[b].clone(),c.colors[d].clone()]:
[],e=new THREE.Face3(a,b,d,e,g);c.faces.push(e);j!==void 0&&c.faceVertexUvs[0].push([m[a].clone(),m[b].clone(),m[d].clone()]);i!==void 0&&c.faceVertexUvs[1].push([l[a].clone(),l[b].clone(),l[d].clone()])}var c=this,d=a.index!==null?a.index.array:void 0,e=a.attributes,g=e.position.array,f=e.normal!==void 0?e.normal.array:void 0,h=e.color!==void 0?e.color.array:void 0,j=e.uv!==void 0?e.uv.array:void 0,i=e.uv2!==void 0?e.uv2.array:void 0;i!==void 0&&(this.faceVertexUvs[1]=[]);for(var k=[],m=[],l=[],
n=e=0;e<g.length;e=e+3,n=n+2){c.vertices.push(new THREE.Vector3(g[e],g[e+1],g[e+2]));f!==void 0&&k.push(new THREE.Vector3(f[e],f[e+1],f[e+2]));h!==void 0&&c.colors.push(new THREE.Color(h[e],h[e+1],h[e+2]));j!==void 0&&m.push(new THREE.Vector2(j[n],j[n+1]));i!==void 0&&l.push(new THREE.Vector2(i[n],i[n+1]))}if(d!==void 0){g=a.groups;if(g.length>0)for(e=0;e<g.length;e++)for(var n=g[e],p=n.start,r=n.count,n=p,p=p+r;n<p;n=n+3)b(d[n],d[n+1],d[n+2]);else for(e=0;e<d.length;e=e+3)b(d[e],d[e+1],d[e+2])}else for(e=
0;e<g.length/3;e=e+3)b(e,e+1,e+2);this.computeFaceNormals();if(a.boundingBox!==null)this.boundingBox=a.boundingBox.clone();if(a.boundingSphere!==null)this.boundingSphere=a.boundingSphere.clone();return this},center:function(){this.computeBoundingBox();var a=this.boundingBox.center().negate();this.translate(a.x,a.y,a.z);return a},normalize:function(){this.computeBoundingSphere();var a=this.boundingSphere.center,b=this.boundingSphere.radius,b=b===0?1:1/b,c=new THREE.Matrix4;c.set(b,0,0,-b*a.x,0,b,0,
-b*a.y,0,0,b,-b*a.z,0,0,0,1);this.applyMatrix(c);return this},computeFaceNormals:function(){for(var a=new THREE.Vector3,b=new THREE.Vector3,c=0,d=this.faces.length;c<d;c++){var e=this.faces[c],g=this.vertices[e.a],f=this.vertices[e.b];a.subVectors(this.vertices[e.c],f);b.subVectors(g,f);a.cross(b);a.normalize();e.normal.copy(a)}},computeVertexNormals:function(a){var b,c,d;d=Array(this.vertices.length);b=0;for(c=this.vertices.length;b<c;b++)d[b]=new THREE.Vector3;if(a){var e,g,f,h=new THREE.Vector3,
j=new THREE.Vector3,a=0;for(b=this.faces.length;a<b;a++){c=this.faces[a];e=this.vertices[c.a];g=this.vertices[c.b];f=this.vertices[c.c];h.subVectors(f,g);j.subVectors(e,g);h.cross(j);d[c.a].add(h);d[c.b].add(h);d[c.c].add(h)}}else{a=0;for(b=this.faces.length;a<b;a++){c=this.faces[a];d[c.a].add(c.normal);d[c.b].add(c.normal);d[c.c].add(c.normal)}}b=0;for(c=this.vertices.length;b<c;b++)d[b].normalize();a=0;for(b=this.faces.length;a<b;a++){c=this.faces[a];e=c.vertexNormals;if(e.length===3){e[0].copy(d[c.a]);
e[1].copy(d[c.b]);e[2].copy(d[c.c])}else{e[0]=d[c.a].clone();e[1]=d[c.b].clone();e[2]=d[c.c].clone()}}},computeMorphNormals:function(){var a,b,c,d,e;c=0;for(d=this.faces.length;c<d;c++){e=this.faces[c];e.__originalFaceNormal?e.__originalFaceNormal.copy(e.normal):e.__originalFaceNormal=e.normal.clone();if(!e.__originalVertexNormals)e.__originalVertexNormals=[];a=0;for(b=e.vertexNormals.length;a<b;a++)e.__originalVertexNormals[a]?e.__originalVertexNormals[a].copy(e.vertexNormals[a]):e.__originalVertexNormals[a]=
e.vertexNormals[a].clone()}var g=new THREE.Geometry;g.faces=this.faces;a=0;for(b=this.morphTargets.length;a<b;a++){if(!this.morphNormals[a]){this.morphNormals[a]={};this.morphNormals[a].faceNormals=[];this.morphNormals[a].vertexNormals=[];e=this.morphNormals[a].faceNormals;var f=this.morphNormals[a].vertexNormals,h,j;c=0;for(d=this.faces.length;c<d;c++){h=new THREE.Vector3;j={a:new THREE.Vector3,b:new THREE.Vector3,c:new THREE.Vector3};e.push(h);f.push(j)}}f=this.morphNormals[a];g.vertices=this.morphTargets[a].vertices;
g.computeFaceNormals();g.computeVertexNormals();c=0;for(d=this.faces.length;c<d;c++){e=this.faces[c];h=f.faceNormals[c];j=f.vertexNormals[c];h.copy(e.normal);j.a.copy(e.vertexNormals[0]);j.b.copy(e.vertexNormals[1]);j.c.copy(e.vertexNormals[2])}}c=0;for(d=this.faces.length;c<d;c++){e=this.faces[c];e.normal=e.__originalFaceNormal;e.vertexNormals=e.__originalVertexNormals}},computeTangents:function(){console.warn("THREE.Geometry: .computeTangents() has been removed.")},computeLineDistances:function(){for(var a=
0,b=this.vertices,c=0,d=b.length;c<d;c++){c>0&&(a=a+b[c].distanceTo(b[c-1]));this.lineDistances[c]=a}},computeBoundingBox:function(){if(this.boundingBox===null)this.boundingBox=new THREE.Box3;this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){if(this.boundingSphere===null)this.boundingSphere=new THREE.Sphere;this.boundingSphere.setFromPoints(this.vertices)},merge:function(a,b,c){if(a instanceof THREE.Geometry===false)console.error("THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.",
a);else{var d,e=this.vertices.length,g=this.vertices,f=a.vertices,h=this.faces,j=a.faces,i=this.faceVertexUvs[0],a=a.faceVertexUvs[0];c===void 0&&(c=0);b!==void 0&&(d=(new THREE.Matrix3).getNormalMatrix(b));for(var k=0,m=f.length;k<m;k++){var l=f[k].clone();b!==void 0&&l.applyMatrix4(b);g.push(l)}k=0;for(m=j.length;k<m;k++){var f=j[k],n,p=f.vertexNormals,r=f.vertexColors,l=new THREE.Face3(f.a+e,f.b+e,f.c+e);l.normal.copy(f.normal);d!==void 0&&l.normal.applyMatrix3(d).normalize();b=0;for(g=p.length;b<
g;b++){n=p[b].clone();d!==void 0&&n.applyMatrix3(d).normalize();l.vertexNormals.push(n)}l.color.copy(f.color);b=0;for(g=r.length;b<g;b++){n=r[b];l.vertexColors.push(n.clone())}l.materialIndex=f.materialIndex+c;h.push(l)}k=0;for(m=a.length;k<m;k++){c=a[k];d=[];if(c!==void 0){b=0;for(g=c.length;b<g;b++)d.push(c[b].clone());i.push(d)}}}},mergeMesh:function(a){if(a instanceof THREE.Mesh===false)console.error("THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.",a);else{a.matrixAutoUpdate&&
a.updateMatrix();this.merge(a.geometry,a.matrix)}},mergeVertices:function(){var a={},b=[],c=[],d,e=Math.pow(10,4),g,f;g=0;for(f=this.vertices.length;g<f;g++){d=this.vertices[g];d=Math.round(d.x*e)+"_"+Math.round(d.y*e)+"_"+Math.round(d.z*e);if(a[d]===void 0){a[d]=g;b.push(this.vertices[g]);c[g]=b.length-1}else c[g]=c[a[d]]}a=[];g=0;for(f=this.faces.length;g<f;g++){e=this.faces[g];e.a=c[e.a];e.b=c[e.b];e.c=c[e.c];e=[e.a,e.b,e.c];for(d=0;d<3;d++)if(e[d]===e[(d+1)%3]){a.push(g);break}}for(g=a.length-
1;g>=0;g--){e=a[g];this.faces.splice(e,1);c=0;for(f=this.faceVertexUvs.length;c<f;c++)this.faceVertexUvs[c].splice(e,1)}g=this.vertices.length-b.length;this.vertices=b;return g},sortFacesByMaterialIndex:function(){for(var a=this.faces,b=a.length,c=0;c<b;c++)a[c]._id=c;a.sort(function(a,b){return a.materialIndex-b.materialIndex});var d=this.faceVertexUvs[0],e=this.faceVertexUvs[1],g,f;d&&d.length===b&&(g=[]);e&&e.length===b&&(f=[]);for(c=0;c<b;c++){var h=a[c]._id;g&&g.push(d[h]);f&&f.push(e[h])}g&&
(this.faceVertexUvs[0]=g);f&&(this.faceVertexUvs[1]=f)},toJSON:function(){function a(a,b,c){return c?a|1<<b:a&~(1<<b)}function b(a){var b=a.x.toString()+a.y.toString()+a.z.toString();if(i[b]!==void 0)return i[b];i[b]=j.length/3;j.push(a.x,a.y,a.z);return i[b]}function c(a){var b=a.r.toString()+a.g.toString()+a.b.toString();if(m[b]!==void 0)return m[b];m[b]=k.length;k.push(a.getHex());return m[b]}function d(a){var b=a.x.toString()+a.y.toString();if(n[b]!==void 0)return n[b];n[b]=l.length/2;l.push(a.x,
a.y);return n[b]}var e={metadata:{version:4.4,type:"Geometry",generator:"Geometry.toJSON"}};e.uuid=this.uuid;e.type=this.type;if(this.name!=="")e.name=this.name;if(this.parameters!==void 0){var g=this.parameters,f;for(f in g)g[f]!==void 0&&(e[f]=g[f]);return e}g=[];for(f=0;f<this.vertices.length;f++){var h=this.vertices[f];g.push(h.x,h.y,h.z)}var h=[],j=[],i={},k=[],m={},l=[],n={};for(f=0;f<this.faces.length;f++){var p=this.faces[f],r=this.faceVertexUvs[0][f]!==void 0,s=p.normal.length()>0,q=p.vertexNormals.length>
0,u=p.color.r!==1||p.color.g!==1||p.color.b!==1,A=p.vertexColors.length>0,t=0,t=a(t,0,0),t=a(t,1,false),t=a(t,2,false),t=a(t,3,r),t=a(t,4,s),t=a(t,5,q),t=a(t,6,u),t=a(t,7,A);h.push(t);h.push(p.a,p.b,p.c);if(r){r=this.faceVertexUvs[0][f];h.push(d(r[0]),d(r[1]),d(r[2]))}s&&h.push(b(p.normal));if(q){s=p.vertexNormals;h.push(b(s[0]),b(s[1]),b(s[2]))}u&&h.push(c(p.color));if(A){p=p.vertexColors;h.push(c(p[0]),c(p[1]),c(p[2]))}}e.data={};e.data.vertices=g;e.data.normals=j;if(k.length>0)e.data.colors=k;
if(l.length>0)e.data.uvs=[l];e.data.faces=h;return e},clone:function(){return(new this.constructor).copy(this)},copy:function(a){this.vertices=[];this.faces=[];this.faceVertexUvs=[[]];for(var b=a.vertices,c=0,d=b.length;c<d;c++)this.vertices.push(b[c].clone());b=a.faces;c=0;for(d=b.length;c<d;c++)this.faces.push(b[c].clone());c=0;for(d=a.faceVertexUvs.length;c<d;c++){b=a.faceVertexUvs[c];this.faceVertexUvs[c]===void 0&&(this.faceVertexUvs[c]=[]);for(var e=0,g=b.length;e<g;e++){for(var f=b[e],h=[],
j=0,i=f.length;j<i;j++)h.push(f[j].clone());this.faceVertexUvs[c].push(h)}}return this},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.EventDispatcher.prototype.apply(THREE.Geometry.prototype);THREE.GeometryIdCount=0;
THREE.DirectGeometry=function(){Object.defineProperty(this,"id",{value:THREE.GeometryIdCount++});this.uuid=THREE.Math.generateUUID();this.name="";this.type="DirectGeometry";this.indices=[];this.vertices=[];this.normals=[];this.colors=[];this.uvs=[];this.uvs2=[];this.groups=[];this.morphTargets={};this.skinWeights=[];this.skinIndices=[];this.boundingSphere=this.boundingBox=null;this.groupsNeedUpdate=this.uvsNeedUpdate=this.colorsNeedUpdate=this.normalsNeedUpdate=this.verticesNeedUpdate=false};
THREE.DirectGeometry.prototype={constructor:THREE.DirectGeometry,computeBoundingBox:THREE.Geometry.prototype.computeBoundingBox,computeBoundingSphere:THREE.Geometry.prototype.computeBoundingSphere,computeFaceNormals:function(){console.warn("THREE.DirectGeometry: computeFaceNormals() is not a method of this type of geometry.")},computeVertexNormals:function(){console.warn("THREE.DirectGeometry: computeVertexNormals() is not a method of this type of geometry.")},computeGroups:function(a){for(var b,
c=[],d,a=a.faces,e=0;e<a.length;e++){var g=a[e];if(g.materialIndex!==d){d=g.materialIndex;if(b!==void 0){b.count=e*3-b.start;c.push(b)}b={start:e*3,materialIndex:d}}}if(b!==void 0){b.count=e*3-b.start;c.push(b)}this.groups=c},fromGeometry:function(a){var b=a.faces,c=a.vertices,d=a.faceVertexUvs,e=d[0]&&d[0].length>0,g=d[1]&&d[1].length>0,f=a.morphTargets,h=f.length;if(h>0){for(var j=[],i=0;i<h;i++)j[i]=[];this.morphTargets.position=j}var k=a.morphNormals,m=k.length;if(m>0){for(var l=[],i=0;i<m;i++)l[i]=
[];this.morphTargets.normal=l}for(var n=a.skinIndices,p=a.skinWeights,r=n.length===c.length,s=p.length===c.length,i=0;i<b.length;i++){var q=b[i];this.vertices.push(c[q.a],c[q.b],c[q.c]);var u=q.vertexNormals;if(u.length===3)this.normals.push(u[0],u[1],u[2]);else{u=q.normal;this.normals.push(u,u,u)}u=q.vertexColors;if(u.length===3)this.colors.push(u[0],u[1],u[2]);else{u=q.color;this.colors.push(u,u,u)}if(e===true){u=d[0][i];if(u!==void 0)this.uvs.push(u[0],u[1],u[2]);else{console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ",
i);this.uvs.push(new THREE.Vector2,new THREE.Vector2,new THREE.Vector2)}}if(g===true){u=d[1][i];if(u!==void 0)this.uvs2.push(u[0],u[1],u[2]);else{console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ",i);this.uvs2.push(new THREE.Vector2,new THREE.Vector2,new THREE.Vector2)}}for(u=0;u<h;u++){var A=f[u].vertices;j[u].push(A[q.a],A[q.b],A[q.c])}for(u=0;u<m;u++){A=k[u].vertexNormals[i];l[u].push(A.a,A.b,A.c)}r&&this.skinIndices.push(n[q.a],n[q.b],n[q.c]);s&&this.skinWeights.push(p[q.a],
p[q.b],p[q.c])}this.computeGroups(a);this.verticesNeedUpdate=a.verticesNeedUpdate;this.normalsNeedUpdate=a.normalsNeedUpdate;this.colorsNeedUpdate=a.colorsNeedUpdate;this.uvsNeedUpdate=a.uvsNeedUpdate;this.groupsNeedUpdate=a.groupsNeedUpdate;return this},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.EventDispatcher.prototype.apply(THREE.DirectGeometry.prototype);
THREE.BufferGeometry=function(){Object.defineProperty(this,"id",{value:THREE.GeometryIdCount++});this.uuid=THREE.Math.generateUUID();this.name="";this.type="BufferGeometry";this.index=null;this.attributes={};this.morphAttributes={};this.groups=[];this.boundingSphere=this.boundingBox=null;this.drawRange={start:0,count:Infinity}};
THREE.BufferGeometry.prototype={constructor:THREE.BufferGeometry,addIndex:function(a){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().");this.setIndex(a)},getIndex:function(){return this.index},setIndex:function(a){this.index=a},addAttribute:function(a,b,c){if(b instanceof THREE.BufferAttribute===false&&b instanceof THREE.InterleavedBufferAttribute===false){console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).");this.addAttribute(a,new THREE.BufferAttribute(b,
c))}else if(a==="index"){console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.");this.setIndex(b)}else this.attributes[a]=b},getAttribute:function(a){return this.attributes[a]},removeAttribute:function(a){delete this.attributes[a]},get drawcalls(){console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups.");return this.groups},get offsets(){console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups.");return this.groups},addDrawCall:function(a,
b,c){c!==void 0&&console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.");console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup().");this.addGroup(a,b)},clearDrawCalls:function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().");this.clearGroups()},addGroup:function(a,b,c){this.groups.push({start:a,count:b,materialIndex:c!==void 0?c:0})},clearGroups:function(){this.groups=[]},setDrawRange:function(a,b){this.drawRange.start=a;this.drawRange.count=
b},applyMatrix:function(a){var b=this.attributes.position;if(b!==void 0){a.applyToVector3Array(b.array);b.needsUpdate=true}b=this.attributes.normal;if(b!==void 0){(new THREE.Matrix3).getNormalMatrix(a).applyToVector3Array(b.array);b.needsUpdate=true}this.boundingBox!==null&&this.computeBoundingBox();this.boundingSphere!==null&&this.computeBoundingSphere()},rotateX:function(){var a;return function(b){a===void 0&&(a=new THREE.Matrix4);a.makeRotationX(b);this.applyMatrix(a);return this}}(),rotateY:function(){var a;
return function(b){a===void 0&&(a=new THREE.Matrix4);a.makeRotationY(b);this.applyMatrix(a);return this}}(),rotateZ:function(){var a;return function(b){a===void 0&&(a=new THREE.Matrix4);a.makeRotationZ(b);this.applyMatrix(a);return this}}(),translate:function(){var a;return function(b,c,d){a===void 0&&(a=new THREE.Matrix4);a.makeTranslation(b,c,d);this.applyMatrix(a);return this}}(),scale:function(){var a;return function(b,c,d){a===void 0&&(a=new THREE.Matrix4);a.makeScale(b,c,d);this.applyMatrix(a);
return this}}(),lookAt:function(){var a;return function(b){a===void 0&&(a=new THREE.Object3D);a.lookAt(b);a.updateMatrix();this.applyMatrix(a.matrix)}}(),center:function(){this.computeBoundingBox();var a=this.boundingBox.center().negate();this.translate(a.x,a.y,a.z);return a},setFromObject:function(a){var b=a.geometry;if(a instanceof THREE.Points||a instanceof THREE.Line){var a=new THREE.Float32Attribute(b.vertices.length*3,3),c=new THREE.Float32Attribute(b.colors.length*3,3);this.addAttribute("position",
a.copyVector3sArray(b.vertices));this.addAttribute("color",c.copyColorsArray(b.colors));b.lineDistances&&b.lineDistances.length===b.vertices.length&&this.addAttribute("lineDistance",(new THREE.Float32Attribute(b.lineDistances.length,1)).copyArray(b.lineDistances));if(b.boundingSphere!==null)this.boundingSphere=b.boundingSphere.clone();if(b.boundingBox!==null)this.boundingBox=b.boundingBox.clone()}else a instanceof THREE.Mesh&&b instanceof THREE.Geometry&&this.fromGeometry(b);return this},updateFromObject:function(a){var b=
a.geometry;if(a instanceof THREE.Mesh){var c=b.__directGeometry;if(c===void 0)return this.fromGeometry(b);c.verticesNeedUpdate=b.verticesNeedUpdate;c.normalsNeedUpdate=b.normalsNeedUpdate;c.colorsNeedUpdate=b.colorsNeedUpdate;c.uvsNeedUpdate=b.uvsNeedUpdate;c.groupsNeedUpdate=b.groupsNeedUpdate;b.verticesNeedUpdate=false;b.normalsNeedUpdate=false;b.colorsNeedUpdate=false;b.uvsNeedUpdate=false;b.groupsNeedUpdate=false;b=c}if(b.verticesNeedUpdate===true){c=this.attributes.position;if(c!==void 0){c.copyVector3sArray(b.vertices);
c.needsUpdate=true}b.verticesNeedUpdate=false}if(b.normalsNeedUpdate===true){c=this.attributes.normal;if(c!==void 0){c.copyVector3sArray(b.normals);c.needsUpdate=true}b.normalsNeedUpdate=false}if(b.colorsNeedUpdate===true){c=this.attributes.color;if(c!==void 0){c.copyColorsArray(b.colors);c.needsUpdate=true}b.colorsNeedUpdate=false}if(b.uvsNeedUpdate){c=this.attributes.uv;if(c!==void 0){c.copyVector2sArray(b.uvs);c.needsUpdate=true}b.uvsNeedUpdate=false}if(b.lineDistancesNeedUpdate){c=this.attributes.lineDistance;
if(c!==void 0){c.copyArray(b.lineDistances);c.needsUpdate=true}b.lineDistancesNeedUpdate=false}if(b.groupsNeedUpdate){b.computeGroups(a.geometry);this.groups=b.groups;b.groupsNeedUpdate=false}return this},fromGeometry:function(a){a.__directGeometry=(new THREE.DirectGeometry).fromGeometry(a);return this.fromDirectGeometry(a.__directGeometry)},fromDirectGeometry:function(a){var b=new Float32Array(a.vertices.length*3);this.addAttribute("position",(new THREE.BufferAttribute(b,3)).copyVector3sArray(a.vertices));
if(a.normals.length>0){b=new Float32Array(a.normals.length*3);this.addAttribute("normal",(new THREE.BufferAttribute(b,3)).copyVector3sArray(a.normals))}if(a.colors.length>0){b=new Float32Array(a.colors.length*3);this.addAttribute("color",(new THREE.BufferAttribute(b,3)).copyColorsArray(a.colors))}if(a.uvs.length>0){b=new Float32Array(a.uvs.length*2);this.addAttribute("uv",(new THREE.BufferAttribute(b,2)).copyVector2sArray(a.uvs))}if(a.uvs2.length>0){b=new Float32Array(a.uvs2.length*2);this.addAttribute("uv2",
(new THREE.BufferAttribute(b,2)).copyVector2sArray(a.uvs2))}if(a.indices.length>0){b=new (a.vertices.length>65535?Uint32Array:Uint16Array)(a.indices.length*3);this.setIndex((new THREE.BufferAttribute(b,1)).copyIndicesArray(a.indices))}this.groups=a.groups;for(var c in a.morphTargets){for(var b=[],d=a.morphTargets[c],e=0,g=d.length;e<g;e++){var f=d[e],h=new THREE.Float32Attribute(f.length*3,3);b.push(h.copyVector3sArray(f))}this.morphAttributes[c]=b}a.skinIndices.length>0&&this.addAttribute("skinIndex",
(new THREE.Float32Attribute(a.skinIndices.length*4,4)).copyVector4sArray(a.skinIndices));a.skinWeights.length>0&&this.addAttribute("skinWeight",(new THREE.Float32Attribute(a.skinWeights.length*4,4)).copyVector4sArray(a.skinWeights));if(a.boundingSphere!==null)this.boundingSphere=a.boundingSphere.clone();if(a.boundingBox!==null)this.boundingBox=a.boundingBox.clone();return this},computeBoundingBox:function(){var a=new THREE.Vector3;return function(){if(this.boundingBox===null)this.boundingBox=new THREE.Box3;
var b=this.attributes.position.array;if(b){var c=this.boundingBox;c.makeEmpty();for(var d=0,e=b.length;d<e;d=d+3){a.fromArray(b,d);c.expandByPoint(a)}}if(b===void 0||b.length===0){this.boundingBox.min.set(0,0,0);this.boundingBox.max.set(0,0,0)}(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}}(),computeBoundingSphere:function(){var a=
new THREE.Box3,b=new THREE.Vector3;return function(){if(this.boundingSphere===null)this.boundingSphere=new THREE.Sphere;var c=this.attributes.position.array;if(c){a.makeEmpty();for(var d=this.boundingSphere.center,e=0,g=c.length;e<g;e=e+3){b.fromArray(c,e);a.expandByPoint(b)}a.center(d);for(var f=0,e=0,g=c.length;e<g;e=e+3){b.fromArray(c,e);f=Math.max(f,d.distanceToSquared(b))}this.boundingSphere.radius=Math.sqrt(f);isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',
this)}}}(),computeFaceNormals:function(){},computeVertexNormals:function(){var a=this.index,b=this.attributes,c=this.groups;if(b.position){var d=b.position.array;if(b.normal===void 0)this.addAttribute("normal",new THREE.BufferAttribute(new Float32Array(d.length),3));else for(var e=b.normal.array,g=0,f=e.length;g<f;g++)e[g]=0;var e=b.normal.array,h,j,i,k=new THREE.Vector3,m=new THREE.Vector3,l=new THREE.Vector3,n=new THREE.Vector3,p=new THREE.Vector3;if(a){a=a.array;c.length===0&&this.addGroup(0,a.length);
for(var r=0,s=c.length;r<s;++r){g=c[r];f=g.start;h=g.count;g=f;for(f=f+h;g<f;g=g+3){h=a[g+0]*3;j=a[g+1]*3;i=a[g+2]*3;k.fromArray(d,h);m.fromArray(d,j);l.fromArray(d,i);n.subVectors(l,m);p.subVectors(k,m);n.cross(p);e[h]=e[h]+n.x;e[h+1]=e[h+1]+n.y;e[h+2]=e[h+2]+n.z;e[j]=e[j]+n.x;e[j+1]=e[j+1]+n.y;e[j+2]=e[j+2]+n.z;e[i]=e[i]+n.x;e[i+1]=e[i+1]+n.y;e[i+2]=e[i+2]+n.z}}}else{g=0;for(f=d.length;g<f;g=g+9){k.fromArray(d,g);m.fromArray(d,g+3);l.fromArray(d,g+6);n.subVectors(l,m);p.subVectors(k,m);n.cross(p);
e[g]=n.x;e[g+1]=n.y;e[g+2]=n.z;e[g+3]=n.x;e[g+4]=n.y;e[g+5]=n.z;e[g+6]=n.x;e[g+7]=n.y;e[g+8]=n.z}}this.normalizeNormals();b.normal.needsUpdate=true}},computeTangents:function(){console.warn("THREE.BufferGeometry: .computeTangents() has been removed.")},computeOffsets:function(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")},merge:function(a,b){if(a instanceof THREE.BufferGeometry===false)console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",
a);else{b===void 0&&(b=0);var c=this.attributes,d;for(d in c)if(a.attributes[d]!==void 0)for(var e=c[d].array,g=a.attributes[d],f=g.array,h=0,g=g.itemSize*b;h<f.length;h++,g++)e[g]=f[h];return this}},normalizeNormals:function(){for(var a=this.attributes.normal.array,b,c,d,e=0,g=a.length;e<g;e=e+3){b=a[e];c=a[e+1];d=a[e+2];b=1/Math.sqrt(b*b+c*c+d*d);a[e]=a[e]*b;a[e+1]=a[e+1]*b;a[e+2]=a[e+2]*b}},toJSON:function(){var a={metadata:{version:4.4,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};
a.uuid=this.uuid;a.type=this.type;if(this.name!=="")a.name=this.name;if(this.parameters!==void 0){var b=this.parameters,c;for(c in b)b[c]!==void 0&&(a[c]=b[c]);return a}a.data={attributes:{}};var d=this.index;if(d!==null){b=Array.prototype.slice.call(d.array);a.data.index={type:d.array.constructor.name,array:b}}d=this.attributes;for(c in d){var e=d[c],b=Array.prototype.slice.call(e.array);a.data.attributes[c]={itemSize:e.itemSize,type:e.array.constructor.name,array:b}}c=this.groups;if(c.length>0)a.data.groups=
JSON.parse(JSON.stringify(c));c=this.boundingSphere;if(c!==null)a.data.boundingSphere={center:c.center.toArray(),radius:c.radius};return a},clone:function(){return(new this.constructor).copy(this)},copy:function(a){var b=a.index;b!==null&&this.setIndex(b.clone());var b=a.attributes,c;for(c in b)this.addAttribute(c,b[c].clone());a=a.groups;c=0;for(b=a.length;c<b;c++){var d=a[c];this.addGroup(d.start,d.count)}return this},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.EventDispatcher.prototype.apply(THREE.BufferGeometry.prototype);
THREE.BufferGeometry.MaxIndex=65535;THREE.InstancedBufferGeometry=function(){THREE.BufferGeometry.call(this);this.type="InstancedBufferGeometry";this.maxInstancedCount=void 0};THREE.InstancedBufferGeometry.prototype=Object.create(THREE.BufferGeometry.prototype);THREE.InstancedBufferGeometry.prototype.constructor=THREE.InstancedBufferGeometry;THREE.InstancedBufferGeometry.prototype.addGroup=function(a,b,c){this.groups.push({start:a,count:b,instances:c})};
THREE.InstancedBufferGeometry.prototype.copy=function(a){var b=a.index;b!==null&&this.setIndex(b.clone());var b=a.attributes,c;for(c in b)this.addAttribute(c,b[c].clone());a=a.groups;c=0;for(b=a.length;c<b;c++){var d=a[c];this.addGroup(d.start,d.count,d.instances)}return this};THREE.EventDispatcher.prototype.apply(THREE.InstancedBufferGeometry.prototype);
THREE.AnimationAction=function(a,b,c,d,e){if(a===void 0)throw Error("clip is null");this.clip=a;this.localRoot=null;this.startTime=b||0;this.timeScale=c||1;this.weight=d||1;this.loop=e||THREE.LoopRepeat;this.loopCount=0;this.enabled=true;this.actionTime=-this.startTime;this.clipTime=0;this.propertyBindings=[]};
THREE.AnimationAction.prototype={constructor:THREE.AnimationAction,setLocalRoot:function(a){this.localRoot=a;return this},updateTime:function(a){var b=this.clipTime,c=this.loopCount,d=this.clip.duration;this.actionTime=this.actionTime+a;if(this.loop===THREE.LoopOnce){this.loopCount=0;this.clipTime=Math.min(Math.max(this.actionTime,0),d);this.clipTime!==b&&(this.clipTime===d?this.mixer.dispatchEvent({type:"finished",action:this,direction:1}):this.clipTime===0&&this.mixer.dispatchEvent({type:"finished",
action:this,direction:-1}));return this.clipTime}this.loopCount=Math.floor(this.actionTime/d);a=this.actionTime-this.loopCount*d;a=a%d;this.loop==THREE.LoopPingPong&&Math.abs(this.loopCount%2)===1&&(a=d-a);this.clipTime=a;this.loopCount!==c&&this.mixer.dispatchEvent({type:"loop",action:this,loopDelta:this.loopCount-this.loopCount});return this.clipTime},syncWith:function(a){this.actionTime=a.actionTime;this.timeScale=a.timeScale;return this},warpToDuration:function(a){this.timeScale=this.clip.duration/
a;return this},init:function(a){this.clipTime=a-this.startTime;return this},update:function(a){this.updateTime(a);return this.clip.getAt(this.clipTime)},getTimeScaleAt:function(a){return this.timeScale.getAt?this.timeScale.getAt(a):this.timeScale},getWeightAt:function(a){return this.weight.getAt?this.weight.getAt(a):this.weight}};
THREE.AnimationClip=function(a,b,c){this.name=a;this.tracks=c;this.duration=b!==void 0?b:-1;if(this.duration<0)for(a=0;a<this.tracks.length;a++){b=this.tracks[a];this.duration=Math.max(b.keys[b.keys.length-1].time)}this.trim();this.optimize();this.results=[]};
THREE.AnimationClip.prototype={constructor:THREE.AnimationClip,getAt:function(a){for(var a=Math.max(0,Math.min(a,this.duration)),b=0;b<this.tracks.length;b++)this.results[b]=this.tracks[b].getAt(a);return this.results},trim:function(){for(var a=0;a<this.tracks.length;a++)this.tracks[a].trim(0,this.duration);return this},optimize:function(){for(var a=0;a<this.tracks.length;a++)this.tracks[a].optimize();return this}};
THREE.AnimationClip.CreateFromMorphTargetSequence=function(a,b,c){for(var d=b.length,e=[],g=0;g<d;g++){var f=[];f.push({time:(g+d-1)%d,value:0});f.push({time:g,value:1});f.push({time:(g+1)%d,value:0});f.sort(THREE.KeyframeTrack.keyComparer);f[0].time===0&&f.push({time:d,value:f[0].value});e.push((new THREE.NumberKeyframeTrack(".morphTargetInfluences["+b[g].name+"]",f)).scale(1/c))}return new THREE.AnimationClip(a,-1,e)};
THREE.AnimationClip.findByName=function(a,b){for(var c=0;c<a.length;c++)if(a[c].name===b)return a[c];return null};THREE.AnimationClip.CreateClipsFromMorphTargetSequences=function(a,b){for(var c={},d=/^([\w-]*?)([\d]+)$/,e=0,g=a.length;e<g;e++){var f=a[e],h=f.name.match(d);if(h&&h.length>1){var j=h[1];(h=c[j])||(c[j]=h=[]);h.push(f)}}d=[];for(j in c)d.push(THREE.AnimationClip.CreateFromMorphTargetSequence(j,c[j],b));return d};
THREE.AnimationClip.parse=function(a){for(var b=[],c=0;c<a.tracks.length;c++)b.push(THREE.KeyframeTrack.parse(a.tracks[c]).scale(1/a.fps));return new THREE.AnimationClip(a.name,a.duration,b)};
THREE.AnimationClip.parseAnimation=function(a,b,c){if(!a){console.error("  no animation in JSONLoader data");return null}for(var d=function(a,b,c,d,e){for(var g=[],f=0;f<b.length;f++){var h=b[f];h[c]!==void 0&&g.push({time:h.time,value:e(h)})}return g.length>0?new d(a,g):null},e=[],g=a.name||"default",f=a.length||-1,h=a.fps||30,a=a.hierarchy||[],j=0;j<a.length;j++){var i=a[j].keys;if(i&&i.length!=0)if(i[0].morphTargets){for(var f={},k=0;k<i.length;k++)if(i[k].morphTargets)for(var m=0;m<i[k].morphTargets.length;m++)f[i[k].morphTargets[m]]=
-1;for(var l in f){for(var n=[],m=0;m<i[k].morphTargets.length;m++){var p=i[k];n.push({time:p.time,value:p.morphTarget===l?1:0})}e.push(new THREE.NumberKeyframeTrack(c+".morphTargetInfluence["+l+"]",n))}f=f.length*(h||1)}else{k=c+".bones["+b[j].name+"]";(m=d(k+".position",i,"pos",THREE.VectorKeyframeTrack,function(a){return(new THREE.Vector3).fromArray(a.pos)}))&&e.push(m);(m=d(k+".quaternion",i,"rot",THREE.QuaternionKeyframeTrack,function(a){return a.rot.slerp?a.rot.clone():(new THREE.Quaternion).fromArray(a.rot)}))&&
e.push(m);(i=d(k+".scale",i,"scl",THREE.VectorKeyframeTrack,function(a){return(new THREE.Vector3).fromArray(a.scl)}))&&e.push(i)}}return e.length===0?null:new THREE.AnimationClip(g,f,e)};THREE.AnimationMixer=function(a){this.root=a;this.time=0;this.timeScale=1;this.actions=[];this.propertyBindingMap={}};
THREE.AnimationMixer.prototype={constructor:THREE.AnimationMixer,addAction:function(a){this.actions.push(a);a.init(this.time);a.mixer=this;for(var b=a.clip.tracks,c=a.localRoot||this.root,d=0;d<b.length;d++){var e=b[d],g=c.uuid+"-"+e.name,f=this.propertyBindingMap[g];if(f===void 0){f=new THREE.PropertyBinding(c,e.name);this.propertyBindingMap[g]=f}a.propertyBindings.push(f);f.referenceCount=f.referenceCount+1}},removeAllActions:function(){for(var a=0;a<this.actions.length;a++)this.actions[a].mixer=
null;for(var b in this.propertyBindingMap)this.propertyBindingMap[b].unbind();this.actions=[];this.propertyBindingMap={};return this},removeAction:function(a){var b=this.actions.indexOf(a);if(b!==-1){this.actions.splice(b,1);a.mixer=null}for(var b=a.localRoot||this.root,a=a.clip.tracks,c=0;c<a.length;c++){var d=b.uuid+"-"+a[c].name,e=this.propertyBindingMap[d];e.referenceCount=e.referenceCount-1;if(e.referenceCount<=0){e.unbind();delete this.propertyBindingMap[d]}}return this},findActionByName:function(a){for(var b=
0;b<this.actions.length;b++)if(this.actions[b].name===a)return this.actions[b];return null},play:function(a){a.startTime=this.time;this.addAction(a);return this},fadeOut:function(a,b){var c=[];c.push({time:this.time,value:1});c.push({time:this.time+b,value:0});a.weight=new THREE.NumberKeyframeTrack("weight",c);return this},fadeIn:function(a,b){var c=[];c.push({time:this.time,value:0});c.push({time:this.time+b,value:1});a.weight=new THREE.NumberKeyframeTrack("weight",c);return this},warp:function(a,
b,c,d){var e=[];e.push({time:this.time,value:b});e.push({time:this.time+d,value:c});a.timeScale=new THREE.NumberKeyframeTrack("timeScale",e);return this},crossFade:function(a,b,c,d){this.fadeOut(a,c);this.fadeIn(b,c);if(d){var d=a.clip.duration/b.clip.duration,e=1/d;this.warp(a,1,d,c);this.warp(b,e,1,c)}return this},update:function(a){a=a*this.timeScale;this.time=this.time+a;for(var b=0;b<this.actions.length;b++){var c=this.actions[b],d=c.getWeightAt(this.time),e=c.getTimeScaleAt(this.time),e=c.update(a*
e);if(!(c.weight<=0)&&c.enabled)for(var g=0;g<e.length;g++)c.propertyBindings[g].accumulate(e[g],d)}for(var f in this.propertyBindingMap)this.propertyBindingMap[f].apply();return this}};THREE.EventDispatcher.prototype.apply(THREE.AnimationMixer.prototype);
THREE.AnimationUtils={getEqualsFunc:function(a){return a.equals?function(a,c){return a.equals(c)}:function(a,c){return a===c}},clone:function(a){if(typeof a==="object"){if(a.clone)return a.clone();console.error("can not figure out how to copy exemplarValue",a)}return a},lerp:function(a,b,c,d){return THREE.AnimationUtils.getLerpFunc(a,d)(a,b,c)},lerp_object:function(a,b,c){return a.lerp(b,c)},slerp_object:function(a,b,c){return a.slerp(b,c)},lerp_number:function(a,b,c){return a*(1-c)+b*c},lerp_boolean:function(a,
b,c){return c<0.5?a:b},lerp_boolean_immediate:function(a){return a},lerp_string:function(a,b,c){return c<0.5?a:b},lerp_string_immediate:function(a){return a},getLerpFunc:function(a,b){if(a===void 0||a===null)throw Error("examplarValue is null");switch(typeof a){case "object":if(a.lerp)return THREE.AnimationUtils.lerp_object;if(a.slerp)return THREE.AnimationUtils.slerp_object;break;case "number":return THREE.AnimationUtils.lerp_number;case "boolean":return b?THREE.AnimationUtils.lerp_boolean:THREE.AnimationUtils.lerp_boolean_immediate;
case "string":return b?THREE.AnimationUtils.lerp_string:THREE.AnimationUtils.lerp_string_immediate}}};THREE.KeyframeTrack=function(a,b){if(a===void 0)throw Error("track name is undefined");if(b===void 0||b.length===0)throw Error("no keys in track named "+a);this.name=a;this.keys=b;this.lastIndex=0;this.validate();this.optimize()};
THREE.KeyframeTrack.prototype={constructor:THREE.KeyframeTrack,getAt:function(a){for(;this.lastIndex<this.keys.length&&a>=this.keys[this.lastIndex].time;)this.lastIndex++;for(;this.lastIndex>0&&a<this.keys[this.lastIndex-1].time;)this.lastIndex--;if(this.lastIndex>=this.keys.length){this.setResult(this.keys[this.keys.length-1].value);return this.result}if(this.lastIndex===0){this.setResult(this.keys[0].value);return this.result}var b=this.keys[this.lastIndex-1];this.setResult(b.value);if(b.constantToNext)return this.result;
var c=this.keys[this.lastIndex];return this.result=this.lerpValues(this.result,c.value,(a-b.time)/(c.time-b.time))},shift:function(a){if(a!==0)for(var b=0;b<this.keys.length;b++)this.keys[b].time=this.keys[b].time+a;return this},scale:function(a){if(a!==1)for(var b=0;b<this.keys.length;b++)this.keys[b].time=this.keys[b].time*a;return this},trim:function(a,b){for(var c=0,d=1;d<this.keys.length;d++)this.keys[d]<=a&&c++;for(var e=0,d=this.keys.length-2;d>0;d++)if(this.keys[d]>=b)e++;else break;if(c+
e>0)this.keys=this.keys.splice(c,this.keys.length-e-c);return this},validate:function(){var a=null;if(this.keys.length===0)console.error("  track is empty, no keys",this);else{for(var b=0;b<this.keys.length;b++){var c=this.keys[b];if(!c){console.error("  key is null in track",this,b);return}if(typeof c.time!=="number"||isNaN(c.time)){console.error("  key.time is not a valid number",this,b,c);return}if(c.value===void 0||c.value===null){console.error("  key.value is null in track",this,b,c);return}if(a&&
a.time>c.time){console.error("  key.time is less than previous key time, out of order keys",this,b,c,a);return}a=c}return this}},optimize:function(){var a=[],b=this.keys[0];a.push(b);THREE.AnimationUtils.getEqualsFunc(b.value);for(var c=1;c<this.keys.length-1;c++){var d=this.keys[c],e=this.keys[c+1];if(b.time!==d.time&&(!this.compareValues(b.value,d.value)||!this.compareValues(d.value,e.value))){b.constantToNext=this.compareValues(b.value,d.value);a.push(d);b=d}}a.push(this.keys[this.keys.length-
1]);this.keys=a;return this}};THREE.KeyframeTrack.keyComparer=function(a,b){return a.time-b.time};THREE.KeyframeTrack.parse=function(a){if(a.type===void 0)throw Error("track type undefined, can not parse");return THREE.KeyframeTrack.GetTrackTypeForTypeName(a.type).parse(a)};
THREE.KeyframeTrack.GetTrackTypeForTypeName=function(a){switch(a.toLowerCase()){case "vector":case "vector2":case "vector3":case "vector4":return THREE.VectorKeyframeTrack;case "quaternion":return THREE.QuaternionKeyframeTrack;case "integer":case "scalar":case "double":case "float":case "number":return THREE.NumberKeyframeTrack;case "bool":case "boolean":return THREE.BooleanKeyframeTrack;case "string":return THREE.StringKeyframeTrack}throw Error("Unsupported typeName: "+a);};
THREE.PropertyBinding=function(a,b){this.rootNode=a;this.trackName=b;this.referenceCount=0;this.originalValue=null;var c=THREE.PropertyBinding.parseTrackName(b);this.directoryName=c.directoryName;this.nodeName=c.nodeName;this.objectName=c.objectName;this.objectIndex=c.objectIndex;this.propertyName=c.propertyName;this.propertyIndex=c.propertyIndex;this.node=THREE.PropertyBinding.findNode(a,this.nodeName)||a;this.cumulativeValue=null;this.cumulativeWeight=0};
THREE.PropertyBinding.prototype={constructor:THREE.PropertyBinding,reset:function(){this.cumulativeValue=null;this.cumulativeWeight=0},accumulate:function(a,b){this.isBound||this.bind();if(this.cumulativeWeight===0){if(b>0){if(this.cumulativeValue===null)this.cumulativeValue=THREE.AnimationUtils.clone(a);this.cumulativeWeight=b}}else{this.cumulativeValue=this.lerpValue(this.cumulativeValue,a,b/(this.cumulativeWeight+b));this.cumulativeWeight=this.cumulativeWeight+b}},unbind:function(){if(this.isBound){this.setValue(this.originalValue);
this.triggerDirty=this.equalsValue=this.lerpValue=this.getValue=this.setValue=null;this.isBound=false}},bind:function(){if(!this.isBound){var a=this.node;if(a){if(this.objectName){if(this.objectName==="materials"){if(!a.material){console.error("  can not bind to material as node does not have a material",this);return}if(!a.material.materials){console.error("  can not bind to material.materials as node.material does not have a materials array",this);return}a=a.material.materials}else if(this.objectName===
"bones"){if(!a.skeleton){console.error("  can not bind to bones as node does not have a skeleton",this);return}for(var a=a.skeleton.bones,b=0;b<a.length;b++)if(a[b].name===this.objectIndex){this.objectIndex=b;break}}else{if(a[this.objectName]===void 0){console.error("  can not bind to objectName of node, undefined",this);return}a=a[this.objectName]}if(this.objectIndex!==void 0){if(a[this.objectIndex]===void 0){console.error("  trying to bind to objectIndex of objectName, but is undefined:",this,a);
return}a=a[this.objectIndex]}}var c=a[this.propertyName];if(c){if(this.propertyIndex!==void 0){if(this.propertyName==="morphTargetInfluences"){a.geometry||console.error("  can not bind to morphTargetInfluences becasuse node does not have a geometry",this);a.geometry.morphTargets||console.error("  can not bind to morphTargetInfluences becasuse node does not have a geometry.morphTargets",this);for(b=0;b<this.node.geometry.morphTargets.length;b++)if(a.geometry.morphTargets[b].name===this.propertyIndex){this.propertyIndex=
b;break}}this.setValue=function(a){if(!this.equalsValue(c[this.propertyIndex],a)){c[this.propertyIndex]=a;return true}return false};this.getValue=function(){return c[this.propertyIndex]}}else if(c.copy){this.setValue=function(a){if(!this.equalsValue(c,a)){c.copy(a);return true}return false};this.getValue=function(){return c}}else{this.setValue=function(b){if(!this.equalsValue(a[this.propertyName],b)){a[this.propertyName]=b;return true}return false};this.getValue=function(){return a[this.propertyName]}}if(a.needsUpdate!==
void 0)this.triggerDirty=function(){this.node.needsUpdate=true};else if(a.matrixWorldNeedsUpdate!==void 0)this.triggerDirty=function(){a.matrixWorldNeedsUpdate=true};this.originalValue=this.getValue();this.equalsValue=THREE.AnimationUtils.getEqualsFunc(this.originalValue);this.lerpValue=THREE.AnimationUtils.getLerpFunc(this.originalValue,true);this.isBound=true}else console.error("  trying to update property for track: "+this.nodeName+"."+this.propertyName+" but it wasn't found.",a)}else console.error("  trying to update node for track: "+
this.trackName+" but it wasn't found.")}},apply:function(){this.isBound||this.bind();if(this.cumulativeWeight>0){if(this.cumulativeWeight<1){var a=1-this.cumulativeWeight;this.cumulativeValue=this.lerpValue(this.cumulativeValue,this.originalValue,a/(this.cumulativeWeight+a))}this.setValue(this.cumulativeValue)&&this.triggerDirty&&this.triggerDirty();this.cumulativeValue=null;this.cumulativeWeight=0}}};
THREE.PropertyBinding.parseTrackName=function(a){var b=/^(([\w]+\/)*)([\w-\d]+)?(\.([\w]+)(\[([\w\d\[\]\_. ]+)\])?)?(\.([\w.]+)(\[([\w\d\[\]\_. ]+)\])?)$/,c=b.exec(a);if(!c)throw Error("cannot parse trackName at all: "+a);c.index===b.lastIndex&&b.lastIndex++;b={directoryName:c[1],nodeName:c[3],objectName:c[5],objectIndex:c[7],propertyName:c[9],propertyIndex:c[11]};if(b.propertyName===null||b.propertyName.length===0)throw Error("can not parse propertyName from trackName: "+a);return b};
THREE.PropertyBinding.findNode=function(a,b){function c(a){for(var c=0;c<a.bones.length;c++){var d=a.bones[c];if(d.name===b)return d}return null}function d(a){for(var c=0;c<a.length;c++){var e=a[c];if(e.name===b||e.uuid===b)return e;if(e=d(e.children))return e}return null}if(!b||b===""||b==="root"||b==="."||b===-1||b===a.name||b===a.uuid)return a;if(a.skeleton){var e=c(a.skeleton);if(e)return e}if(a.children)if(e=d(a.children))return e;return null};
THREE.VectorKeyframeTrack=function(a,b){THREE.KeyframeTrack.call(this,a,b);this.result=this.keys[0].value.clone()};THREE.VectorKeyframeTrack.prototype=Object.create(THREE.KeyframeTrack.prototype);THREE.VectorKeyframeTrack.prototype.constructor=THREE.VectorKeyframeTrack;THREE.VectorKeyframeTrack.prototype.setResult=function(a){this.result.copy(a)};THREE.VectorKeyframeTrack.prototype.lerpValues=function(a,b,c){return a.lerp(b,c)};THREE.VectorKeyframeTrack.prototype.compareValues=function(a,b){return a.equals(b)};
THREE.VectorKeyframeTrack.prototype.clone=function(){for(var a=[],b=0;b<this.keys.length;b++){var c=this.keys[b];a.push({time:c.time,value:c.value.clone()})}return new THREE.VectorKeyframeTrack(this.name,a)};THREE.VectorKeyframeTrack.parse=function(a){for(var b=THREE["Vector"+a.keys[0].value.length],c=[],d=0;d<a.keys.length;d++){var e=a.keys[d];c.push({value:(new b).fromArray(e.value),time:e.time})}return new THREE.VectorKeyframeTrack(a.name,c)};
THREE.QuaternionKeyframeTrack=function(a,b){THREE.KeyframeTrack.call(this,a,b);this.result=this.keys[0].value.clone()};THREE.QuaternionKeyframeTrack.prototype=Object.create(THREE.KeyframeTrack.prototype);THREE.QuaternionKeyframeTrack.prototype.constructor=THREE.QuaternionKeyframeTrack;THREE.QuaternionKeyframeTrack.prototype.setResult=function(a){this.result.copy(a)};THREE.QuaternionKeyframeTrack.prototype.lerpValues=function(a,b,c){return a.slerp(b,c)};
THREE.QuaternionKeyframeTrack.prototype.compareValues=function(a,b){return a.equals(b)};THREE.QuaternionKeyframeTrack.prototype.multiply=function(a){for(var b=0;b<this.keys.length;b++)this.keys[b].value.multiply(a);return this};THREE.QuaternionKeyframeTrack.prototype.clone=function(){for(var a=[],b=0;b<this.keys.length;b++){var c=this.keys[b];a.push({time:c.time,value:c.value.clone()})}return new THREE.QuaternionKeyframeTrack(this.name,a)};
THREE.QuaternionKeyframeTrack.parse=function(a){for(var b=[],c=0;c<a.keys.length;c++){var d=a.keys[c];b.push({value:(new THREE.Quaternion).fromArray(d.value),time:d.time})}return new THREE.QuaternionKeyframeTrack(a.name,b)};THREE.StringKeyframeTrack=function(a,b){THREE.KeyframeTrack.call(this,a,b);this.result=this.keys[0].value};THREE.StringKeyframeTrack.prototype=Object.create(THREE.KeyframeTrack.prototype);THREE.StringKeyframeTrack.prototype.constructor=THREE.StringKeyframeTrack;
THREE.StringKeyframeTrack.prototype.setResult=function(a){this.result=a};THREE.StringKeyframeTrack.prototype.lerpValues=function(a,b,c){return c<1?a:b};THREE.StringKeyframeTrack.prototype.compareValues=function(a,b){return a===b};THREE.StringKeyframeTrack.prototype.clone=function(){for(var a=[],b=0;b<this.keys.length;b++){var c=this.keys[b];a.push({time:c.time,value:c.value})}return new THREE.StringKeyframeTrack(this.name,a)};
THREE.StringKeyframeTrack.parse=function(a){return new THREE.StringKeyframeTrack(a.name,a.keys)};THREE.BooleanKeyframeTrack=function(a,b){THREE.KeyframeTrack.call(this,a,b);this.result=this.keys[0].value};THREE.BooleanKeyframeTrack.prototype=Object.create(THREE.KeyframeTrack.prototype);THREE.BooleanKeyframeTrack.prototype.constructor=THREE.BooleanKeyframeTrack;THREE.BooleanKeyframeTrack.prototype.setResult=function(a){this.result=a};
THREE.BooleanKeyframeTrack.prototype.lerpValues=function(a,b,c){return c<1?a:b};THREE.BooleanKeyframeTrack.prototype.compareValues=function(a,b){return a===b};THREE.BooleanKeyframeTrack.prototype.clone=function(){for(var a=[],b=0;b<this.keys.length;b++){var c=this.keys[b];a.push({time:c.time,value:c.value})}return new THREE.BooleanKeyframeTrack(this.name,a)};THREE.BooleanKeyframeTrack.parse=function(a){return new THREE.BooleanKeyframeTrack(a.name,a.keys)};
THREE.NumberKeyframeTrack=function(a,b){THREE.KeyframeTrack.call(this,a,b);this.result=this.keys[0].value};THREE.NumberKeyframeTrack.prototype=Object.create(THREE.KeyframeTrack.prototype);THREE.NumberKeyframeTrack.prototype.constructor=THREE.NumberKeyframeTrack;THREE.NumberKeyframeTrack.prototype.setResult=function(a){this.result=a};THREE.NumberKeyframeTrack.prototype.lerpValues=function(a,b,c){return a*(1-c)+b*c};THREE.NumberKeyframeTrack.prototype.compareValues=function(a,b){return a===b};
THREE.NumberKeyframeTrack.prototype.clone=function(){for(var a=[],b=0;b<this.keys.length;b++){var c=this.keys[b];a.push({time:c.time,value:c.value})}return new THREE.NumberKeyframeTrack(this.name,a)};THREE.NumberKeyframeTrack.parse=function(a){return new THREE.NumberKeyframeTrack(a.name,a.keys)};THREE.Camera=function(){THREE.Object3D.call(this);this.type="Camera";this.matrixWorldInverse=new THREE.Matrix4;this.projectionMatrix=new THREE.Matrix4};THREE.Camera.prototype=Object.create(THREE.Object3D.prototype);
THREE.Camera.prototype.constructor=THREE.Camera;THREE.Camera.prototype.getWorldDirection=function(){var a=new THREE.Quaternion;return function(b){b=b||new THREE.Vector3;this.getWorldQuaternion(a);return b.set(0,0,-1).applyQuaternion(a)}}();THREE.Camera.prototype.lookAt=function(){var a=new THREE.Matrix4;return function(b){a.lookAt(this.position,b,this.up);this.quaternion.setFromRotationMatrix(a)}}();THREE.Camera.prototype.clone=function(){return(new this.constructor).copy(this)};
THREE.Camera.prototype.copy=function(a){THREE.Object3D.prototype.copy.call(this,a);this.matrixWorldInverse.copy(a.matrixWorldInverse);this.projectionMatrix.copy(a.projectionMatrix);return this};
THREE.CubeCamera=function(a,b,c){THREE.Object3D.call(this);this.type="CubeCamera";var d=new THREE.PerspectiveCamera(90,1,a,b);d.up.set(0,-1,0);d.lookAt(new THREE.Vector3(1,0,0));this.add(d);var e=new THREE.PerspectiveCamera(90,1,a,b);e.up.set(0,-1,0);e.lookAt(new THREE.Vector3(-1,0,0));this.add(e);var g=new THREE.PerspectiveCamera(90,1,a,b);g.up.set(0,0,1);g.lookAt(new THREE.Vector3(0,1,0));this.add(g);var f=new THREE.PerspectiveCamera(90,1,a,b);f.up.set(0,0,-1);f.lookAt(new THREE.Vector3(0,-1,0));
this.add(f);var h=new THREE.PerspectiveCamera(90,1,a,b);h.up.set(0,-1,0);h.lookAt(new THREE.Vector3(0,0,1));this.add(h);var j=new THREE.PerspectiveCamera(90,1,a,b);j.up.set(0,-1,0);j.lookAt(new THREE.Vector3(0,0,-1));this.add(j);this.renderTarget=new THREE.WebGLRenderTargetCube(c,c,{format:THREE.RGBFormat,magFilter:THREE.LinearFilter,minFilter:THREE.LinearFilter});this.updateCubeMap=function(a,b){this.parent===null&&this.updateMatrixWorld();var c=this.renderTarget,l=c.texture.generateMipmaps;c.texture.generateMipmaps=
false;c.activeCubeFace=0;a.render(b,d,c);c.activeCubeFace=1;a.render(b,e,c);c.activeCubeFace=2;a.render(b,g,c);c.activeCubeFace=3;a.render(b,f,c);c.activeCubeFace=4;a.render(b,h,c);c.texture.generateMipmaps=l;c.activeCubeFace=5;a.render(b,j,c);a.setRenderTarget(null)}};THREE.CubeCamera.prototype=Object.create(THREE.Object3D.prototype);THREE.CubeCamera.prototype.constructor=THREE.CubeCamera;
THREE.OrthographicCamera=function(a,b,c,d,e,g){THREE.Camera.call(this);this.type="OrthographicCamera";this.zoom=1;this.left=a;this.right=b;this.top=c;this.bottom=d;this.near=e!==void 0?e:0.1;this.far=g!==void 0?g:2E3;this.updateProjectionMatrix()};THREE.OrthographicCamera.prototype=Object.create(THREE.Camera.prototype);THREE.OrthographicCamera.prototype.constructor=THREE.OrthographicCamera;
THREE.OrthographicCamera.prototype.updateProjectionMatrix=function(){var a=(this.right-this.left)/(2*this.zoom),b=(this.top-this.bottom)/(2*this.zoom),c=(this.right+this.left)/2,d=(this.top+this.bottom)/2;this.projectionMatrix.makeOrthographic(c-a,c+a,d+b,d-b,this.near,this.far)};THREE.OrthographicCamera.prototype.copy=function(a){THREE.Camera.prototype.copy.call(this,a);this.left=a.left;this.right=a.right;this.top=a.top;this.bottom=a.bottom;this.near=a.near;this.far=a.far;this.zoom=a.zoom;return this};
THREE.OrthographicCamera.prototype.toJSON=function(a){a=THREE.Object3D.prototype.toJSON.call(this,a);a.object.zoom=this.zoom;a.object.left=this.left;a.object.right=this.right;a.object.top=this.top;a.object.bottom=this.bottom;a.object.near=this.near;a.object.far=this.far;return a};THREE.PerspectiveCamera=function(a,b,c,d){THREE.Camera.call(this);this.type="PerspectiveCamera";this.zoom=1;this.fov=a!==void 0?a:50;this.aspect=b!==void 0?b:1;this.near=c!==void 0?c:0.1;this.far=d!==void 0?d:2E3;this.updateProjectionMatrix()};
THREE.PerspectiveCamera.prototype=Object.create(THREE.Camera.prototype);THREE.PerspectiveCamera.prototype.constructor=THREE.PerspectiveCamera;THREE.PerspectiveCamera.prototype.setLens=function(a,b){b===void 0&&(b=24);this.fov=2*THREE.Math.radToDeg(Math.atan(b/(a*2)));this.updateProjectionMatrix()};THREE.PerspectiveCamera.prototype.setViewOffset=function(a,b,c,d,e,g){this.fullWidth=a;this.fullHeight=b;this.x=c;this.y=d;this.width=e;this.height=g;this.updateProjectionMatrix()};
THREE.PerspectiveCamera.prototype.updateProjectionMatrix=function(){var a=THREE.Math.radToDeg(2*Math.atan(Math.tan(THREE.Math.degToRad(this.fov)*0.5)/this.zoom));if(this.fullWidth){var b=this.fullWidth/this.fullHeight,a=Math.tan(THREE.Math.degToRad(a*0.5))*this.near,c=-a,d=b*c,b=Math.abs(b*a-d),c=Math.abs(a-c);this.projectionMatrix.makeFrustum(d+this.x*b/this.fullWidth,d+(this.x+this.width)*b/this.fullWidth,a-(this.y+this.height)*c/this.fullHeight,a-this.y*c/this.fullHeight,this.near,this.far)}else this.projectionMatrix.makePerspective(a,
this.aspect,this.near,this.far)};THREE.PerspectiveCamera.prototype.copy=function(a){THREE.Camera.prototype.copy.call(this,a);this.fov=a.fov;this.aspect=a.aspect;this.near=a.near;this.far=a.far;this.zoom=a.zoom;return this};THREE.PerspectiveCamera.prototype.toJSON=function(a){a=THREE.Object3D.prototype.toJSON.call(this,a);a.object.zoom=this.zoom;a.object.fov=this.fov;a.object.aspect=this.aspect;a.object.near=this.near;a.object.far=this.far;return a};
THREE.Light=function(a){THREE.Object3D.call(this);this.type="Light";this.color=new THREE.Color(a);this.receiveShadow=void 0};THREE.Light.prototype=Object.create(THREE.Object3D.prototype);THREE.Light.prototype.constructor=THREE.Light;
Object.defineProperties(THREE.Light.prototype,{onlyShadow:{set:function(){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(a){this.shadow.camera.fov=a}},shadowCameraLeft:{set:function(a){this.shadow.camera.left=a}},shadowCameraRight:{set:function(a){this.shadow.camera.right=a}},shadowCameraTop:{set:function(a){this.shadow.camera.top=a}},shadowCameraBottom:{set:function(a){this.shadow.camera.bottom=a}},shadowCameraNear:{set:function(a){this.shadow.camera.near=
a}},shadowCameraFar:{set:function(a){this.shadow.camera.far=a}},shadowCameraVisible:{set:function(){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow ) instead.")}},shadowBias:{set:function(a){this.shadow.bias=a}},shadowDarkness:{set:function(a){this.shadow.darkness=a}},shadowMapWidth:{set:function(a){this.shadow.mapSize.width=a}},shadowMapHeight:{set:function(a){this.shadow.mapSize.height=a}}});
THREE.Light.prototype.copy=function(a){THREE.Object3D.prototype.copy.call(this,a);this.color.copy(a.color);return this};
THREE.Light.prototype.toJSON=function(a){a=THREE.Object3D.prototype.toJSON.call(this,a);a.object.color=this.color.getHex();if(this.groundColor!==void 0)a.object.groundColor=this.groundColor.getHex();if(this.intensity!==void 0)a.object.intensity=this.intensity;if(this.distance!==void 0)a.object.distance=this.distance;if(this.angle!==void 0)a.object.angle=this.angle;if(this.decay!==void 0)a.object.decay=this.decay;if(this.exponent!==void 0)a.object.exponent=this.exponent;return a};
THREE.LightShadow=function(a){this.camera=a;this.bias=0;this.darkness=1;this.mapSize=new THREE.Vector2(512,512);this.matrix=this.map=null};THREE.LightShadow.prototype={constructor:THREE.LightShadow,copy:function(a){this.camera=a.camera.clone();this.bias=a.bias;this.darkness=a.darkness;this.mapSize.copy(a.mapSize)},clone:function(){return(new this.constructor).copy(this)}};THREE.AmbientLight=function(a){THREE.Light.call(this,a);this.type="AmbientLight";this.castShadow=void 0};
THREE.AmbientLight.prototype=Object.create(THREE.Light.prototype);THREE.AmbientLight.prototype.constructor=THREE.AmbientLight;THREE.DirectionalLight=function(a,b){THREE.Light.call(this,a);this.type="DirectionalLight";this.position.set(0,1,0);this.updateMatrix();this.target=new THREE.Object3D;this.intensity=b!==void 0?b:1;this.shadow=new THREE.LightShadow(new THREE.OrthographicCamera(-500,500,500,-500,50,5E3))};THREE.DirectionalLight.prototype=Object.create(THREE.Light.prototype);
THREE.DirectionalLight.prototype.constructor=THREE.DirectionalLight;THREE.DirectionalLight.prototype.copy=function(a){THREE.Light.prototype.copy.call(this,a);this.intensity=a.intensity;this.target=a.target.clone();this.shadow=a.shadow.clone();return this};THREE.HemisphereLight=function(a,b,c){THREE.Light.call(this,a);this.type="HemisphereLight";this.castShadow=void 0;this.position.set(0,1,0);this.updateMatrix();this.groundColor=new THREE.Color(b);this.intensity=c!==void 0?c:1};
THREE.HemisphereLight.prototype=Object.create(THREE.Light.prototype);THREE.HemisphereLight.prototype.constructor=THREE.HemisphereLight;THREE.HemisphereLight.prototype.copy=function(a){THREE.Light.prototype.copy.call(this,a);this.groundColor.copy(a.groundColor);this.intensity=a.intensity;return this};
THREE.PointLight=function(a,b,c,d){THREE.Light.call(this,a);this.type="PointLight";this.intensity=b!==void 0?b:1;this.distance=c!==void 0?c:0;this.decay=d!==void 0?d:1;this.shadow=new THREE.LightShadow(new THREE.PerspectiveCamera(90,1,1,500))};THREE.PointLight.prototype=Object.create(THREE.Light.prototype);THREE.PointLight.prototype.constructor=THREE.PointLight;
THREE.PointLight.prototype.copy=function(a){THREE.Light.prototype.copy.call(this,a);this.intensity=a.intensity;this.distance=a.distance;this.decay=a.decay;this.shadow=a.shadow.clone();return this};
THREE.SpotLight=function(a,b,c,d,e,g){THREE.Light.call(this,a);this.type="SpotLight";this.position.set(0,1,0);this.updateMatrix();this.target=new THREE.Object3D;this.intensity=b!==void 0?b:1;this.distance=c!==void 0?c:0;this.angle=d!==void 0?d:Math.PI/3;this.exponent=e!==void 0?e:10;this.decay=g!==void 0?g:1;this.shadow=new THREE.LightShadow(new THREE.PerspectiveCamera(50,1,50,5E3))};THREE.SpotLight.prototype=Object.create(THREE.Light.prototype);THREE.SpotLight.prototype.constructor=THREE.SpotLight;
THREE.SpotLight.prototype.copy=function(a){THREE.Light.prototype.copy.call(this,a);this.intensity=a.intensity;this.distance=a.distance;this.angle=a.angle;this.exponent=a.exponent;this.decay=a.decay;this.target=a.target.clone();this.shadow=a.shadow.clone();return this};THREE.Cache={enabled:!1,files:{},add:function(a,b){this.enabled!==false&&(this.files[a]=b)},get:function(a){if(this.enabled!==false)return this.files[a]},remove:function(a){delete this.files[a]},clear:function(){this.files={}}};
THREE.Loader=function(){this.onLoadStart=function(){};this.onLoadProgress=function(){};this.onLoadComplete=function(){}};
THREE.Loader.prototype={constructor:THREE.Loader,crossOrigin:void 0,extractUrlBase:function(a){a=a.split("/");if(a.length===1)return"./";a.pop();return a.join("/")+"/"},initMaterials:function(a,b,c){for(var d=[],e=0;e<a.length;++e)d[e]=this.createMaterial(a[e],b,c);return d},createMaterial:function(){var a,b,c;return function(d,e,g){function f(a,c,d,f,j){var a=e+a,i=THREE.Loader.Handlers.get(a);if(i!==null)a=i.load(a);else{b.setCrossOrigin(g);a=b.load(a)}if(c!==void 0){a.repeat.fromArray(c);if(c[0]!==
1)a.wrapS=THREE.RepeatWrapping;if(c[1]!==1)a.wrapT=THREE.RepeatWrapping}d!==void 0&&a.offset.fromArray(d);if(f!==void 0){if(f[0]==="repeat")a.wrapS=THREE.RepeatWrapping;if(f[0]==="mirror")a.wrapS=THREE.MirroredRepeatWrapping;if(f[1]==="repeat")a.wrapT=THREE.RepeatWrapping;if(f[1]==="mirror")a.wrapT=THREE.MirroredRepeatWrapping}if(j!==void 0)a.anisotropy=j;c=THREE.Math.generateUUID();h[c]=a;return c}a===void 0&&(a=new THREE.Color);b===void 0&&(b=new THREE.TextureLoader);c===void 0&&(c=new THREE.MaterialLoader);
var h={},j={uuid:THREE.Math.generateUUID(),type:"MeshLambertMaterial"},i;for(i in d){var k=d[i];switch(i){case "DbgColor":j.color=k;break;case "DbgIndex":case "opticalDensity":case "illumination":break;case "DbgName":j.name=k;break;case "blending":j.blending=THREE[k];break;case "colorDiffuse":j.color=a.fromArray(k).getHex();break;case "colorSpecular":j.specular=a.fromArray(k).getHex();break;case "colorEmissive":j.emissive=a.fromArray(k).getHex();break;case "specularCoef":j.shininess=k;break;case "shading":if(k.toLowerCase()===
"basic")j.type="MeshBasicMaterial";if(k.toLowerCase()==="phong")j.type="MeshPhongMaterial";break;case "mapDiffuse":j.map=f(k,d.mapDiffuseRepeat,d.mapDiffuseOffset,d.mapDiffuseWrap,d.mapDiffuseAnisotropy);break;case "mapDiffuseRepeat":case "mapDiffuseOffset":case "mapDiffuseWrap":case "mapDiffuseAnisotropy":break;case "mapLight":j.lightMap=f(k,d.mapLightRepeat,d.mapLightOffset,d.mapLightWrap,d.mapLightAnisotropy);break;case "mapLightRepeat":case "mapLightOffset":case "mapLightWrap":case "mapLightAnisotropy":break;
case "mapAO":j.aoMap=f(k,d.mapAORepeat,d.mapAOOffset,d.mapAOWrap,d.mapAOAnisotropy);break;case "mapAORepeat":case "mapAOOffset":case "mapAOWrap":case "mapAOAnisotropy":break;case "mapBump":j.bumpMap=f(k,d.mapBumpRepeat,d.mapBumpOffset,d.mapBumpWrap,d.mapBumpAnisotropy);break;case "mapBumpScale":j.bumpScale=k;break;case "mapBumpRepeat":case "mapBumpOffset":case "mapBumpWrap":case "mapBumpAnisotropy":break;case "mapNormal":j.normalMap=f(k,d.mapNormalRepeat,d.mapNormalOffset,d.mapNormalWrap,d.mapNormalAnisotropy);
break;case "mapNormalFactor":j.normalScale=[k,k];break;case "mapNormalRepeat":case "mapNormalOffset":case "mapNormalWrap":case "mapNormalAnisotropy":break;case "mapSpecular":j.specularMap=f(k,d.mapSpecularRepeat,d.mapSpecularOffset,d.mapSpecularWrap,d.mapSpecularAnisotropy);break;case "mapSpecularRepeat":case "mapSpecularOffset":case "mapSpecularWrap":case "mapSpecularAnisotropy":break;case "mapAlpha":j.alphaMap=f(k,d.mapAlphaRepeat,d.mapAlphaOffset,d.mapAlphaWrap,d.mapAlphaAnisotropy);break;case "mapAlphaRepeat":case "mapAlphaOffset":case "mapAlphaWrap":case "mapAlphaAnisotropy":break;
case "flipSided":j.side=THREE.BackSide;break;case "doubleSided":j.side=THREE.DoubleSide;break;case "transparency":console.warn("THREE.Loader: transparency has been renamed to opacity");j.opacity=k;break;case "opacity":case "transparent":case "depthTest":case "depthWrite":case "transparent":case "visible":case "wireframe":j[i]=k;break;case "vertexColors":if(k===true)j.vertexColors=THREE.VertexColors;if(k==="face")j.vertexColors=THREE.FaceColors;break;default:console.error("Loader.createMaterial: Unsupported",
i,k)}}j.type!=="MeshPhongMaterial"&&delete j.specular;if(j.opacity<1)j.transparent=true;c.setTextures(h);return c.parse(j)}}()};THREE.Loader.Handlers={handlers:[],add:function(a,b){this.handlers.push(a,b)},get:function(a){for(var b=this.handlers,c=0,d=b.length;c<d;c=c+2){var e=b[c+1];if(b[c].test(a))return e}return null}};THREE.XHRLoader=function(a){this.manager=a!==void 0?a:THREE.DefaultLoadingManager};
THREE.XHRLoader.prototype={constructor:THREE.XHRLoader,load:function(a,b,c,d){var e=this,g=THREE.Cache.get(a);if(g!==void 0){b&&setTimeout(function(){b(g)},0);return g}var f=new XMLHttpRequest;f.open("GET",a,true);f.addEventListener("load",function(c){c=c.target.response;THREE.Cache.add(a,c);b&&b(c);e.manager.itemEnd(a)},false);c!==void 0&&f.addEventListener("progress",function(a){c(a)},false);f.addEventListener("error",function(b){d&&d(b);e.manager.itemError(a)},false);if(this.crossOrigin!==void 0)f.crossOrigin=
this.crossOrigin;if(this.responseType!==void 0)f.responseType=this.responseType;if(this.withCredentials!==void 0)f.withCredentials=this.withCredentials;f.send(null);e.manager.itemStart(a);return f},setResponseType:function(a){this.responseType=a},setCrossOrigin:function(a){this.crossOrigin=a},setWithCredentials:function(a){this.withCredentials=a}};THREE.ImageLoader=function(a){this.manager=a!==void 0?a:THREE.DefaultLoadingManager};
THREE.ImageLoader.prototype={constructor:THREE.ImageLoader,load:function(a,b,c,d){var e=this,g=THREE.Cache.get(a);if(g!==void 0){e.manager.itemStart(a);b?setTimeout(function(){b(g);e.manager.itemEnd(a)},0):e.manager.itemEnd(a);return g}var f=document.createElement("img");f.addEventListener("load",function(){THREE.Cache.add(a,this);b&&b(this);e.manager.itemEnd(a)},false);c!==void 0&&f.addEventListener("progress",function(a){c(a)},false);f.addEventListener("error",function(b){d&&d(b);e.manager.itemError(a)},
false);if(this.crossOrigin!==void 0)f.crossOrigin=this.crossOrigin;e.manager.itemStart(a);f.src=a;return f},setCrossOrigin:function(a){this.crossOrigin=a}};THREE.JSONLoader=function(a){if(typeof a==="boolean"){console.warn("THREE.JSONLoader: showStatus parameter has been removed from constructor.");a=void 0}this.manager=a!==void 0?a:THREE.DefaultLoadingManager;this.withCredentials=false};
THREE.JSONLoader.prototype={constructor:THREE.JSONLoader,get statusDomElement(){if(this._statusDomElement===void 0)this._statusDomElement=document.createElement("div");console.warn("THREE.JSONLoader: .statusDomElement has been removed.");return this._statusDomElement},load:function(a,b){var c=this,d=this.texturePath&&typeof this.texturePath==="string"?this.texturePath:THREE.Loader.prototype.extractUrlBase(a),e=new THREE.XHRLoader(this.manager);e.setCrossOrigin(this.crossOrigin);e.setWithCredentials(this.withCredentials);
e.load(a,function(e){var e=JSON.parse(e),f=e.metadata;if(f!==void 0){if(f.type==="object"){console.error("THREE.JSONLoader: "+a+" should be loaded with THREE.ObjectLoader instead.");return}if(f.type==="scene"){console.error("THREE.JSONLoader: "+a+" should be loaded with THREE.SceneLoader instead.");return}}e=c.parse(e,d);b(e.geometry,e.materials)})},setCrossOrigin:function(a){this.crossOrigin=a},setTexturePath:function(a){this.texturePath=a},parse:function(a,b){var c=new THREE.Geometry,d=a.scale!==
void 0?1/a.scale:1;(function(b){var d,f,h,j,i,k,m,l,n,p,r,s,q,u=a.faces;k=a.vertices;var A=a.normals,t=a.colors,y=0;if(a.uvs!==void 0){for(d=0;d<a.uvs.length;d++)a.uvs[d].length&&y++;for(d=0;d<y;d++)c.faceVertexUvs[d]=[]}j=0;for(i=k.length;j<i;){d=new THREE.Vector3;d.x=k[j++]*b;d.y=k[j++]*b;d.z=k[j++]*b;c.vertices.push(d)}j=0;for(i=u.length;j<i;){b=u[j++];n=b&1;h=b&2;d=b&8;m=b&16;p=b&32;k=b&64;b=b&128;if(n){n=new THREE.Face3;n.a=u[j];n.b=u[j+1];n.c=u[j+3];r=new THREE.Face3;r.a=u[j+1];r.b=u[j+2];r.c=
u[j+3];j=j+4;if(h){h=u[j++];n.materialIndex=h;r.materialIndex=h}h=c.faces.length;if(d)for(d=0;d<y;d++){s=a.uvs[d];c.faceVertexUvs[d][h]=[];c.faceVertexUvs[d][h+1]=[];for(f=0;f<4;f++){l=u[j++];q=s[l*2];l=s[l*2+1];q=new THREE.Vector2(q,l);f!==2&&c.faceVertexUvs[d][h].push(q);f!==0&&c.faceVertexUvs[d][h+1].push(q)}}if(m){m=u[j++]*3;n.normal.set(A[m++],A[m++],A[m]);r.normal.copy(n.normal)}if(p)for(d=0;d<4;d++){m=u[j++]*3;p=new THREE.Vector3(A[m++],A[m++],A[m]);d!==2&&n.vertexNormals.push(p);d!==0&&r.vertexNormals.push(p)}if(k){k=
u[j++];k=t[k];n.color.setHex(k);r.color.setHex(k)}if(b)for(d=0;d<4;d++){k=u[j++];k=t[k];d!==2&&n.vertexColors.push(new THREE.Color(k));d!==0&&r.vertexColors.push(new THREE.Color(k))}c.faces.push(n);c.faces.push(r)}else{n=new THREE.Face3;n.a=u[j++];n.b=u[j++];n.c=u[j++];if(h){h=u[j++];n.materialIndex=h}h=c.faces.length;if(d)for(d=0;d<y;d++){s=a.uvs[d];c.faceVertexUvs[d][h]=[];for(f=0;f<3;f++){l=u[j++];q=s[l*2];l=s[l*2+1];q=new THREE.Vector2(q,l);c.faceVertexUvs[d][h].push(q)}}if(m){m=u[j++]*3;n.normal.set(A[m++],
A[m++],A[m])}if(p)for(d=0;d<3;d++){m=u[j++]*3;p=new THREE.Vector3(A[m++],A[m++],A[m]);n.vertexNormals.push(p)}if(k){k=u[j++];n.color.setHex(t[k])}if(b)for(d=0;d<3;d++){k=u[j++];n.vertexColors.push(new THREE.Color(t[k]))}c.faces.push(n)}}})(d);(function(){var b=a.influencesPerVertex!==void 0?a.influencesPerVertex:2;if(a.skinWeights)for(var d=0,f=a.skinWeights.length;d<f;d=d+b)c.skinWeights.push(new THREE.Vector4(a.skinWeights[d],b>1?a.skinWeights[d+1]:0,b>2?a.skinWeights[d+2]:0,b>3?a.skinWeights[d+
3]:0));if(a.skinIndices){d=0;for(f=a.skinIndices.length;d<f;d=d+b)c.skinIndices.push(new THREE.Vector4(a.skinIndices[d],b>1?a.skinIndices[d+1]:0,b>2?a.skinIndices[d+2]:0,b>3?a.skinIndices[d+3]:0))}c.bones=a.bones;c.bones&&(c.bones.length>0&&(c.skinWeights.length!==c.skinIndices.length||c.skinIndices.length!==c.vertices.length))&&console.warn("When skinning, number of vertices ("+c.vertices.length+"), skinIndices ("+c.skinIndices.length+"), and skinWeights ("+c.skinWeights.length+") should match.")})();
(function(b){if(a.morphTargets!==void 0)for(var d=0,f=a.morphTargets.length;d<f;d++){c.morphTargets[d]={};c.morphTargets[d].name=a.morphTargets[d].name;c.morphTargets[d].vertices=[];for(var h=c.morphTargets[d].vertices,j=a.morphTargets[d].vertices,i=0,k=j.length;i<k;i=i+3){var m=new THREE.Vector3;m.x=j[i]*b;m.y=j[i+1]*b;m.z=j[i+2]*b;h.push(m)}}if(a.morphColors!==void 0&&a.morphColors.length>0){console.warn('THREE.JSONLoader: "morphColors" no longer supported. Using them as face colors.');b=c.faces;
h=a.morphColors[0].colors;d=0;for(f=b.length;d<f;d++)b[d].color.fromArray(h,d*3)}})(d);(function(){var b=[],d=[];a.animation!==void 0&&d.push(a.animation);a.animations!==void 0&&(a.animations.length?d=d.concat(a.animations):d.push(a.animations));for(var f=0;f<d.length;f++){var h=THREE.AnimationClip.parseAnimation(d[f],c.bones);h&&b.push(h)}if(c.morphTargets){d=THREE.AnimationClip.CreateClipsFromMorphTargetSequences(c.morphTargets,10);b=b.concat(d)}if(b.length>0)c.animations=b})();c.computeFaceNormals();
c.computeBoundingSphere();if(a.materials===void 0||a.materials.length===0)return{geometry:c};d=THREE.Loader.prototype.initMaterials(a.materials,b,this.crossOrigin);return{geometry:c,materials:d}}};
THREE.LoadingManager=function(a,b,c){var d=this,e=false,g=0,f=0;this.onStart=void 0;this.onLoad=a;this.onProgress=b;this.onError=c;this.itemStart=function(a){f++;if(e===false&&d.onStart!==void 0)d.onStart(a,g,f);e=true};this.itemEnd=function(a){g++;if(d.onProgress!==void 0)d.onProgress(a,g,f);if(g===f){e=false;if(d.onLoad!==void 0)d.onLoad()}};this.itemError=function(a){if(d.onError!==void 0)d.onError(a)}};THREE.DefaultLoadingManager=new THREE.LoadingManager;
THREE.BufferGeometryLoader=function(a){this.manager=a!==void 0?a:THREE.DefaultLoadingManager};
THREE.BufferGeometryLoader.prototype={constructor:THREE.BufferGeometryLoader,load:function(a,b,c,d){var e=this,g=new THREE.XHRLoader(e.manager);g.setCrossOrigin(this.crossOrigin);g.load(a,function(a){b(e.parse(JSON.parse(a)))},c,d)},setCrossOrigin:function(a){this.crossOrigin=a},parse:function(a){var b=new THREE.BufferGeometry,c=a.data.index;if(c!==void 0){c=new self[c.type](c.array);b.setIndex(new THREE.BufferAttribute(c,1))}var d=a.data.attributes,e;for(e in d){var g=d[e],c=new self[g.type](g.array);
b.addAttribute(e,new THREE.BufferAttribute(c,g.itemSize))}e=a.data.groups||a.data.drawcalls||a.data.offsets;if(e!==void 0){c=0;for(d=e.length;c!==d;++c){g=e[c];b.addGroup(g.start,g.count)}}a=a.data.boundingSphere;if(a!==void 0){e=new THREE.Vector3;a.center!==void 0&&e.fromArray(a.center);b.boundingSphere=new THREE.Sphere(e,a.radius)}return b}};THREE.MaterialLoader=function(a){this.manager=a!==void 0?a:THREE.DefaultLoadingManager;this.textures={}};
THREE.MaterialLoader.prototype={constructor:THREE.MaterialLoader,load:function(a,b,c,d){var e=this,g=new THREE.XHRLoader(e.manager);g.setCrossOrigin(this.crossOrigin);g.load(a,function(a){b(e.parse(JSON.parse(a)))},c,d)},setCrossOrigin:function(a){this.crossOrigin=a},setTextures:function(a){this.textures=a},getTexture:function(a){var b=this.textures;b[a]===void 0&&console.warn("THREE.MaterialLoader: Undefined texture",a);return b[a]},parse:function(a){var b=new THREE[a.type];b.uuid=a.uuid;if(a.name!==
void 0)b.name=a.name;a.color!==void 0&&b.color.setHex(a.color);a.emissive!==void 0&&b.emissive.setHex(a.emissive);a.specular!==void 0&&b.specular.setHex(a.specular);if(a.shininess!==void 0)b.shininess=a.shininess;if(a.uniforms!==void 0)b.uniforms=a.uniforms;if(a.vertexShader!==void 0)b.vertexShader=a.vertexShader;if(a.fragmentShader!==void 0)b.fragmentShader=a.fragmentShader;if(a.vertexColors!==void 0)b.vertexColors=a.vertexColors;if(a.shading!==void 0)b.shading=a.shading;if(a.blending!==void 0)b.blending=
a.blending;if(a.side!==void 0)b.side=a.side;if(a.opacity!==void 0)b.opacity=a.opacity;if(a.transparent!==void 0)b.transparent=a.transparent;if(a.alphaTest!==void 0)b.alphaTest=a.alphaTest;if(a.depthTest!==void 0)b.depthTest=a.depthTest;if(a.depthWrite!==void 0)b.depthWrite=a.depthWrite;if(a.wireframe!==void 0)b.wireframe=a.wireframe;if(a.wireframeLinewidth!==void 0)b.wireframeLinewidth=a.wireframeLinewidth;if(a.size!==void 0)b.size=a.size;if(a.sizeAttenuation!==void 0)b.sizeAttenuation=a.sizeAttenuation;
if(a.map!==void 0)b.map=this.getTexture(a.map);if(a.alphaMap!==void 0){b.alphaMap=this.getTexture(a.alphaMap);b.transparent=true}if(a.bumpMap!==void 0)b.bumpMap=this.getTexture(a.bumpMap);if(a.bumpScale!==void 0)b.bumpScale=a.bumpScale;if(a.normalMap!==void 0)b.normalMap=this.getTexture(a.normalMap);if(a.normalScale)b.normalScale=new THREE.Vector2(a.normalScale,a.normalScale);if(a.displacementMap!==void 0)b.displacementMap=this.getTexture(a.displacementMap);if(a.displacementScale!==void 0)b.displacementScale=
a.displacementScale;if(a.displacementBias!==void 0)b.displacementBias=a.displacementBias;if(a.specularMap!==void 0)b.specularMap=this.getTexture(a.specularMap);if(a.envMap!==void 0){b.envMap=this.getTexture(a.envMap);b.combine=THREE.MultiplyOperation}if(a.reflectivity)b.reflectivity=a.reflectivity;if(a.lightMap!==void 0)b.lightMap=this.getTexture(a.lightMap);if(a.lightMapIntensity!==void 0)b.lightMapIntensity=a.lightMapIntensity;if(a.aoMap!==void 0)b.aoMap=this.getTexture(a.aoMap);if(a.aoMapIntensity!==
void 0)b.aoMapIntensity=a.aoMapIntensity;if(a.materials!==void 0)for(var c=0,d=a.materials.length;c<d;c++)b.materials.push(this.parse(a.materials[c]));return b}};THREE.ObjectLoader=function(a){this.manager=a!==void 0?a:THREE.DefaultLoadingManager;this.texturePath=""};
THREE.ObjectLoader.prototype={constructor:THREE.ObjectLoader,load:function(a,b,c,d){if(this.texturePath==="")this.texturePath=a.substring(0,a.lastIndexOf("/")+1);var e=this,g=new THREE.XHRLoader(e.manager);g.setCrossOrigin(this.crossOrigin);g.load(a,function(a){e.parse(JSON.parse(a),b)},c,d)},setTexturePath:function(a){this.texturePath=a},setCrossOrigin:function(a){this.crossOrigin=a},parse:function(a,b){var c=this.parseGeometries(a.geometries),d=this.parseImages(a.images,function(){b!==void 0&&b(e)}),
d=this.parseTextures(a.textures,d),d=this.parseMaterials(a.materials,d),e=this.parseObject(a.object,c,d);if(a.animations)e.animations=this.parseAnimations(a.animations);(a.images===void 0||a.images.length===0)&&b!==void 0&&b(e);return e},parseGeometries:function(a){var b={};if(a!==void 0)for(var c=new THREE.JSONLoader,d=new THREE.BufferGeometryLoader,e=0,g=a.length;e<g;e++){var f,h=a[e];switch(h.type){case "PlaneGeometry":case "PlaneBufferGeometry":f=new THREE[h.type](h.width,h.height,h.widthSegments,
h.heightSegments);break;case "BoxGeometry":case "CubeGeometry":f=new THREE.BoxGeometry(h.width,h.height,h.depth,h.widthSegments,h.heightSegments,h.depthSegments);break;case "CircleBufferGeometry":f=new THREE.CircleBufferGeometry(h.radius,h.segments,h.thetaStart,h.thetaLength);break;case "CircleGeometry":f=new THREE.CircleGeometry(h.radius,h.segments,h.thetaStart,h.thetaLength);break;case "CylinderGeometry":f=new THREE.CylinderGeometry(h.radiusTop,h.radiusBottom,h.height,h.radialSegments,h.heightSegments,
h.openEnded,h.thetaStart,h.thetaLength);break;case "SphereGeometry":f=new THREE.SphereGeometry(h.radius,h.widthSegments,h.heightSegments,h.phiStart,h.phiLength,h.thetaStart,h.thetaLength);break;case "SphereBufferGeometry":f=new THREE.SphereBufferGeometry(h.radius,h.widthSegments,h.heightSegments,h.phiStart,h.phiLength,h.thetaStart,h.thetaLength);break;case "DodecahedronGeometry":f=new THREE.DodecahedronGeometry(h.radius,h.detail);break;case "IcosahedronGeometry":f=new THREE.IcosahedronGeometry(h.radius,
h.detail);break;case "OctahedronGeometry":f=new THREE.OctahedronGeometry(h.radius,h.detail);break;case "TetrahedronGeometry":f=new THREE.TetrahedronGeometry(h.radius,h.detail);break;case "RingGeometry":f=new THREE.RingGeometry(h.innerRadius,h.outerRadius,h.thetaSegments,h.phiSegments,h.thetaStart,h.thetaLength);break;case "TorusGeometry":f=new THREE.TorusGeometry(h.radius,h.tube,h.radialSegments,h.tubularSegments,h.arc);break;case "TorusKnotGeometry":f=new THREE.TorusKnotGeometry(h.radius,h.tube,
h.radialSegments,h.tubularSegments,h.p,h.q,h.heightScale);break;case "BufferGeometry":f=d.parse(h);break;case "Geometry":f=c.parse(h.data,this.texturePath).geometry;break;default:console.warn('THREE.ObjectLoader: Unsupported geometry type "'+h.type+'"');continue}f.uuid=h.uuid;if(h.name!==void 0)f.name=h.name;b[h.uuid]=f}return b},parseMaterials:function(a,b){var c={};if(a!==void 0){var d=new THREE.MaterialLoader;d.setTextures(b);for(var e=0,g=a.length;e<g;e++){var f=d.parse(a[e]);c[f.uuid]=f}}return c},
parseAnimations:function(a){for(var b=[],c=0;c<a.length;c++){var d=THREE.AnimationClip.parse(a[c]);b.push(d)}return b},parseImages:function(a,b){function c(a){d.manager.itemStart(a);return f.load(a,function(){d.manager.itemEnd(a)})}var d=this,e={};if(a!==void 0&&a.length>0){var g=new THREE.LoadingManager(b),f=new THREE.ImageLoader(g);f.setCrossOrigin(this.crossOrigin);for(var g=0,h=a.length;g<h;g++){var j=a[g],i=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(j.url)?j.url:d.texturePath+j.url;e[j.uuid]=c(i)}}return e},
parseTextures:function(a,b){function c(a){if(typeof a==="number")return a;console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",a);return THREE[a]}var d={};if(a!==void 0)for(var e=0,g=a.length;e<g;e++){var f=a[e];f.image===void 0&&console.warn('THREE.ObjectLoader: No "image" specified for',f.uuid);b[f.image]===void 0&&console.warn("THREE.ObjectLoader: Undefined image",f.image);var h=new THREE.Texture(b[f.image]);h.needsUpdate=true;h.uuid=f.uuid;if(f.name!==void 0)h.name=
f.name;if(f.mapping!==void 0)h.mapping=c(f.mapping);if(f.offset!==void 0)h.offset=new THREE.Vector2(f.offset[0],f.offset[1]);if(f.repeat!==void 0)h.repeat=new THREE.Vector2(f.repeat[0],f.repeat[1]);if(f.minFilter!==void 0)h.minFilter=c(f.minFilter);if(f.magFilter!==void 0)h.magFilter=c(f.magFilter);if(f.anisotropy!==void 0)h.anisotropy=f.anisotropy;if(Array.isArray(f.wrap)){h.wrapS=c(f.wrap[0]);h.wrapT=c(f.wrap[1])}d[f.uuid]=h}return d},parseObject:function(){var a=new THREE.Matrix4;return function(b,
c,d){function e(a){c[a]===void 0&&console.warn("THREE.ObjectLoader: Undefined geometry",a);return c[a]}function g(a){if(a!==void 0){d[a]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",a);return d[a]}}var f;switch(b.type){case "Scene":f=new THREE.Scene;break;case "PerspectiveCamera":f=new THREE.PerspectiveCamera(b.fov,b.aspect,b.near,b.far);break;case "OrthographicCamera":f=new THREE.OrthographicCamera(b.left,b.right,b.top,b.bottom,b.near,b.far);break;case "AmbientLight":f=new THREE.AmbientLight(b.color);
break;case "DirectionalLight":f=new THREE.DirectionalLight(b.color,b.intensity);break;case "PointLight":f=new THREE.PointLight(b.color,b.intensity,b.distance,b.decay);break;case "SpotLight":f=new THREE.SpotLight(b.color,b.intensity,b.distance,b.angle,b.exponent,b.decay);break;case "HemisphereLight":f=new THREE.HemisphereLight(b.color,b.groundColor,b.intensity);break;case "Mesh":f=new THREE.Mesh(e(b.geometry),g(b.material));break;case "LOD":f=new THREE.LOD;break;case "Line":f=new THREE.Line(e(b.geometry),
g(b.material),b.mode);break;case "PointCloud":case "Points":f=new THREE.Points(e(b.geometry),g(b.material));break;case "Sprite":f=new THREE.Sprite(g(b.material));break;case "Group":f=new THREE.Group;break;default:f=new THREE.Object3D}f.uuid=b.uuid;if(b.name!==void 0)f.name=b.name;if(b.matrix!==void 0){a.fromArray(b.matrix);a.decompose(f.position,f.quaternion,f.scale)}else{b.position!==void 0&&f.position.fromArray(b.position);b.rotation!==void 0&&f.rotation.fromArray(b.rotation);b.scale!==void 0&&
f.scale.fromArray(b.scale)}if(b.castShadow!==void 0)f.castShadow=b.castShadow;if(b.receiveShadow!==void 0)f.receiveShadow=b.receiveShadow;if(b.visible!==void 0)f.visible=b.visible;if(b.userData!==void 0)f.userData=b.userData;if(b.children!==void 0)for(var h in b.children)f.add(this.parseObject(b.children[h],c,d));if(b.type==="LOD")for(var b=b.levels,j=0;j<b.length;j++){var i=b[j];h=f.getObjectByProperty("uuid",i.object);h!==void 0&&f.addLevel(h,i.distance)}return f}}()};
THREE.TextureLoader=function(a){this.manager=a!==void 0?a:THREE.DefaultLoadingManager};THREE.TextureLoader.prototype={constructor:THREE.TextureLoader,load:function(a,b,c,d){var e=new THREE.Texture,g=new THREE.ImageLoader(this.manager);g.setCrossOrigin(this.crossOrigin);g.load(a,function(a){e.image=a;e.needsUpdate=true;b!==void 0&&b(e)},c,d);return e},setCrossOrigin:function(a){this.crossOrigin=a}};THREE.CubeTextureLoader=function(a){this.manager=a!==void 0?a:THREE.DefaultLoadingManager};
THREE.CubeTextureLoader.prototype={constructor:THREE.CubeTextureLoader,load:function(a,b,c,d){function e(c){f.load(a[c],function(a){g.images[c]=a;h++;if(h===6){g.needsUpdate=true;b&&b(g)}},void 0,d)}var g=new THREE.CubeTexture([]),f=new THREE.ImageLoader;f.setCrossOrigin(this.crossOrigin);for(var h=0,c=0;c<a.length;++c)e(c);return g},setCrossOrigin:function(a){this.crossOrigin=a}};
THREE.DataTextureLoader=THREE.BinaryTextureLoader=function(a){this.manager=a!==void 0?a:THREE.DefaultLoadingManager;this._parser=null};
THREE.BinaryTextureLoader.prototype={constructor:THREE.BinaryTextureLoader,load:function(a,b,c,d){var e=this,g=new THREE.DataTexture,f=new THREE.XHRLoader(this.manager);f.setCrossOrigin(this.crossOrigin);f.setResponseType("arraybuffer");f.load(a,function(a){if(a=e._parser(a)){if(void 0!==a.image)g.image=a.image;else if(void 0!==a.data){g.image.width=a.width;g.image.height=a.height;g.image.data=a.data}g.wrapS=void 0!==a.wrapS?a.wrapS:THREE.ClampToEdgeWrapping;g.wrapT=void 0!==a.wrapT?a.wrapT:THREE.ClampToEdgeWrapping;
g.magFilter=void 0!==a.magFilter?a.magFilter:THREE.LinearFilter;g.minFilter=void 0!==a.minFilter?a.minFilter:THREE.LinearMipMapLinearFilter;g.anisotropy=void 0!==a.anisotropy?a.anisotropy:1;if(void 0!==a.format)g.format=a.format;if(void 0!==a.type)g.type=a.type;if(void 0!==a.mipmaps)g.mipmaps=a.mipmaps;if(1===a.mipmapCount)g.minFilter=THREE.LinearFilter;g.needsUpdate=true;b&&b(g,a)}},c,d);return g},setCrossOrigin:function(a){this.crossOrigin=a}};
THREE.CompressedTextureLoader=function(a){this.manager=a!==void 0?a:THREE.DefaultLoadingManager;this._parser=null};
THREE.CompressedTextureLoader.prototype={constructor:THREE.CompressedTextureLoader,load:function(a,b,c,d){var e=this,g=[],f=new THREE.CompressedTexture;f.image=g;var h=new THREE.XHRLoader(this.manager);h.setCrossOrigin(this.crossOrigin);h.setResponseType("arraybuffer");if(Array.isArray(a))for(var j=0,i=function(i){h.load(a[i],function(a){a=e._parser(a,true);g[i]={width:a.width,height:a.height,format:a.format,mipmaps:a.mipmaps};j=j+1;if(j===6){if(a.mipmapCount===1)f.minFilter=THREE.LinearFilter;f.format=
a.format;f.needsUpdate=true;b&&b(f)}},c,d)},k=0,m=a.length;k<m;++k)i(k);else h.load(a,function(a){a=e._parser(a,true);if(a.isCubemap)for(var c=a.mipmaps.length/a.mipmapCount,d=0;d<c;d++){g[d]={mipmaps:[]};for(var h=0;h<a.mipmapCount;h++){g[d].mipmaps.push(a.mipmaps[d*a.mipmapCount+h]);g[d].format=a.format;g[d].width=a.width;g[d].height=a.height}}else{f.image.width=a.width;f.image.height=a.height;f.mipmaps=a.mipmaps}if(a.mipmapCount===1)f.minFilter=THREE.LinearFilter;f.format=a.format;f.needsUpdate=
true;b&&b(f)},c,d);return f},setCrossOrigin:function(a){this.crossOrigin=a}};
THREE.Material=function(){Object.defineProperty(this,"id",{value:THREE.MaterialIdCount++});this.uuid=THREE.Math.generateUUID();this.name="";this.type="Material";this.side=THREE.FrontSide;this.opacity=1;this.transparent=false;this.blending=THREE.NormalBlending;this.blendSrc=THREE.SrcAlphaFactor;this.blendDst=THREE.OneMinusSrcAlphaFactor;this.blendEquation=THREE.AddEquation;this.blendEquationAlpha=this.blendDstAlpha=this.blendSrcAlpha=null;this.depthFunc=THREE.LessEqualDepth;this.colorWrite=this.depthWrite=
this.depthTest=true;this.precision=null;this.polygonOffset=false;this.overdraw=this.alphaTest=this.polygonOffsetUnits=this.polygonOffsetFactor=0;this._needsUpdate=this.visible=true};
THREE.Material.prototype={constructor:THREE.Material,get needsUpdate(){return this._needsUpdate},set needsUpdate(a){a===true&&this.update();this._needsUpdate=a},setValues:function(a){if(a!==void 0)for(var b in a){var c=a[b];if(c===void 0)console.warn("THREE.Material: '"+b+"' parameter is undefined.");else{var d=this[b];d===void 0?console.warn("THREE."+this.type+": '"+b+"' is not a property of this material."):d instanceof THREE.Color?d.set(c):d instanceof THREE.Vector3&&c instanceof THREE.Vector3?
d.copy(c):this[b]=b==="overdraw"?Number(c):c}}},toJSON:function(a){var b={metadata:{version:4.4,type:"Material",generator:"Material.toJSON"}};b.uuid=this.uuid;b.type=this.type;if(this.name!=="")b.name=this.name;if(this.color instanceof THREE.Color)b.color=this.color.getHex();if(this.emissive instanceof THREE.Color)b.emissive=this.emissive.getHex();if(this.specular instanceof THREE.Color)b.specular=this.specular.getHex();if(this.shininess!==void 0)b.shininess=this.shininess;if(this.map instanceof THREE.Texture)b.map=
this.map.toJSON(a).uuid;if(this.alphaMap instanceof THREE.Texture)b.alphaMap=this.alphaMap.toJSON(a).uuid;if(this.lightMap instanceof THREE.Texture)b.lightMap=this.lightMap.toJSON(a).uuid;if(this.bumpMap instanceof THREE.Texture){b.bumpMap=this.bumpMap.toJSON(a).uuid;b.bumpScale=this.bumpScale}if(this.normalMap instanceof THREE.Texture){b.normalMap=this.normalMap.toJSON(a).uuid;b.normalScale=this.normalScale}if(this.displacementMap instanceof THREE.Texture){b.displacementMap=this.displacementMap.toJSON(a).uuid;
b.displacementScale=this.displacementScale;b.displacementBias=this.displacementBias}if(this.specularMap instanceof THREE.Texture)b.specularMap=this.specularMap.toJSON(a).uuid;if(this.envMap instanceof THREE.Texture){b.envMap=this.envMap.toJSON(a).uuid;b.reflectivity=this.reflectivity}if(this.size!==void 0)b.size=this.size;if(this.sizeAttenuation!==void 0)b.sizeAttenuation=this.sizeAttenuation;if(this.vertexColors!==void 0&&this.vertexColors!==THREE.NoColors)b.vertexColors=this.vertexColors;if(this.shading!==
void 0&&this.shading!==THREE.SmoothShading)b.shading=this.shading;if(this.blending!==void 0&&this.blending!==THREE.NormalBlending)b.blending=this.blending;if(this.side!==void 0&&this.side!==THREE.FrontSide)b.side=this.side;if(this.opacity<1)b.opacity=this.opacity;if(this.transparent===true)b.transparent=this.transparent;if(this.alphaTest>0)b.alphaTest=this.alphaTest;if(this.wireframe===true)b.wireframe=this.wireframe;if(this.wireframeLinewidth>1)b.wireframeLinewidth=this.wireframeLinewidth;return b},
clone:function(){return(new this.constructor).copy(this)},copy:function(a){this.name=a.name;this.side=a.side;this.opacity=a.opacity;this.transparent=a.transparent;this.blending=a.blending;this.blendSrc=a.blendSrc;this.blendDst=a.blendDst;this.blendEquation=a.blendEquation;this.blendSrcAlpha=a.blendSrcAlpha;this.blendDstAlpha=a.blendDstAlpha;this.blendEquationAlpha=a.blendEquationAlpha;this.depthFunc=a.depthFunc;this.depthTest=a.depthTest;this.depthWrite=a.depthWrite;this.precision=a.precision;this.polygonOffset=
a.polygonOffset;this.polygonOffsetFactor=a.polygonOffsetFactor;this.polygonOffsetUnits=a.polygonOffsetUnits;this.alphaTest=a.alphaTest;this.overdraw=a.overdraw;this.visible=a.visible;return this},update:function(){this.dispatchEvent({type:"update"})},dispose:function(){this.dispatchEvent({type:"dispose"})},get wrapAround(){},set wrapAround(a){},get wrapRGB(){return new THREE.Color}};THREE.EventDispatcher.prototype.apply(THREE.Material.prototype);THREE.MaterialIdCount=0;
THREE.LineBasicMaterial=function(a){THREE.Material.call(this);this.type="LineBasicMaterial";this.color=new THREE.Color(16777215);this.linewidth=1;this.linejoin=this.linecap="round";this.vertexColors=THREE.NoColors;this.fog=true;this.setValues(a)};THREE.LineBasicMaterial.prototype=Object.create(THREE.Material.prototype);THREE.LineBasicMaterial.prototype.constructor=THREE.LineBasicMaterial;
THREE.LineBasicMaterial.prototype.copy=function(a){THREE.Material.prototype.copy.call(this,a);this.color.copy(a.color);this.linewidth=a.linewidth;this.linecap=a.linecap;this.linejoin=a.linejoin;this.vertexColors=a.vertexColors;this.fog=a.fog;return this};THREE.LineDashedMaterial=function(a){THREE.Material.call(this);this.type="LineDashedMaterial";this.color=new THREE.Color(16777215);this.scale=this.linewidth=1;this.dashSize=3;this.gapSize=1;this.vertexColors=false;this.fog=true;this.setValues(a)};
THREE.LineDashedMaterial.prototype=Object.create(THREE.Material.prototype);THREE.LineDashedMaterial.prototype.constructor=THREE.LineDashedMaterial;THREE.LineDashedMaterial.prototype.copy=function(a){THREE.Material.prototype.copy.call(this,a);this.color.copy(a.color);this.linewidth=a.linewidth;this.scale=a.scale;this.dashSize=a.dashSize;this.gapSize=a.gapSize;this.vertexColors=a.vertexColors;this.fog=a.fog;return this};
THREE.MeshBasicMaterial=function(a){THREE.Material.call(this);this.type="MeshBasicMaterial";this.color=new THREE.Color(16777215);this.aoMap=this.map=null;this.aoMapIntensity=1;this.envMap=this.alphaMap=this.specularMap=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=0.98;this.fog=true;this.shading=THREE.SmoothShading;this.wireframe=false;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap="round";this.vertexColors=THREE.NoColors;this.morphTargets=
this.skinning=false;this.setValues(a)};THREE.MeshBasicMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshBasicMaterial.prototype.constructor=THREE.MeshBasicMaterial;
THREE.MeshBasicMaterial.prototype.copy=function(a){THREE.Material.prototype.copy.call(this,a);this.color.copy(a.color);this.map=a.map;this.aoMap=a.aoMap;this.aoMapIntensity=a.aoMapIntensity;this.specularMap=a.specularMap;this.alphaMap=a.alphaMap;this.envMap=a.envMap;this.combine=a.combine;this.reflectivity=a.reflectivity;this.refractionRatio=a.refractionRatio;this.fog=a.fog;this.shading=a.shading;this.wireframe=a.wireframe;this.wireframeLinewidth=a.wireframeLinewidth;this.wireframeLinecap=a.wireframeLinecap;
this.wireframeLinejoin=a.wireframeLinejoin;this.vertexColors=a.vertexColors;this.skinning=a.skinning;this.morphTargets=a.morphTargets;return this};
THREE.MeshLambertMaterial=function(a){THREE.Material.call(this);this.type="MeshLambertMaterial";this.color=new THREE.Color(16777215);this.emissive=new THREE.Color(0);this.envMap=this.alphaMap=this.specularMap=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=0.98;this.fog=true;this.wireframe=false;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap="round";this.vertexColors=THREE.NoColors;this.morphNormals=this.morphTargets=this.skinning=
false;this.setValues(a)};THREE.MeshLambertMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshLambertMaterial.prototype.constructor=THREE.MeshLambertMaterial;
THREE.MeshLambertMaterial.prototype.copy=function(a){THREE.Material.prototype.copy.call(this,a);this.color.copy(a.color);this.emissive.copy(a.emissive);this.map=a.map;this.specularMap=a.specularMap;this.alphaMap=a.alphaMap;this.envMap=a.envMap;this.combine=a.combine;this.reflectivity=a.reflectivity;this.refractionRatio=a.refractionRatio;this.fog=a.fog;this.wireframe=a.wireframe;this.wireframeLinewidth=a.wireframeLinewidth;this.wireframeLinecap=a.wireframeLinecap;this.wireframeLinejoin=a.wireframeLinejoin;
this.vertexColors=a.vertexColors;this.skinning=a.skinning;this.morphTargets=a.morphTargets;this.morphNormals=a.morphNormals;return this};
THREE.MeshPhongMaterial=function(a){THREE.Material.call(this);this.type="MeshPhongMaterial";this.color=new THREE.Color(16777215);this.emissive=new THREE.Color(0);this.specular=new THREE.Color(1118481);this.shininess=30;this.metal=false;this.lightMap=this.map=null;this.lightMapIntensity=1;this.aoMap=null;this.aoMapIntensity=1;this.bumpMap=this.emissiveMap=null;this.bumpScale=1;this.normalMap=null;this.normalScale=new THREE.Vector2(1,1);this.displacementMap=null;this.displacementScale=1;this.displacementBias=
0;this.envMap=this.alphaMap=this.specularMap=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=0.98;this.fog=true;this.shading=THREE.SmoothShading;this.wireframe=false;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap="round";this.vertexColors=THREE.NoColors;this.morphNormals=this.morphTargets=this.skinning=false;this.setValues(a)};THREE.MeshPhongMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.MeshPhongMaterial.prototype.constructor=THREE.MeshPhongMaterial;
THREE.MeshPhongMaterial.prototype.copy=function(a){THREE.Material.prototype.copy.call(this,a);this.color.copy(a.color);this.emissive.copy(a.emissive);this.specular.copy(a.specular);this.shininess=a.shininess;this.metal=a.metal;this.map=a.map;this.lightMap=a.lightMap;this.lightMapIntensity=a.lightMapIntensity;this.aoMap=a.aoMap;this.aoMapIntensity=a.aoMapIntensity;this.emissiveMap=a.emissiveMap;this.bumpMap=a.bumpMap;this.bumpScale=a.bumpScale;this.normalMap=a.normalMap;this.normalScale.copy(a.normalScale);
this.displacementMap=a.displacementMap;this.displacementScale=a.displacementScale;this.displacementBias=a.displacementBias;this.specularMap=a.specularMap;this.alphaMap=a.alphaMap;this.envMap=a.envMap;this.combine=a.combine;this.reflectivity=a.reflectivity;this.refractionRatio=a.refractionRatio;this.fog=a.fog;this.shading=a.shading;this.wireframe=a.wireframe;this.wireframeLinewidth=a.wireframeLinewidth;this.wireframeLinecap=a.wireframeLinecap;this.wireframeLinejoin=a.wireframeLinejoin;this.vertexColors=
a.vertexColors;this.skinning=a.skinning;this.morphTargets=a.morphTargets;this.morphNormals=a.morphNormals;return this};THREE.MeshDepthMaterial=function(a){THREE.Material.call(this);this.type="MeshDepthMaterial";this.wireframe=this.morphTargets=false;this.wireframeLinewidth=1;this.setValues(a)};THREE.MeshDepthMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshDepthMaterial.prototype.constructor=THREE.MeshDepthMaterial;
THREE.MeshDepthMaterial.prototype.copy=function(a){THREE.Material.prototype.copy.call(this,a);this.wireframe=a.wireframe;this.wireframeLinewidth=a.wireframeLinewidth;return this};THREE.MeshNormalMaterial=function(a){THREE.Material.call(this,a);this.type="MeshNormalMaterial";this.wireframe=false;this.wireframeLinewidth=1;this.morphTargets=false;this.setValues(a)};THREE.MeshNormalMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshNormalMaterial.prototype.constructor=THREE.MeshNormalMaterial;
THREE.MeshNormalMaterial.prototype.copy=function(a){THREE.Material.prototype.copy.call(this,a);this.wireframe=a.wireframe;this.wireframeLinewidth=a.wireframeLinewidth;return this};THREE.MultiMaterial=function(a){this.uuid=THREE.Math.generateUUID();this.type="MultiMaterial";this.materials=a instanceof Array?a:[];this.visible=true};
THREE.MultiMaterial.prototype={constructor:THREE.MultiMaterial,toJSON:function(){for(var a={metadata:{version:4.2,type:"material",generator:"MaterialExporter"},uuid:this.uuid,type:this.type,materials:[]},b=0,c=this.materials.length;b<c;b++)a.materials.push(this.materials[b].toJSON());a.visible=this.visible;return a},clone:function(){for(var a=new this.constructor,b=0;b<this.materials.length;b++)a.materials.push(this.materials[b].clone());a.visible=this.visible;return a}};THREE.MeshFaceMaterial=THREE.MultiMaterial;
THREE.PointsMaterial=function(a){THREE.Material.call(this);this.type="PointsMaterial";this.color=new THREE.Color(16777215);this.map=null;this.size=1;this.sizeAttenuation=true;this.vertexColors=THREE.NoColors;this.fog=true;this.setValues(a)};THREE.PointsMaterial.prototype=Object.create(THREE.Material.prototype);THREE.PointsMaterial.prototype.constructor=THREE.PointsMaterial;
THREE.PointsMaterial.prototype.copy=function(a){THREE.Material.prototype.copy.call(this,a);this.color.copy(a.color);this.map=a.map;this.size=a.size;this.sizeAttenuation=a.sizeAttenuation;this.vertexColors=a.vertexColors;this.fog=a.fog;return this};THREE.PointCloudMaterial=function(a){console.warn("THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.");return new THREE.PointsMaterial(a)};
THREE.ParticleBasicMaterial=function(a){console.warn("THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.");return new THREE.PointsMaterial(a)};THREE.ParticleSystemMaterial=function(a){console.warn("THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.");return new THREE.PointsMaterial(a)};
THREE.ShaderMaterial=function(a){THREE.Material.call(this);this.type="ShaderMaterial";this.defines={};this.uniforms={};this.vertexShader="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}";this.fragmentShader="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}";this.shading=THREE.SmoothShading;this.linewidth=1;this.wireframe=false;this.wireframeLinewidth=1;this.lights=this.fog=false;this.vertexColors=THREE.NoColors;this.derivatives=this.morphNormals=
this.morphTargets=this.skinning=false;this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]};this.index0AttributeName=void 0;if(a!==void 0){a.attributes!==void 0&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.");this.setValues(a)}};THREE.ShaderMaterial.prototype=Object.create(THREE.Material.prototype);THREE.ShaderMaterial.prototype.constructor=THREE.ShaderMaterial;
THREE.ShaderMaterial.prototype.copy=function(a){THREE.Material.prototype.copy.call(this,a);this.fragmentShader=a.fragmentShader;this.vertexShader=a.vertexShader;this.uniforms=THREE.UniformsUtils.clone(a.uniforms);this.attributes=a.attributes;this.defines=a.defines;this.shading=a.shading;this.wireframe=a.wireframe;this.wireframeLinewidth=a.wireframeLinewidth;this.fog=a.fog;this.lights=a.lights;this.vertexColors=a.vertexColors;this.skinning=a.skinning;this.morphTargets=a.morphTargets;this.morphNormals=
a.morphNormals;this.derivatives=a.derivatives;return this};THREE.ShaderMaterial.prototype.toJSON=function(a){a=THREE.Material.prototype.toJSON.call(this,a);a.uniforms=this.uniforms;a.attributes=this.attributes;a.vertexShader=this.vertexShader;a.fragmentShader=this.fragmentShader;return a};THREE.RawShaderMaterial=function(a){THREE.ShaderMaterial.call(this,a);this.type="RawShaderMaterial"};THREE.RawShaderMaterial.prototype=Object.create(THREE.ShaderMaterial.prototype);
THREE.RawShaderMaterial.prototype.constructor=THREE.RawShaderMaterial;THREE.SpriteMaterial=function(a){THREE.Material.call(this);this.type="SpriteMaterial";this.color=new THREE.Color(16777215);this.map=null;this.rotation=0;this.fog=false;this.setValues(a)};THREE.SpriteMaterial.prototype=Object.create(THREE.Material.prototype);THREE.SpriteMaterial.prototype.constructor=THREE.SpriteMaterial;
THREE.SpriteMaterial.prototype.copy=function(a){THREE.Material.prototype.copy.call(this,a);this.color.copy(a.color);this.map=a.map;this.rotation=a.rotation;this.fog=a.fog;return this};
THREE.Texture=function(a,b,c,d,e,g,f,h,j){Object.defineProperty(this,"id",{value:THREE.TextureIdCount++});this.uuid=THREE.Math.generateUUID();this.sourceFile=this.name="";this.image=a!==void 0?a:THREE.Texture.DEFAULT_IMAGE;this.mipmaps=[];this.mapping=b!==void 0?b:THREE.Texture.DEFAULT_MAPPING;this.wrapS=c!==void 0?c:THREE.ClampToEdgeWrapping;this.wrapT=d!==void 0?d:THREE.ClampToEdgeWrapping;this.magFilter=e!==void 0?e:THREE.LinearFilter;this.minFilter=g!==void 0?g:THREE.LinearMipMapLinearFilter;
this.anisotropy=j!==void 0?j:1;this.format=f!==void 0?f:THREE.RGBAFormat;this.type=h!==void 0?h:THREE.UnsignedByteType;this.offset=new THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,1);this.generateMipmaps=true;this.premultiplyAlpha=false;this.flipY=true;this.unpackAlignment=4;this.version=0;this.onUpdate=null};THREE.Texture.DEFAULT_IMAGE=void 0;THREE.Texture.DEFAULT_MAPPING=THREE.UVMapping;
THREE.Texture.prototype={constructor:THREE.Texture,set needsUpdate(a){a===true&&this.version++},clone:function(){return(new this.constructor).copy(this)},copy:function(a){this.image=a.image;this.mipmaps=a.mipmaps.slice(0);this.mapping=a.mapping;this.wrapS=a.wrapS;this.wrapT=a.wrapT;this.magFilter=a.magFilter;this.minFilter=a.minFilter;this.anisotropy=a.anisotropy;this.format=a.format;this.type=a.type;this.offset.copy(a.offset);this.repeat.copy(a.repeat);this.generateMipmaps=a.generateMipmaps;this.premultiplyAlpha=
a.premultiplyAlpha;this.flipY=a.flipY;this.unpackAlignment=a.unpackAlignment;return this},toJSON:function(a){if(a.textures[this.uuid]!==void 0)return a.textures[this.uuid];var b={metadata:{version:4.4,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],wrap:[this.wrapS,this.wrapT],minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy};if(this.image!==void 0){var c=
this.image;if(c.uuid===void 0)c.uuid=THREE.Math.generateUUID();if(a.images[c.uuid]===void 0){var d=a.images,e=c.uuid,g=c.uuid,f;if(c.toDataURL!==void 0)f=c;else{f=document.createElement("canvas");f.width=c.width;f.height=c.height;f.getContext("2d").drawImage(c,0,0,c.width,c.height)}f=f.width>2048||f.height>2048?f.toDataURL("image/jpeg",0.6):f.toDataURL("image/png");d[e]={uuid:g,url:f}}b.image=c.uuid}return a.textures[this.uuid]=b},dispose:function(){this.dispatchEvent({type:"dispose"})},transformUv:function(a){if(this.mapping===
THREE.UVMapping){a.multiply(this.repeat);a.add(this.offset);if(a.x<0||a.x>1)switch(this.wrapS){case THREE.RepeatWrapping:a.x=a.x-Math.floor(a.x);break;case THREE.ClampToEdgeWrapping:a.x=a.x<0?0:1;break;case THREE.MirroredRepeatWrapping:a.x=Math.abs(Math.floor(a.x)%2)===1?Math.ceil(a.x)-a.x:a.x-Math.floor(a.x)}if(a.y<0||a.y>1)switch(this.wrapT){case THREE.RepeatWrapping:a.y=a.y-Math.floor(a.y);break;case THREE.ClampToEdgeWrapping:a.y=a.y<0?0:1;break;case THREE.MirroredRepeatWrapping:a.y=Math.abs(Math.floor(a.y)%
2)===1?Math.ceil(a.y)-a.y:a.y-Math.floor(a.y)}if(this.flipY)a.y=1-a.y}}};THREE.EventDispatcher.prototype.apply(THREE.Texture.prototype);THREE.TextureIdCount=0;THREE.CanvasTexture=function(a,b,c,d,e,g,f,h,j){THREE.Texture.call(this,a,b,c,d,e,g,f,h,j);this.needsUpdate=true};THREE.CanvasTexture.prototype=Object.create(THREE.Texture.prototype);THREE.CanvasTexture.prototype.constructor=THREE.CanvasTexture;
THREE.CubeTexture=function(a,b,c,d,e,g,f,h,j){b=b!==void 0?b:THREE.CubeReflectionMapping;THREE.Texture.call(this,a,b,c,d,e,g,f,h,j);this.images=a;this.flipY=false};THREE.CubeTexture.prototype=Object.create(THREE.Texture.prototype);THREE.CubeTexture.prototype.constructor=THREE.CubeTexture;THREE.CubeTexture.prototype.copy=function(a){THREE.Texture.prototype.copy.call(this,a);this.images=a.images;return this};
THREE.CompressedTexture=function(a,b,c,d,e,g,f,h,j,i,k){THREE.Texture.call(this,null,g,f,h,j,i,d,e,k);this.image={width:b,height:c};this.mipmaps=a;this.generateMipmaps=this.flipY=false};THREE.CompressedTexture.prototype=Object.create(THREE.Texture.prototype);THREE.CompressedTexture.prototype.constructor=THREE.CompressedTexture;
THREE.DataTexture=function(a,b,c,d,e,g,f,h,j,i,k){THREE.Texture.call(this,null,g,f,h,j,i,d,e,k);this.image={data:a,width:b,height:c};this.magFilter=j!==void 0?j:THREE.NearestFilter;this.minFilter=i!==void 0?i:THREE.NearestFilter;this.generateMipmaps=this.flipY=false};THREE.DataTexture.prototype=Object.create(THREE.Texture.prototype);THREE.DataTexture.prototype.constructor=THREE.DataTexture;
THREE.VideoTexture=function(a,b,c,d,e,g,f,h,j){function i(){requestAnimationFrame(i);if(a.readyState===a.HAVE_ENOUGH_DATA)k.needsUpdate=true}THREE.Texture.call(this,a,b,c,d,e,g,f,h,j);this.generateMipmaps=false;var k=this;i()};THREE.VideoTexture.prototype=Object.create(THREE.Texture.prototype);THREE.VideoTexture.prototype.constructor=THREE.VideoTexture;THREE.Group=function(){THREE.Object3D.call(this);this.type="Group"};THREE.Group.prototype=Object.create(THREE.Object3D.prototype);
THREE.Group.prototype.constructor=THREE.Group;THREE.Points=function(a,b){THREE.Object3D.call(this);this.type="Points";this.geometry=a!==void 0?a:new THREE.Geometry;this.material=b!==void 0?b:new THREE.PointsMaterial({color:Math.random()*16777215})};THREE.Points.prototype=Object.create(THREE.Object3D.prototype);THREE.Points.prototype.constructor=THREE.Points;
THREE.Points.prototype.raycast=function(){var a=new THREE.Matrix4,b=new THREE.Ray;return function(c,d){function e(a,e){var f=b.distanceSqToPoint(a);if(f<j){var h=b.closestPointToPoint(a);h.applyMatrix4(g.matrixWorld);var i=c.ray.origin.distanceTo(h);i<c.near||i>c.far||d.push({distance:i,distanceToRay:Math.sqrt(f),point:h.clone(),index:e,face:null,object:g})}}var g=this,f=g.geometry,h=c.params.Points.threshold;a.getInverse(this.matrixWorld);b.copy(c.ray).applyMatrix4(a);if(!(f.boundingBox!==null&&
b.isIntersectionBox(f.boundingBox)===false)){var h=h/((this.scale.x+this.scale.y+this.scale.z)/3),j=h*h,h=new THREE.Vector3;if(f instanceof THREE.BufferGeometry){var i=f.index,f=f.attributes.position.array;if(i!==null)for(var k=i.array,i=0,m=k.length;i<m;i++){var l=k[i];h.fromArray(f,l*3);e(h,l)}else{i=0;for(k=f.length/3;i<k;i++){h.fromArray(f,i*3);e(h,i)}}}else{h=f.vertices;i=0;for(k=h.length;i<k;i++)e(h[i],i)}}}}();
THREE.Points.prototype.clone=function(){return(new this.constructor(this.geometry,this.material)).copy(this)};THREE.PointCloud=function(a,b){console.warn("THREE.PointCloud has been renamed to THREE.Points.");return new THREE.Points(a,b)};THREE.ParticleSystem=function(a,b){console.warn("THREE.ParticleSystem has been renamed to THREE.Points.");return new THREE.Points(a,b)};
THREE.Line=function(a,b,c){if(c===1){console.warn("THREE.Line: parameter THREE.LinePieces no longer supported. Created THREE.LineSegments instead.");return new THREE.LineSegments(a,b)}THREE.Object3D.call(this);this.type="Line";this.geometry=a!==void 0?a:new THREE.Geometry;this.material=b!==void 0?b:new THREE.LineBasicMaterial({color:Math.random()*16777215})};THREE.Line.prototype=Object.create(THREE.Object3D.prototype);THREE.Line.prototype.constructor=THREE.Line;
THREE.Line.prototype.raycast=function(){var a=new THREE.Matrix4,b=new THREE.Ray,c=new THREE.Sphere;return function(d,e){var g=d.linePrecision,g=g*g,f=this.geometry;f.boundingSphere===null&&f.computeBoundingSphere();c.copy(f.boundingSphere);c.applyMatrix4(this.matrixWorld);if(d.ray.isIntersectionSphere(c)!==false){a.getInverse(this.matrixWorld);b.copy(d.ray).applyMatrix4(a);var h=new THREE.Vector3,j=new THREE.Vector3,i=new THREE.Vector3,k=new THREE.Vector3,m=this instanceof THREE.LineSegments?2:1;
if(f instanceof THREE.BufferGeometry){var l=f.index,n=f.attributes;if(l!==null)for(var f=l.array,n=n.position.array,l=0,p=f.length-1;l<p;l=l+m){var r=f[l+1];h.fromArray(n,f[l]*3);j.fromArray(n,r*3);r=b.distanceSqToSegment(h,j,k,i);if(!(r>g)){k.applyMatrix4(this.matrixWorld);r=d.ray.origin.distanceTo(k);r<d.near||r>d.far||e.push({distance:r,point:i.clone().applyMatrix4(this.matrixWorld),index:l,face:null,faceIndex:null,object:this})}}else{n=n.position.array;l=0;for(p=n.length/3-1;l<p;l=l+m){h.fromArray(n,
3*l);j.fromArray(n,3*l+3);r=b.distanceSqToSegment(h,j,k,i);if(!(r>g)){k.applyMatrix4(this.matrixWorld);r=d.ray.origin.distanceTo(k);r<d.near||r>d.far||e.push({distance:r,point:i.clone().applyMatrix4(this.matrixWorld),index:l,face:null,faceIndex:null,object:this})}}}}else if(f instanceof THREE.Geometry){h=f.vertices;j=h.length;for(l=0;l<j-1;l=l+m){r=b.distanceSqToSegment(h[l],h[l+1],k,i);if(!(r>g)){k.applyMatrix4(this.matrixWorld);r=d.ray.origin.distanceTo(k);r<d.near||r>d.far||e.push({distance:r,
point:i.clone().applyMatrix4(this.matrixWorld),index:l,face:null,faceIndex:null,object:this})}}}}}}();THREE.Line.prototype.clone=function(){return(new this.constructor(this.geometry,this.material)).copy(this)};THREE.LineStrip=0;THREE.LinePieces=1;THREE.LineSegments=function(a,b){THREE.Line.call(this,a,b);this.type="LineSegments"};THREE.LineSegments.prototype=Object.create(THREE.Line.prototype);THREE.LineSegments.prototype.constructor=THREE.LineSegments;
THREE.Mesh=function(a,b){THREE.Object3D.call(this);this.type="Mesh";this.geometry=a!==void 0?a:new THREE.Geometry;this.material=b!==void 0?b:new THREE.MeshBasicMaterial({color:Math.random()*16777215});this.updateMorphTargets()};THREE.Mesh.prototype=Object.create(THREE.Object3D.prototype);THREE.Mesh.prototype.constructor=THREE.Mesh;
THREE.Mesh.prototype.updateMorphTargets=function(){if(this.geometry.morphTargets!==void 0&&this.geometry.morphTargets.length>0){this.morphTargetBase=-1;this.morphTargetInfluences=[];this.morphTargetDictionary={};for(var a=0,b=this.geometry.morphTargets.length;a<b;a++){this.morphTargetInfluences.push(0);this.morphTargetDictionary[this.geometry.morphTargets[a].name]=a}}};
THREE.Mesh.prototype.getMorphTargetIndexByName=function(a){if(this.morphTargetDictionary[a]!==void 0)return this.morphTargetDictionary[a];console.warn("THREE.Mesh.getMorphTargetIndexByName: morph target "+a+" does not exist. Returning 0.");return 0};
THREE.Mesh.prototype.raycast=function(){function a(a,b,c,d,e,f,g){THREE.Triangle.barycoordFromPoint(a,b,c,d,r);e.multiplyScalar(r.x);f.multiplyScalar(r.y);g.multiplyScalar(r.z);e.add(f).add(g);return e.clone()}function b(a,b,c,d,e,f,g){var h=a.material;if((h.side===THREE.BackSide?c.intersectTriangle(f,e,d,true,g):c.intersectTriangle(d,e,f,h.side!==THREE.DoubleSide,g))===null)return null;q.copy(g);q.applyMatrix4(a.matrixWorld);c=b.ray.origin.distanceTo(q);return c<b.near||c>b.far?null:{distance:c,
point:q.clone(),object:a}}function c(c,d,e,g,i,k,m,q){f.fromArray(g,k*3);h.fromArray(g,m*3);j.fromArray(g,q*3);if(c=b(c,d,e,f,h,j,s)){if(i){l.fromArray(i,k*2);n.fromArray(i,m*2);p.fromArray(i,q*2);c.uv=a(s,f,h,j,l,n,p)}c.face=new THREE.Face3(k,m,q,THREE.Triangle.normal(f,h,j));c.faceIndex=k}return c}var d=new THREE.Matrix4,e=new THREE.Ray,g=new THREE.Sphere,f=new THREE.Vector3,h=new THREE.Vector3,j=new THREE.Vector3,i=new THREE.Vector3,k=new THREE.Vector3,m=new THREE.Vector3,l=new THREE.Vector2,n=
new THREE.Vector2,p=new THREE.Vector2,r=new THREE.Vector3,s=new THREE.Vector3,q=new THREE.Vector3;return function(q,r){var t=this.geometry,y=this.material;if(y!==void 0){t.boundingSphere===null&&t.computeBoundingSphere();var v=this.matrixWorld;g.copy(t.boundingSphere);g.applyMatrix4(v);if(q.ray.isIntersectionSphere(g)!==false){d.getInverse(v);e.copy(q.ray).applyMatrix4(d);if(!(t.boundingBox!==null&&e.isIntersectionBox(t.boundingBox)===false)){var w,x;if(t instanceof THREE.BufferGeometry){var K,F,
y=t.index,v=t.attributes,t=v.position.array;if(v.uv!==void 0)w=v.uv.array;if(y!==null)for(var v=y.array,C=0,J=v.length;C<J;C=C+3){y=v[C];K=v[C+1];F=v[C+2];if(x=c(this,q,e,t,w,y,K,F)){x.faceIndex=Math.floor(C/3);r.push(x)}}else{C=0;for(J=t.length;C<J;C=C+9){y=C/3;K=y+1;F=y+2;if(x=c(this,q,e,t,w,y,K,F)){x.index=y;r.push(x)}}}}else if(t instanceof THREE.Geometry){var I,L,v=y instanceof THREE.MeshFaceMaterial,C=v===true?y.materials:null,J=t.vertices;K=t.faces;F=t.faceVertexUvs[0];F.length>0&&(w=F);for(var D=
0,B=K.length;D<B;D++){var z=K[D];x=v===true?C[z.materialIndex]:y;if(x!==void 0){F=J[z.a];I=J[z.b];L=J[z.c];if(x.morphTargets===true){x=t.morphTargets;var H=this.morphTargetInfluences;f.set(0,0,0);h.set(0,0,0);j.set(0,0,0);for(var Q=0,O=x.length;Q<O;Q++){var M=H[Q];if(M!==0){var E=x[Q].vertices;f.addScaledVector(i.subVectors(E[z.a],F),M);h.addScaledVector(k.subVectors(E[z.b],I),M);j.addScaledVector(m.subVectors(E[z.c],L),M)}}f.add(F);h.add(I);j.add(L);F=f;I=h;L=j}if(x=b(this,q,e,F,I,L,s)){if(w){H=
w[D];l.copy(H[0]);n.copy(H[1]);p.copy(H[2]);x.uv=a(s,F,I,L,l,n,p)}x.face=z;x.faceIndex=D;r.push(x)}}}}}}}}}();THREE.Mesh.prototype.clone=function(){return(new this.constructor(this.geometry,this.material)).copy(this)};THREE.Bone=function(a){THREE.Object3D.call(this);this.type="Bone";this.skin=a};THREE.Bone.prototype=Object.create(THREE.Object3D.prototype);THREE.Bone.prototype.constructor=THREE.Bone;THREE.Bone.prototype.copy=function(a){THREE.Object3D.prototype.copy.call(this,a);this.skin=a.skin;return this};
THREE.Skeleton=function(a,b,c){this.useVertexTexture=c!==void 0?c:true;this.identityMatrix=new THREE.Matrix4;a=a||[];this.bones=a.slice(0);if(this.useVertexTexture){a=Math.sqrt(this.bones.length*4);a=THREE.Math.nextPowerOfTwo(Math.ceil(a));this.boneTextureHeight=this.boneTextureWidth=a=Math.max(a,4);this.boneMatrices=new Float32Array(this.boneTextureWidth*this.boneTextureHeight*4);this.boneTexture=new THREE.DataTexture(this.boneMatrices,this.boneTextureWidth,this.boneTextureHeight,THREE.RGBAFormat,
THREE.FloatType)}else this.boneMatrices=new Float32Array(16*this.bones.length);if(b===void 0)this.calculateInverses();else if(this.bones.length===b.length)this.boneInverses=b.slice(0);else{console.warn("THREE.Skeleton bonInverses is the wrong length.");this.boneInverses=[];b=0;for(a=this.bones.length;b<a;b++)this.boneInverses.push(new THREE.Matrix4)}};
THREE.Skeleton.prototype.calculateInverses=function(){this.boneInverses=[];for(var a=0,b=this.bones.length;a<b;a++){var c=new THREE.Matrix4;this.bones[a]&&c.getInverse(this.bones[a].matrixWorld);this.boneInverses.push(c)}};
THREE.Skeleton.prototype.pose=function(){for(var a,b=0,c=this.bones.length;b<c;b++)(a=this.bones[b])&&a.matrixWorld.getInverse(this.boneInverses[b]);b=0;for(c=this.bones.length;b<c;b++)if(a=this.bones[b]){if(a.parent){a.matrix.getInverse(a.parent.matrixWorld);a.matrix.multiply(a.matrixWorld)}else a.matrix.copy(a.matrixWorld);a.matrix.decompose(a.position,a.quaternion,a.scale)}};
THREE.Skeleton.prototype.update=function(){var a=new THREE.Matrix4;return function(){for(var b=0,c=this.bones.length;b<c;b++){a.multiplyMatrices(this.bones[b]?this.bones[b].matrixWorld:this.identityMatrix,this.boneInverses[b]);a.flattenToArrayOffset(this.boneMatrices,b*16)}if(this.useVertexTexture)this.boneTexture.needsUpdate=true}}();THREE.Skeleton.prototype.clone=function(){return new THREE.Skeleton(this.bones,this.boneInverses,this.useVertexTexture)};
THREE.SkinnedMesh=function(a,b,c){THREE.Mesh.call(this,a,b);this.type="SkinnedMesh";this.bindMode="attached";this.bindMatrix=new THREE.Matrix4;this.bindMatrixInverse=new THREE.Matrix4;a=[];if(this.geometry&&this.geometry.bones!==void 0){for(var d,e=0,g=this.geometry.bones.length;e<g;++e){d=this.geometry.bones[e];b=new THREE.Bone(this);a.push(b);b.name=d.name;b.position.fromArray(d.pos);b.quaternion.fromArray(d.rotq);d.scl!==void 0&&b.scale.fromArray(d.scl)}e=0;for(g=this.geometry.bones.length;e<g;++e){d=
this.geometry.bones[e];d.parent!==-1&&d.parent!==null?a[d.parent].add(a[e]):this.add(a[e])}}this.normalizeSkinWeights();this.updateMatrixWorld(true);this.bind(new THREE.Skeleton(a,void 0,c),this.matrixWorld)};THREE.SkinnedMesh.prototype=Object.create(THREE.Mesh.prototype);THREE.SkinnedMesh.prototype.constructor=THREE.SkinnedMesh;
THREE.SkinnedMesh.prototype.bind=function(a,b){this.skeleton=a;if(b===void 0){this.updateMatrixWorld(true);this.skeleton.calculateInverses();b=this.matrixWorld}this.bindMatrix.copy(b);this.bindMatrixInverse.getInverse(b)};THREE.SkinnedMesh.prototype.pose=function(){this.skeleton.pose()};
THREE.SkinnedMesh.prototype.normalizeSkinWeights=function(){if(this.geometry instanceof THREE.Geometry)for(var a=0;a<this.geometry.skinIndices.length;a++){var b=this.geometry.skinWeights[a],c=1/b.lengthManhattan();c!==Infinity?b.multiplyScalar(c):b.set(1)}};
THREE.SkinnedMesh.prototype.updateMatrixWorld=function(){THREE.Mesh.prototype.updateMatrixWorld.call(this,true);this.bindMode==="attached"?this.bindMatrixInverse.getInverse(this.matrixWorld):this.bindMode==="detached"?this.bindMatrixInverse.getInverse(this.bindMatrix):console.warn("THREE.SkinnedMesh unrecognized bindMode: "+this.bindMode)};THREE.SkinnedMesh.prototype.clone=function(){return(new this.constructor(this.geometry,this.material,this.useVertexTexture)).copy(this)};
THREE.LOD=function(){THREE.Object3D.call(this);this.type="LOD";Object.defineProperties(this,{levels:{enumerable:true,value:[]},objects:{get:function(){console.warn("THREE.LOD: .objects has been renamed to .levels.");return this.levels}}})};THREE.LOD.prototype=Object.create(THREE.Object3D.prototype);THREE.LOD.prototype.constructor=THREE.LOD;
THREE.LOD.prototype.addLevel=function(a,b){b===void 0&&(b=0);for(var b=Math.abs(b),c=this.levels,d=0;d<c.length;d++)if(b<c[d].distance)break;c.splice(d,0,{distance:b,object:a});this.add(a)};THREE.LOD.prototype.getObjectForDistance=function(a){for(var b=this.levels,c=1,d=b.length;c<d;c++)if(a<b[c].distance)break;return b[c-1].object};
THREE.LOD.prototype.raycast=function(){var a=new THREE.Vector3;return function(b,c){a.setFromMatrixPosition(this.matrixWorld);this.getObjectForDistance(b.ray.origin.distanceTo(a)).raycast(b,c)}}();
THREE.LOD.prototype.update=function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(c){var d=this.levels;if(d.length>1){a.setFromMatrixPosition(c.matrixWorld);b.setFromMatrixPosition(this.matrixWorld);c=a.distanceTo(b);d[0].object.visible=true;for(var e=1,g=d.length;e<g;e++)if(c>=d[e].distance){d[e-1].object.visible=false;d[e].object.visible=true}else break;for(;e<g;e++)d[e].object.visible=false}}}();
THREE.LOD.prototype.copy=function(a){THREE.Object3D.prototype.copy.call(this,a,false);for(var a=a.levels,b=0,c=a.length;b<c;b++){var d=a[b];this.addLevel(d.object.clone(),d.distance)}return this};THREE.LOD.prototype.toJSON=function(a){a=THREE.Object3D.prototype.toJSON.call(this,a);a.object.levels=[];for(var b=this.levels,c=0,d=b.length;c<d;c++){var e=b[c];a.object.levels.push({object:e.object.uuid,distance:e.distance})}return a};
THREE.Sprite=function(){var a=new Uint16Array([0,1,2,0,2,3]),b=new Float32Array([-0.5,-0.5,0,0.5,-0.5,0,0.5,0.5,0,-0.5,0.5,0]),c=new Float32Array([0,0,1,0,1,1,0,1]),d=new THREE.BufferGeometry;d.setIndex(new THREE.BufferAttribute(a,1));d.addAttribute("position",new THREE.BufferAttribute(b,3));d.addAttribute("uv",new THREE.BufferAttribute(c,2));return function(a){THREE.Object3D.call(this);this.type="Sprite";this.geometry=d;this.material=a!==void 0?a:new THREE.SpriteMaterial}}();
THREE.Sprite.prototype=Object.create(THREE.Object3D.prototype);THREE.Sprite.prototype.constructor=THREE.Sprite;THREE.Sprite.prototype.raycast=function(){var a=new THREE.Vector3;return function(b,c){a.setFromMatrixPosition(this.matrixWorld);var d=b.ray.distanceSqToPoint(a);d>this.scale.x*this.scale.y||c.push({distance:Math.sqrt(d),point:this.position,face:null,object:this})}}();THREE.Sprite.prototype.clone=function(){return(new this.constructor(this.material)).copy(this)};THREE.Particle=THREE.Sprite;
THREE.LensFlare=function(a,b,c,d,e){THREE.Object3D.call(this);this.lensFlares=[];this.positionScreen=new THREE.Vector3;this.customUpdateCallback=void 0;a!==void 0&&this.add(a,b,c,d,e)};THREE.LensFlare.prototype=Object.create(THREE.Object3D.prototype);THREE.LensFlare.prototype.constructor=THREE.LensFlare;
THREE.LensFlare.prototype.add=function(a,b,c,d,e,g){b===void 0&&(b=-1);c===void 0&&(c=0);g===void 0&&(g=1);e===void 0&&(e=new THREE.Color(16777215));if(d===void 0)d=THREE.NormalBlending;c=Math.min(c,Math.max(0,c));this.lensFlares.push({texture:a,size:b,distance:c,x:0,y:0,z:0,scale:1,rotation:0,opacity:g,color:e,blending:d})};
THREE.LensFlare.prototype.updateLensFlares=function(){var a,b=this.lensFlares.length,c,d=-this.positionScreen.x*2,e=-this.positionScreen.y*2;for(a=0;a<b;a++){c=this.lensFlares[a];c.x=this.positionScreen.x+d*c.distance;c.y=this.positionScreen.y+e*c.distance;c.wantedRotation=c.x*Math.PI*0.25;c.rotation=c.rotation+(c.wantedRotation-c.rotation)*0.25}};
THREE.LensFlare.prototype.copy=function(a){THREE.Object3D.prototype.copy.call(this,a);this.positionScreen.copy(a.positionScreen);this.customUpdateCallback=a.customUpdateCallback;for(var b=0,c=a.lensFlares.length;b<c;b++)this.lensFlares.push(a.lensFlares[b]);return this};THREE.Scene=function(){THREE.Object3D.call(this);this.type="Scene";this.overrideMaterial=this.fog=null;this.autoUpdate=true};THREE.Scene.prototype=Object.create(THREE.Object3D.prototype);THREE.Scene.prototype.constructor=THREE.Scene;
THREE.Scene.prototype.copy=function(a){THREE.Object3D.prototype.copy.call(this,a);if(a.fog!==null)this.fog=a.fog.clone();if(a.overrideMaterial!==null)this.overrideMaterial=a.overrideMaterial.clone();this.autoUpdate=a.autoUpdate;this.matrixAutoUpdate=a.matrixAutoUpdate;return this};THREE.Fog=function(a,b,c){this.name="";this.color=new THREE.Color(a);this.near=b!==void 0?b:1;this.far=c!==void 0?c:1E3};THREE.Fog.prototype.clone=function(){return new THREE.Fog(this.color.getHex(),this.near,this.far)};
THREE.FogExp2=function(a,b){this.name="";this.color=new THREE.Color(a);this.density=b!==void 0?b:2.5E-4};THREE.FogExp2.prototype.clone=function(){return new THREE.FogExp2(this.color.getHex(),this.density)};THREE.ShaderChunk={};THREE.ShaderChunk.alphamap_fragment="#ifdef USE_ALPHAMAP\n\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n\n#endif\n";THREE.ShaderChunk.alphamap_pars_fragment="#ifdef USE_ALPHAMAP\n\n\tuniform sampler2D alphaMap;\n\n#endif\n";THREE.ShaderChunk.alphatest_fragment="#ifdef ALPHATEST\n\n\tif ( diffuseColor.a < ALPHATEST ) discard;\n\n#endif\n";
THREE.ShaderChunk.aomap_fragment="#ifdef USE_AOMAP\n\n\ttotalAmbientLight *= ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\n#endif\n";THREE.ShaderChunk.aomap_pars_fragment="#ifdef USE_AOMAP\n\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n\n#endif";THREE.ShaderChunk.begin_vertex="\nvec3 transformed = vec3( position );\n";THREE.ShaderChunk.beginnormal_vertex="\nvec3 objectNormal = vec3( normal );\n";THREE.ShaderChunk.bumpmap_pars_fragment="#ifdef USE_BUMPMAP\n\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\n\n\n\tvec2 dHdxy_fwd() {\n\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\n\t\treturn vec2( dBx, dBy );\n\n\t}\n\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n\n\t\tvec3 vSigmaX = dFdx( surf_pos );\n\t\tvec3 vSigmaY = dFdy( surf_pos );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\n\t\tfloat fDet = dot( vSigmaX, R1 );\n\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\n\t}\n\n#endif\n";
THREE.ShaderChunk.color_fragment="#ifdef USE_COLOR\n\n\tdiffuseColor.rgb *= vColor;\n\n#endif";THREE.ShaderChunk.color_pars_fragment="#ifdef USE_COLOR\n\n\tvarying vec3 vColor;\n\n#endif\n";THREE.ShaderChunk.color_pars_vertex="#ifdef USE_COLOR\n\n\tvarying vec3 vColor;\n\n#endif";THREE.ShaderChunk.color_vertex="#ifdef USE_COLOR\n\n\tvColor.xyz = color.xyz;\n\n#endif";THREE.ShaderChunk.common="#define PI 3.14159\n#define PI2 6.28318\n#define RECIPROCAL_PI2 0.15915494\n#define LOG2 1.442695\n#define EPSILON 1e-6\n\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\n\nvec3 transformDirection( in vec3 normal, in mat4 matrix ) {\n\n\treturn normalize( ( matrix * vec4( normal, 0.0 ) ).xyz );\n\n}\n\nvec3 inverseTransformDirection( in vec3 normal, in mat4 matrix ) {\n\n\treturn normalize( ( vec4( normal, 0.0 ) * matrix ).xyz );\n\n}\n\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\n\n\treturn - distance * planeNormal + point;\n\n}\n\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\n\n}\n\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n\n}\n\nfloat calcLightAttenuation( float lightDistance, float cutoffDistance, float decayExponent ) {\n\n\tif ( decayExponent > 0.0 ) {\n\n\t  return pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\n\t}\n\n\treturn 1.0;\n\n}\n\nvec3 F_Schlick( in vec3 specularColor, in float dotLH ) {\n\n\n\tfloat fresnel = exp2( ( -5.55437 * dotLH - 6.98316 ) * dotLH );\n\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\n\n}\n\nfloat G_BlinnPhong_Implicit( /* in float dotNL, in float dotNV */ ) {\n\n\n\treturn 0.25;\n\n}\n\nfloat D_BlinnPhong( in float shininess, in float dotNH ) {\n\n\n\treturn ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n\n}\n\nvec3 BRDF_BlinnPhong( in vec3 specularColor, in float shininess, in vec3 normal, in vec3 lightDir, in vec3 viewDir ) {\n\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotLH = saturate( dot( lightDir, halfDir ) );\n\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\n\tfloat G = G_BlinnPhong_Implicit( /* dotNL, dotNV */ );\n\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\n\treturn F * G * D;\n\n}\n\nvec3 inputToLinear( in vec3 a ) {\n\n\t#ifdef GAMMA_INPUT\n\n\t\treturn pow( a, vec3( float( GAMMA_FACTOR ) ) );\n\n\t#else\n\n\t\treturn a;\n\n\t#endif\n\n}\n\nvec3 linearToOutput( in vec3 a ) {\n\n\t#ifdef GAMMA_OUTPUT\n\n\t\treturn pow( a, vec3( 1.0 / float( GAMMA_FACTOR ) ) );\n\n\t#else\n\n\t\treturn a;\n\n\t#endif\n\n}\n";
THREE.ShaderChunk.defaultnormal_vertex="#ifdef FLIP_SIDED\n\n\tobjectNormal = -objectNormal;\n\n#endif\n\nvec3 transformedNormal = normalMatrix * objectNormal;\n";THREE.ShaderChunk.displacementmap_vertex="#ifdef USE_DISPLACEMENTMAP\n\n\ttransformed += normal * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\n\n#endif\n";THREE.ShaderChunk.displacementmap_pars_vertex="#ifdef USE_DISPLACEMENTMAP\n\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n\n#endif\n";
THREE.ShaderChunk.emissivemap_fragment="#ifdef USE_EMISSIVEMAP\n\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\n\temissiveColor.rgb = inputToLinear( emissiveColor.rgb );\n\n\ttotalEmissiveLight *= emissiveColor.rgb;\n\n#endif\n";THREE.ShaderChunk.emissivemap_pars_fragment="#ifdef USE_EMISSIVEMAP\n\n\tuniform sampler2D emissiveMap;\n\n#endif\n";THREE.ShaderChunk.envmap_fragment="#ifdef USE_ENVMAP\n\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\n\t\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\n\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\n\t\t\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\n\n\t\t#else\n\n\t\t\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\n\n\t\t#endif\n\n\t#else\n\n\t\tvec3 reflectVec = vReflect;\n\n\t#endif\n\n\t#ifdef DOUBLE_SIDED\n\t\tfloat flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t#else\n\t\tfloat flipNormal = 1.0;\n\t#endif\n\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\n\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\t\tvec2 sampleUV;\n\t\tsampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );\n\t\tsampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n\t\tvec4 envColor = texture2D( envMap, sampleUV );\n\n\t#elif defined( ENVMAP_TYPE_SPHERE )\n\t\tvec3 reflectView = flipNormal * normalize((viewMatrix * vec4( reflectVec, 0.0 )).xyz + vec3(0.0,0.0,1.0));\n\t\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\n\t#endif\n\n\tenvColor.xyz = inputToLinear( envColor.xyz );\n\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\n\t#endif\n\n#endif\n";
THREE.ShaderChunk.envmap_pars_fragment="#ifdef USE_ENVMAP\n\n\tuniform float reflectivity;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\tuniform float flipEnvMap;\n\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\n\t\tuniform float refractionRatio;\n\n\t#else\n\n\t\tvarying vec3 vReflect;\n\n\t#endif\n\n#endif\n";THREE.ShaderChunk.envmap_pars_vertex="#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP ) && ! defined( PHONG )\n\n\tvarying vec3 vReflect;\n\n\tuniform float refractionRatio;\n\n#endif\n";
THREE.ShaderChunk.envmap_vertex="#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP ) && ! defined( PHONG )\n\n\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\n\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\n\t#ifdef ENVMAP_MODE_REFLECTION\n\n\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\n\t#else\n\n\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\n\t#endif\n\n#endif\n";
THREE.ShaderChunk.fog_fragment="#ifdef USE_FOG\n\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\n\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\n\n\t#else\n\n\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n\n\t#endif\n\n\t#ifdef FOG_EXP2\n\n\t\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * depth * depth * LOG2 ) );\n\n\t#else\n\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, depth );\n\n\t#endif\n\t\n\toutgoingLight = mix( outgoingLight, fogColor, fogFactor );\n\n#endif";
THREE.ShaderChunk.fog_pars_fragment="#ifdef USE_FOG\n\n\tuniform vec3 fogColor;\n\n\t#ifdef FOG_EXP2\n\n\t\tuniform float fogDensity;\n\n\t#else\n\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n\n#endif";THREE.ShaderChunk.hemilight_fragment="#if MAX_HEMI_LIGHTS > 0\n\n\tfor ( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\n\n\t\tvec3 lightDir = hemisphereLightDirection[ i ];\n\n\t\tfloat dotProduct = dot( normal, lightDir );\n\n\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\n\n\t\tvec3 lightColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\n\n\t\ttotalAmbientLight += lightColor;\n\n\t}\n\n#endif\n\n";
THREE.ShaderChunk.lightmap_fragment="#ifdef USE_LIGHTMAP\n\n\ttotalAmbientLight += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n\n#endif\n";THREE.ShaderChunk.lightmap_pars_fragment="#ifdef USE_LIGHTMAP\n\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n\n#endif";THREE.ShaderChunk.lights_lambert_pars_vertex="#if MAX_DIR_LIGHTS > 0\n\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n\n#endif\n\n#if MAX_POINT_LIGHTS > 0\n\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n\tuniform float pointLightDecay[ MAX_POINT_LIGHTS ];\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n\tuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\n\tuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\n\tuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightDecay[ MAX_SPOT_LIGHTS ];\n\n#endif\n";
THREE.ShaderChunk.lights_lambert_vertex="vLightFront = vec3( 0.0 );\n\n#ifdef DOUBLE_SIDED\n\n\tvLightBack = vec3( 0.0 );\n\n#endif\n\nvec3 normal = normalize( transformedNormal );\n\n#if MAX_POINT_LIGHTS > 0\n\n\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n\n\t\tvec3 lightColor = pointLightColor[ i ];\n\n\t\tvec3 lVector = pointLightPosition[ i ] - mvPosition.xyz;\n\t\tvec3 lightDir = normalize( lVector );\n\n\n\t\tfloat attenuation = calcLightAttenuation( length( lVector ), pointLightDistance[ i ], pointLightDecay[ i ] );\n\n\n\t\tfloat dotProduct = dot( normal, lightDir );\n\n\t\tvLightFront += lightColor * attenuation * saturate( dotProduct );\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\tvLightBack += lightColor * attenuation * saturate( - dotProduct );\n\n\t\t#endif\n\n\t}\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n\tfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\n\n\t\tvec3 lightColor = spotLightColor[ i ];\n\n\t\tvec3 lightPosition = spotLightPosition[ i ];\n\t\tvec3 lVector = lightPosition - mvPosition.xyz;\n\t\tvec3 lightDir = normalize( lVector );\n\n\t\tfloat spotEffect = dot( spotLightDirection[ i ], lightDir );\n\n\t\tif ( spotEffect > spotLightAngleCos[ i ] ) {\n\n\t\t\tspotEffect = saturate( pow( saturate( spotEffect ), spotLightExponent[ i ] ) );\n\n\n\t\t\tfloat attenuation = calcLightAttenuation( length( lVector ), spotLightDistance[ i ], spotLightDecay[ i ] );\n\n\t\t\tattenuation *= spotEffect;\n\n\n\t\t\tfloat dotProduct = dot( normal, lightDir );\n\n\t\t\tvLightFront += lightColor * attenuation * saturate( dotProduct );\n\n\t\t\t#ifdef DOUBLE_SIDED\n\n\t\t\t\tvLightBack += lightColor * attenuation * saturate( - dotProduct );\n\n\t\t\t#endif\n\n\t\t}\n\n\t}\n\n#endif\n\n#if MAX_DIR_LIGHTS > 0\n\n\tfor ( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\n\n\t\tvec3 lightColor = directionalLightColor[ i ];\n\n\t\tvec3 lightDir = directionalLightDirection[ i ];\n\n\n\t\tfloat dotProduct = dot( normal, lightDir );\n\n\t\tvLightFront += lightColor * saturate( dotProduct );\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\tvLightBack += lightColor * saturate( - dotProduct );\n\n\t\t#endif\n\n\t}\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n\tfor ( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\n\n\t\tvec3 lightDir = hemisphereLightDirection[ i ];\n\n\n\t\tfloat dotProduct = dot( normal, lightDir );\n\n\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\n\n\t\tvLightFront += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\tfloat hemiDiffuseWeightBack = - 0.5 * dotProduct + 0.5;\n\n\t\t\tvLightBack += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeightBack );\n\n\t\t#endif\n\n\t}\n\n#endif\n";
THREE.ShaderChunk.lights_phong_fragment="vec3 viewDir = normalize( vViewPosition );\n\nvec3 totalDiffuseLight = vec3( 0.0 );\nvec3 totalSpecularLight = vec3( 0.0 );\n\n#if MAX_POINT_LIGHTS > 0\n\n\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n\n\t\tvec3 lightColor = pointLightColor[ i ];\n\n\t\tvec3 lightPosition = pointLightPosition[ i ];\n\t\tvec3 lVector = lightPosition + vViewPosition.xyz;\n\t\tvec3 lightDir = normalize( lVector );\n\n\n\t\tfloat attenuation = calcLightAttenuation( length( lVector ), pointLightDistance[ i ], pointLightDecay[ i ] );\n\n\n\t\tfloat cosineTerm = saturate( dot( normal, lightDir ) );\n\n\t\ttotalDiffuseLight += lightColor * attenuation * cosineTerm;\n\n\n\t\tvec3 brdf = BRDF_BlinnPhong( specular, shininess, normal, lightDir, viewDir );\n\n\t\ttotalSpecularLight += brdf * specularStrength * lightColor * attenuation * cosineTerm;\n\n\n\t}\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n\tfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\n\n\t\tvec3 lightColor = spotLightColor[ i ];\n\n\t\tvec3 lightPosition = spotLightPosition[ i ];\n\t\tvec3 lVector = lightPosition + vViewPosition.xyz;\n\t\tvec3 lightDir = normalize( lVector );\n\n\t\tfloat spotEffect = dot( spotLightDirection[ i ], lightDir );\n\n\t\tif ( spotEffect > spotLightAngleCos[ i ] ) {\n\n\t\t\tspotEffect = saturate( pow( saturate( spotEffect ), spotLightExponent[ i ] ) );\n\n\n\t\t\tfloat attenuation = calcLightAttenuation( length( lVector ), spotLightDistance[ i ], spotLightDecay[ i ] );\n\n\t\t\tattenuation *= spotEffect;\n\n\n\t\t\tfloat cosineTerm = saturate( dot( normal, lightDir ) );\n\n\t\t\ttotalDiffuseLight += lightColor * attenuation * cosineTerm;\n\n\n\t\t\tvec3 brdf = BRDF_BlinnPhong( specular, shininess, normal, lightDir, viewDir );\n\n\t\t\ttotalSpecularLight += brdf * specularStrength * lightColor * attenuation * cosineTerm;\n\n\t\t}\n\n\t}\n\n#endif\n\n#if MAX_DIR_LIGHTS > 0\n\n\tfor ( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\n\n\t\tvec3 lightColor = directionalLightColor[ i ];\n\n\t\tvec3 lightDir = directionalLightDirection[ i ];\n\n\n\t\tfloat cosineTerm = saturate( dot( normal, lightDir ) );\n\n\t\ttotalDiffuseLight += lightColor * cosineTerm;\n\n\n\t\tvec3 brdf = BRDF_BlinnPhong( specular, shininess, normal, lightDir, viewDir );\n\n\t\ttotalSpecularLight += brdf * specularStrength * lightColor * cosineTerm;\n\n\t}\n\n#endif\n";
THREE.ShaderChunk.lights_phong_pars_fragment="uniform vec3 ambientLightColor;\n\n#if MAX_DIR_LIGHTS > 0\n\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n\n#endif\n\n#if MAX_POINT_LIGHTS > 0\n\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n\tuniform float pointLightDecay[ MAX_POINT_LIGHTS ];\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n\tuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\n\tuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\n\tuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightDecay[ MAX_SPOT_LIGHTS ];\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_ENVMAP )\n\n\tvarying vec3 vWorldPosition;\n\n#endif\n\nvarying vec3 vViewPosition;\n\n#ifndef FLAT_SHADED\n\n\tvarying vec3 vNormal;\n\n#endif\n";
THREE.ShaderChunk.lights_phong_pars_vertex="#if MAX_SPOT_LIGHTS > 0 || defined( USE_ENVMAP )\n\n\tvarying vec3 vWorldPosition;\n\n#endif\n\n#if MAX_POINT_LIGHTS > 0\n\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\n\n#endif\n";THREE.ShaderChunk.lights_phong_vertex="#if MAX_SPOT_LIGHTS > 0 || defined( USE_ENVMAP )\n\n\tvWorldPosition = worldPosition.xyz;\n\n#endif\n";THREE.ShaderChunk.linear_to_gamma_fragment="\n\toutgoingLight = linearToOutput( outgoingLight );\n";
THREE.ShaderChunk.logdepthbuf_fragment="#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\n\n\tgl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\n\n#endif";THREE.ShaderChunk.logdepthbuf_pars_fragment="#ifdef USE_LOGDEPTHBUF\n\n\tuniform float logDepthBufFC;\n\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\n\t\tvarying float vFragDepth;\n\n\t#endif\n\n#endif\n";THREE.ShaderChunk.logdepthbuf_pars_vertex="#ifdef USE_LOGDEPTHBUF\n\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\n\t\tvarying float vFragDepth;\n\n\t#endif\n\n\tuniform float logDepthBufFC;\n\n#endif";
THREE.ShaderChunk.logdepthbuf_vertex="#ifdef USE_LOGDEPTHBUF\n\n\tgl_Position.z = log2(max( EPSILON, gl_Position.w + 1.0 )) * logDepthBufFC;\n\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\n#else\n\n\t\tgl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\n\n\t#endif\n\n#endif";THREE.ShaderChunk.map_fragment="#ifdef USE_MAP\n\n\tvec4 texelColor = texture2D( map, vUv );\n\n\ttexelColor.xyz = inputToLinear( texelColor.xyz );\n\n\tdiffuseColor *= texelColor;\n\n#endif\n";
THREE.ShaderChunk.map_pars_fragment="#ifdef USE_MAP\n\n\tuniform sampler2D map;\n\n#endif";THREE.ShaderChunk.map_particle_fragment="#ifdef USE_MAP\n\n\tdiffuseColor *= texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) * offsetRepeat.zw + offsetRepeat.xy );\n\n#endif\n";THREE.ShaderChunk.map_particle_pars_fragment="#ifdef USE_MAP\n\n\tuniform vec4 offsetRepeat;\n\tuniform sampler2D map;\n\n#endif\n";THREE.ShaderChunk.morphnormal_vertex="#ifdef USE_MORPHNORMALS\n\n\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\n\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\n\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\n\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\n\n#endif\n";
THREE.ShaderChunk.morphtarget_pars_vertex="#ifdef USE_MORPHTARGETS\n\n\t#ifndef USE_MORPHNORMALS\n\n\tuniform float morphTargetInfluences[ 8 ];\n\n\t#else\n\n\tuniform float morphTargetInfluences[ 4 ];\n\n\t#endif\n\n#endif";THREE.ShaderChunk.morphtarget_vertex="#ifdef USE_MORPHTARGETS\n\n\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\n\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\n\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\n\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\n\n\t#ifndef USE_MORPHNORMALS\n\n\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\n\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\n\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\n\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\n\n\t#endif\n\n#endif\n";
THREE.ShaderChunk.normal_phong_fragment="#ifndef FLAT_SHADED\n\n\tvec3 normal = normalize( vNormal );\n\n\t#ifdef DOUBLE_SIDED\n\n\t\tnormal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\n\n\t#endif\n\n#else\n\n\tvec3 fdx = dFdx( vViewPosition );\n\tvec3 fdy = dFdy( vViewPosition );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n\n#endif\n\n#ifdef USE_NORMALMAP\n\n\tnormal = perturbNormal2Arb( -vViewPosition, normal );\n\n#elif defined( USE_BUMPMAP )\n\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n\n#endif\n\n";
THREE.ShaderChunk.normalmap_pars_fragment="#ifdef USE_NORMALMAP\n\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n\n\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\n\n\t\tvec3 q0 = dFdx( eye_pos.xyz );\n\t\tvec3 q1 = dFdy( eye_pos.xyz );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\n\t\tvec3 S = normalize( q0 * st1.t - q1 * st0.t );\n\t\tvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\n\t\tvec3 N = normalize( surf_norm );\n\n\t\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t\tmapN.xy = normalScale * mapN.xy;\n\t\tmat3 tsn = mat3( S, T, N );\n\t\treturn normalize( tsn * mapN );\n\n\t}\n\n#endif\n";
THREE.ShaderChunk.project_vertex="#ifdef USE_SKINNING\n\n\tvec4 mvPosition = modelViewMatrix * skinned;\n\n#else\n\n\tvec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\n\n#endif\n\ngl_Position = projectionMatrix * mvPosition;\n";THREE.ShaderChunk.shadowmap_fragment="#ifdef USE_SHADOWMAP\n\n\tfor ( int i = 0; i < MAX_SHADOWS; i ++ ) {\n\n\t\tfloat texelSizeY =  1.0 / shadowMapSize[ i ].y;\n\n\t\tfloat shadow = 0.0;\n\n#if defined( POINT_LIGHT_SHADOWS )\n\n\t\tbool isPointLight = shadowDarkness[ i ] < 0.0;\n\n\t\tif ( isPointLight ) {\n\n\t\t\tfloat realShadowDarkness = abs( shadowDarkness[ i ] );\n\n\t\t\tvec3 lightToPosition = vShadowCoord[ i ].xyz;\n\n\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\n\n\t\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t\tfloat dp = length( lightToPosition );\n\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D, texelSizeY ) ), shadowBias[ i ], shadow );\n\n\n\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tconst float Dr = 1.25;\n\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tconst float Dr = 2.25;\n\t#endif\n\n\t\t\tfloat os = Dr *  2.0 * texelSizeY;\n\n\t\t\tconst vec3 Gsd = vec3( - 1, 0, 1 );\n\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.zzz * os, texelSizeY ) ), shadowBias[ i ], shadow );\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.zxz * os, texelSizeY ) ), shadowBias[ i ], shadow );\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.xxz * os, texelSizeY ) ), shadowBias[ i ], shadow );\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.xzz * os, texelSizeY ) ), shadowBias[ i ], shadow );\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.zzx * os, texelSizeY ) ), shadowBias[ i ], shadow );\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.zxx * os, texelSizeY ) ), shadowBias[ i ], shadow );\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.xxx * os, texelSizeY ) ), shadowBias[ i ], shadow );\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.xzx * os, texelSizeY ) ), shadowBias[ i ], shadow );\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.zzy * os, texelSizeY ) ), shadowBias[ i ], shadow );\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.zxy * os, texelSizeY ) ), shadowBias[ i ], shadow );\n\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.xxy * os, texelSizeY ) ), shadowBias[ i ], shadow );\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.xzy * os, texelSizeY ) ), shadowBias[ i ], shadow );\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.zyz * os, texelSizeY ) ), shadowBias[ i ], shadow );\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.xyz * os, texelSizeY ) ), shadowBias[ i ], shadow );\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.zyx * os, texelSizeY ) ), shadowBias[ i ], shadow );\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.xyx * os, texelSizeY ) ), shadowBias[ i ], shadow );\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.yzz * os, texelSizeY ) ), shadowBias[ i ], shadow );\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.yxz * os, texelSizeY ) ), shadowBias[ i ], shadow );\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.yxx * os, texelSizeY ) ), shadowBias[ i ], shadow );\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.yzx * os, texelSizeY ) ), shadowBias[ i ], shadow );\n\n\t\t\tshadow *= realShadowDarkness * ( 1.0 / 21.0 );\n\n\t#else \n\t\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t\tfloat dp = length( lightToPosition );\n\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D, texelSizeY ) ), shadowBias[ i ], shadow );\n\n\t\t\tshadow *= realShadowDarkness;\n\n\t#endif\n\n\t\t} else {\n\n#endif \n\t\t\tfloat texelSizeX =  1.0 / shadowMapSize[ i ].x;\n\n\t\t\tvec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;\n\n\n\t\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\t\tbool inFrustum = all( inFrustumVec );\n\n\t\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\n\t\t\tbool frustumTest = all( frustumTestVec );\n\n\t\t\tif ( frustumTest ) {\n\n\t#if defined( SHADOWMAP_TYPE_PCF )\n\n\n\t\t\t\t/*\n\t\t\t\t\tfor ( float y = -1.25; y <= 1.25; y += 1.25 )\n\t\t\t\t\t\tfor ( float x = -1.25; x <= 1.25; x += 1.25 ) {\n\t\t\t\t\t\t\tvec4 rgbaDepth = texture2D( shadowMap[ i ], vec2( x * xPixelOffset, y * yPixelOffset ) + shadowCoord.xy );\n\t\t\t\t\t\t\tfloat fDepth = unpackDepth( rgbaDepth );\n\t\t\t\t\t\t\tif ( fDepth < shadowCoord.z )\n\t\t\t\t\t\t\t\tshadow += 1.0;\n\t\t\t\t\t}\n\t\t\t\t\tshadow /= 9.0;\n\t\t\t\t*/\n\n\t\t\t\tshadowCoord.z += shadowBias[ i ];\n\n\t\t\t\tconst float ShadowDelta = 1.0 / 9.0;\n\n\t\t\t\tfloat xPixelOffset = texelSizeX;\n\t\t\t\tfloat yPixelOffset = texelSizeY;\n\n\t\t\t\tfloat dx0 = - 1.25 * xPixelOffset;\n\t\t\t\tfloat dy0 = - 1.25 * yPixelOffset;\n\t\t\t\tfloat dx1 = 1.25 * xPixelOffset;\n\t\t\t\tfloat dy1 = 1.25 * yPixelOffset;\n\n\t\t\t\tfloat fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += ShadowDelta;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += ShadowDelta;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += ShadowDelta;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += ShadowDelta;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += ShadowDelta;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += ShadowDelta;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += ShadowDelta;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += ShadowDelta;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += ShadowDelta;\n\n\t\t\t\tshadow *= shadowDarkness[ i ];\n\n\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\n\n\t\t\t\tshadowCoord.z += shadowBias[ i ];\n\n\t\t\t\tfloat xPixelOffset = texelSizeX;\n\t\t\t\tfloat yPixelOffset = texelSizeY;\n\n\t\t\t\tfloat dx0 = - 1.0 * xPixelOffset;\n\t\t\t\tfloat dy0 = - 1.0 * yPixelOffset;\n\t\t\t\tfloat dx1 = 1.0 * xPixelOffset;\n\t\t\t\tfloat dy1 = 1.0 * yPixelOffset;\n\n\t\t\t\tmat3 shadowKernel;\n\t\t\t\tmat3 depthKernel;\n\n\t\t\t\tdepthKernel[ 0 ][ 0 ] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\n\t\t\t\tdepthKernel[ 0 ][ 1 ] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\n\t\t\t\tdepthKernel[ 0 ][ 2 ] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\n\t\t\t\tdepthKernel[ 1 ][ 0 ] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\n\t\t\t\tdepthKernel[ 1 ][ 1 ] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\n\t\t\t\tdepthKernel[ 1 ][ 2 ] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\n\t\t\t\tdepthKernel[ 2 ][ 0 ] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\n\t\t\t\tdepthKernel[ 2 ][ 1 ] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\n\t\t\t\tdepthKernel[ 2 ][ 2 ] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\n\n\t\t\t\tvec3 shadowZ = vec3( shadowCoord.z );\n\t\t\t\tshadowKernel[ 0 ] = vec3( lessThan( depthKernel[ 0 ], shadowZ ) );\n\t\t\t\tshadowKernel[ 0 ] *= vec3( 0.25 );\n\n\t\t\t\tshadowKernel[ 1 ] = vec3( lessThan( depthKernel[ 1 ], shadowZ ) );\n\t\t\t\tshadowKernel[ 1 ] *= vec3( 0.25 );\n\n\t\t\t\tshadowKernel[ 2 ] = vec3( lessThan( depthKernel[ 2 ], shadowZ ) );\n\t\t\t\tshadowKernel[ 2 ] *= vec3( 0.25 );\n\n\t\t\t\tvec2 fractionalCoord = 1.0 - fract( shadowCoord.xy * shadowMapSize[ i ].xy );\n\n\t\t\t\tshadowKernel[ 0 ] = mix( shadowKernel[ 1 ], shadowKernel[ 0 ], fractionalCoord.x );\n\t\t\t\tshadowKernel[ 1 ] = mix( shadowKernel[ 2 ], shadowKernel[ 1 ], fractionalCoord.x );\n\n\t\t\t\tvec4 shadowValues;\n\t\t\t\tshadowValues.x = mix( shadowKernel[ 0 ][ 1 ], shadowKernel[ 0 ][ 0 ], fractionalCoord.y );\n\t\t\t\tshadowValues.y = mix( shadowKernel[ 0 ][ 2 ], shadowKernel[ 0 ][ 1 ], fractionalCoord.y );\n\t\t\t\tshadowValues.z = mix( shadowKernel[ 1 ][ 1 ], shadowKernel[ 1 ][ 0 ], fractionalCoord.y );\n\t\t\t\tshadowValues.w = mix( shadowKernel[ 1 ][ 2 ], shadowKernel[ 1 ][ 1 ], fractionalCoord.y );\n\n\t\t\t\tshadow = dot( shadowValues, vec4( 1.0 ) ) * shadowDarkness[ i ];\n\n\t#else \n\t\t\t\tshadowCoord.z += shadowBias[ i ];\n\n\t\t\t\tvec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );\n\t\t\t\tfloat fDepth = unpackDepth( rgbaDepth );\n\n\t\t\t\tif ( fDepth < shadowCoord.z )\n\t\t\t\t\tshadow = shadowDarkness[ i ];\n\n\t#endif\n\n\t\t\t}\n\n#ifdef SHADOWMAP_DEBUG\n\n\t\t\tif ( inFrustum ) {\n\n\t\t\t\tif ( i == 0 ) {\n\n\t\t\t\t\toutgoingLight *= vec3( 1.0, 0.5, 0.0 );\n\n\t\t\t\t} else if ( i == 1 ) {\n\n\t\t\t\t\toutgoingLight *= vec3( 0.0, 1.0, 0.8 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\toutgoingLight *= vec3( 0.0, 0.5, 1.0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n#endif\n\n#if defined( POINT_LIGHT_SHADOWS )\n\n\t\t}\n\n#endif\n\n\t\tshadowMask = shadowMask * vec3( 1.0 - shadow );\n\n\t}\n\n#endif\n";
THREE.ShaderChunk.shadowmap_pars_fragment="#ifdef USE_SHADOWMAP\n\n\tuniform sampler2D shadowMap[ MAX_SHADOWS ];\n\tuniform vec2 shadowMapSize[ MAX_SHADOWS ];\n\n\tuniform float shadowDarkness[ MAX_SHADOWS ];\n\tuniform float shadowBias[ MAX_SHADOWS ];\n\n\tvarying vec4 vShadowCoord[ MAX_SHADOWS ];\n\n\tfloat unpackDepth( const in vec4 rgba_depth ) {\n\n\t\tconst vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\n\t\tfloat depth = dot( rgba_depth, bit_shift );\n\t\treturn depth;\n\n\t}\n\n\t#if defined(POINT_LIGHT_SHADOWS)\n\n\n\t\tvoid adjustShadowValue1K( const float testDepth, const vec4 textureData, const float bias, inout float shadowValue ) {\n\n\t\t\tconst vec4 bitSh = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\n\t\t\tif ( testDepth >= dot( textureData, bitSh ) * 1000.0 + bias )\n\t\t\t\tshadowValue += 1.0;\n\n\t\t}\n\n\n\t\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\n\n\t\t\tvec3 absV = abs( v );\n\n\n\t\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\t\tabsV *= scaleToCube;\n\n\n\t\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\n\n\n\t\t\tvec2 planar = v.xy;\n\n\t\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\t\tfloat almostOne = 1.0 - almostATexel;\n\n\t\t\tif ( absV.z >= almostOne ) {\n\n\t\t\t\tif ( v.z > 0.0 )\n\t\t\t\t\tplanar.x = 4.0 - v.x;\n\n\t\t\t} else if ( absV.x >= almostOne ) {\n\n\t\t\t\tfloat signX = sign( v.x );\n\t\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\n\t\t\t} else if ( absV.y >= almostOne ) {\n\n\t\t\t\tfloat signY = sign( v.y );\n\t\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\t\tplanar.y = v.z * signY - 2.0;\n\n\t\t\t}\n\n\n\t\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\n\t\t}\n\n\t#endif\n\n#endif\n";
THREE.ShaderChunk.shadowmap_pars_vertex="#ifdef USE_SHADOWMAP\n\n\tuniform float shadowDarkness[ MAX_SHADOWS ];\n\tuniform mat4 shadowMatrix[ MAX_SHADOWS ];\n\tvarying vec4 vShadowCoord[ MAX_SHADOWS ];\n\n#endif";THREE.ShaderChunk.shadowmap_vertex="#ifdef USE_SHADOWMAP\n\n\tfor ( int i = 0; i < MAX_SHADOWS; i ++ ) {\n\n\t\t\tvShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\n\n\t}\n\n#endif";THREE.ShaderChunk.skinbase_vertex="#ifdef USE_SKINNING\n\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n\n#endif";
THREE.ShaderChunk.skinning_pars_vertex="#ifdef USE_SKINNING\n\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\n\t#ifdef BONE_TEXTURE\n\n\t\tuniform sampler2D boneTexture;\n\t\tuniform int boneTextureWidth;\n\t\tuniform int boneTextureHeight;\n\n\t\tmat4 getBoneMatrix( const in float i ) {\n\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureWidth ) );\n\t\t\tfloat y = floor( j / float( boneTextureWidth ) );\n\n\t\t\tfloat dx = 1.0 / float( boneTextureWidth );\n\t\t\tfloat dy = 1.0 / float( boneTextureHeight );\n\n\t\t\ty = dy * ( y + 0.5 );\n\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\n\t\t\treturn bone;\n\n\t\t}\n\n\t#else\n\n\t\tuniform mat4 boneGlobalMatrices[ MAX_BONES ];\n\n\t\tmat4 getBoneMatrix( const in float i ) {\n\n\t\t\tmat4 bone = boneGlobalMatrices[ int(i) ];\n\t\t\treturn bone;\n\n\t\t}\n\n\t#endif\n\n#endif\n";
THREE.ShaderChunk.skinning_vertex="#ifdef USE_SKINNING\n\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\tskinned  = bindMatrixInverse * skinned;\n\n#endif\n";THREE.ShaderChunk.skinnormal_vertex="#ifdef USE_SKINNING\n\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\n\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\n#endif\n";
THREE.ShaderChunk.specularmap_fragment="float specularStrength;\n\n#ifdef USE_SPECULARMAP\n\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n\n#else\n\n\tspecularStrength = 1.0;\n\n#endif";THREE.ShaderChunk.specularmap_pars_fragment="#ifdef USE_SPECULARMAP\n\n\tuniform sampler2D specularMap;\n\n#endif";THREE.ShaderChunk.uv2_pars_fragment="#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\n\tvarying vec2 vUv2;\n\n#endif";
THREE.ShaderChunk.uv2_pars_vertex="#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n\n#endif";THREE.ShaderChunk.uv2_vertex="#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\n\tvUv2 = uv2;\n\n#endif";THREE.ShaderChunk.uv_pars_fragment="#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP )\n\n\tvarying vec2 vUv;\n\n#endif";
THREE.ShaderChunk.uv_pars_vertex="#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP )\n\n\tvarying vec2 vUv;\n\tuniform vec4 offsetRepeat;\n\n#endif\n";THREE.ShaderChunk.uv_vertex="#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP )\n\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\n\n#endif";
THREE.ShaderChunk.worldpos_vertex="#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\n\n\t#ifdef USE_SKINNING\n\n\t\tvec4 worldPosition = modelMatrix * skinned;\n\n\t#else\n\n\t\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\n\n\t#endif\n\n#endif\n";
THREE.UniformsUtils={merge:function(a){for(var b={},c=0;c<a.length;c++){var d=this.clone(a[c]),e;for(e in d)b[e]=d[e]}return b},clone:function(a){var b={},c;for(c in a){b[c]={};for(var d in a[c]){var e=a[c][d];b[c][d]=e instanceof THREE.Color||e instanceof THREE.Vector2||e instanceof THREE.Vector3||e instanceof THREE.Vector4||e instanceof THREE.Matrix3||e instanceof THREE.Matrix4||e instanceof THREE.Texture?e.clone():Array.isArray(e)?e.slice():e}}return b}};
THREE.UniformsLib={common:{diffuse:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:null},offsetRepeat:{type:"v4",value:new THREE.Vector4(0,0,1,1)},specularMap:{type:"t",value:null},alphaMap:{type:"t",value:null},envMap:{type:"t",value:null},flipEnvMap:{type:"f",value:-1},reflectivity:{type:"f",value:1},refractionRatio:{type:"f",value:0.98}},aomap:{aoMap:{type:"t",value:null},aoMapIntensity:{type:"f",value:1}},lightmap:{lightMap:{type:"t",value:null},lightMapIntensity:{type:"f",
value:1}},emissivemap:{emissiveMap:{type:"t",value:null}},bumpmap:{bumpMap:{type:"t",value:null},bumpScale:{type:"f",value:1}},normalmap:{normalMap:{type:"t",value:null},normalScale:{type:"v2",value:new THREE.Vector2(1,1)}},displacementmap:{displacementMap:{type:"t",value:null},displacementScale:{type:"f",value:1},displacementBias:{type:"f",value:0}},fog:{fogDensity:{type:"f",value:2.5E-4},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2E3},fogColor:{type:"c",value:new THREE.Color(16777215)}},
lights:{ambientLightColor:{type:"fv",value:[]},directionalLightDirection:{type:"fv",value:[]},directionalLightColor:{type:"fv",value:[]},hemisphereLightDirection:{type:"fv",value:[]},hemisphereLightSkyColor:{type:"fv",value:[]},hemisphereLightGroundColor:{type:"fv",value:[]},pointLightColor:{type:"fv",value:[]},pointLightPosition:{type:"fv",value:[]},pointLightDistance:{type:"fv1",value:[]},pointLightDecay:{type:"fv1",value:[]},spotLightColor:{type:"fv",value:[]},spotLightPosition:{type:"fv",value:[]},
spotLightDirection:{type:"fv",value:[]},spotLightDistance:{type:"fv1",value:[]},spotLightAngleCos:{type:"fv1",value:[]},spotLightExponent:{type:"fv1",value:[]},spotLightDecay:{type:"fv1",value:[]}},points:{psColor:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},size:{type:"f",value:1},scale:{type:"f",value:1},map:{type:"t",value:null},offsetRepeat:{type:"v4",value:new THREE.Vector4(0,0,1,1)},fogDensity:{type:"f",value:2.5E-4},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2E3},
fogColor:{type:"c",value:new THREE.Color(16777215)}},shadowmap:{shadowMap:{type:"tv",value:[]},shadowMapSize:{type:"v2v",value:[]},shadowBias:{type:"fv1",value:[]},shadowDarkness:{type:"fv1",value:[]},shadowMatrix:{type:"m4v",value:[]}}};
THREE.ShaderLib={basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.aomap,THREE.UniformsLib.fog,THREE.UniformsLib.shadowmap]),vertexShader:[THREE.ShaderChunk.common,THREE.ShaderChunk.uv_pars_vertex,THREE.ShaderChunk.uv2_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,
"void main() {",THREE.ShaderChunk.uv_vertex,THREE.ShaderChunk.uv2_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.skinbase_vertex,"\t#ifdef USE_ENVMAP",THREE.ShaderChunk.beginnormal_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,"\t#endif",THREE.ShaderChunk.begin_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.project_vertex,THREE.ShaderChunk.logdepthbuf_vertex,THREE.ShaderChunk.worldpos_vertex,
THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;",THREE.ShaderChunk.common,THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.uv_pars_fragment,THREE.ShaderChunk.uv2_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.alphamap_pars_fragment,THREE.ShaderChunk.aomap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,
THREE.ShaderChunk.specularmap_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tvec3 totalAmbientLight = vec3( 1.0 );\n\tvec3 shadowMask = vec3( 1.0 );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.alphamap_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.aomap_fragment,
THREE.ShaderChunk.shadowmap_fragment,"\toutgoingLight = diffuseColor.rgb * totalAmbientLight * shadowMask;",THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n}"].join("\n")},lambert:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{emissive:{type:"c",value:new THREE.Color(0)}}]),vertexShader:["#define LAMBERT\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n#endif",
THREE.ShaderChunk.common,THREE.ShaderChunk.uv_pars_vertex,THREE.ShaderChunk.uv2_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_lambert_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.uv_vertex,THREE.ShaderChunk.uv2_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.beginnormal_vertex,
THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,THREE.ShaderChunk.begin_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.project_vertex,THREE.ShaderChunk.logdepthbuf_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_lambert_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nuniform vec3 ambientLightColor;\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n#endif",
THREE.ShaderChunk.common,THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.uv_pars_fragment,THREE.ShaderChunk.uv2_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.alphamap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tvec3 totalAmbientLight = ambientLightColor;\n\tvec3 shadowMask = vec3( 1.0 );",
THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.alphamap_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.shadowmap_fragment,"\t#ifdef DOUBLE_SIDED\n\t\tif ( gl_FrontFacing )\n\t\t\toutgoingLight += diffuseColor.rgb * ( vLightFront * shadowMask + totalAmbientLight ) + emissive;\n\t\telse\n\t\t\toutgoingLight += diffuseColor.rgb * ( vLightBack * shadowMask + totalAmbientLight ) + emissive;\n\t#else\n\t\toutgoingLight += diffuseColor.rgb * ( vLightFront * shadowMask + totalAmbientLight ) + emissive;\n\t#endif",
THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n}"].join("\n")},phong:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.aomap,THREE.UniformsLib.lightmap,THREE.UniformsLib.emissivemap,THREE.UniformsLib.bumpmap,THREE.UniformsLib.normalmap,THREE.UniformsLib.displacementmap,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{emissive:{type:"c",
value:new THREE.Color(0)},specular:{type:"c",value:new THREE.Color(1118481)},shininess:{type:"f",value:30}}]),vertexShader:["#define PHONG\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif",THREE.ShaderChunk.common,THREE.ShaderChunk.uv_pars_vertex,THREE.ShaderChunk.uv2_pars_vertex,THREE.ShaderChunk.displacementmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_phong_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,
THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.uv_vertex,THREE.ShaderChunk.uv2_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.beginnormal_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,"#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif",THREE.ShaderChunk.begin_vertex,
THREE.ShaderChunk.displacementmap_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.project_vertex,THREE.ShaderChunk.logdepthbuf_vertex,"\tvViewPosition = - mvPosition.xyz;",THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_phong_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;",
THREE.ShaderChunk.common,THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.uv_pars_fragment,THREE.ShaderChunk.uv2_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.alphamap_pars_fragment,THREE.ShaderChunk.aomap_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.emissivemap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.lights_phong_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.bumpmap_pars_fragment,
THREE.ShaderChunk.normalmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tvec3 totalAmbientLight = ambientLightColor;\n\tvec3 totalEmissiveLight = emissive;\n\tvec3 shadowMask = vec3( 1.0 );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.alphamap_fragment,THREE.ShaderChunk.alphatest_fragment,
THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.normal_phong_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.hemilight_fragment,THREE.ShaderChunk.aomap_fragment,THREE.ShaderChunk.emissivemap_fragment,THREE.ShaderChunk.lights_phong_fragment,THREE.ShaderChunk.shadowmap_fragment,"totalDiffuseLight *= shadowMask;\ntotalSpecularLight *= shadowMask;\n#ifdef METAL\n\toutgoingLight += diffuseColor.rgb * ( totalDiffuseLight + totalAmbientLight ) * specular + totalSpecularLight + totalEmissiveLight;\n#else\n\toutgoingLight += diffuseColor.rgb * ( totalDiffuseLight + totalAmbientLight ) + totalSpecularLight + totalEmissiveLight;\n#endif",
THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n}"].join("\n")},points:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.points,THREE.UniformsLib.shadowmap]),vertexShader:["uniform float size;\nuniform float scale;",THREE.ShaderChunk.common,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,
"\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n\t#ifdef USE_SIZEATTENUATION\n\t\tgl_PointSize = size * ( scale / length( mvPosition.xyz ) );\n\t#else\n\t\tgl_PointSize = size;\n\t#endif\n\tgl_Position = projectionMatrix * mvPosition;",THREE.ShaderChunk.logdepthbuf_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 psColor;\nuniform float opacity;",THREE.ShaderChunk.common,THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_particle_pars_fragment,
THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( psColor, opacity );\n\tvec3 shadowMask = vec3( 1.0 );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.map_particle_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.shadowmap_fragment,"\toutgoingLight = diffuseColor.rgb * shadowMask;",THREE.ShaderChunk.fog_fragment,
"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n}"].join("\n")},dashed:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,{scale:{type:"f",value:1},dashSize:{type:"f",value:1},totalSize:{type:"f",value:2}}]),vertexShader:["uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;",THREE.ShaderChunk.common,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"\tvLineDistance = scale * lineDistance;\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n\tgl_Position = projectionMatrix * mvPosition;",
THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;",THREE.ShaderChunk.common,THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );",
THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.color_fragment,"\toutgoingLight = diffuseColor.rgb;",THREE.ShaderChunk.fog_fragment,"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n}"].join("\n")},depth:{uniforms:{mNear:{type:"f",value:1},mFar:{type:"f",value:2E3},opacity:{type:"f",value:1}},vertexShader:[THREE.ShaderChunk.common,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.begin_vertex,THREE.ShaderChunk.morphtarget_vertex,
THREE.ShaderChunk.project_vertex,THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform float mNear;\nuniform float mFar;\nuniform float opacity;",THREE.ShaderChunk.common,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {",THREE.ShaderChunk.logdepthbuf_fragment,"\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\n\t#else\n\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n\t#endif\n\tfloat color = 1.0 - smoothstep( mNear, mFar, depth );\n\tgl_FragColor = vec4( vec3( color ), opacity );\n}"].join("\n")},
normal:{uniforms:{opacity:{type:"f",value:1}},vertexShader:["varying vec3 vNormal;",THREE.ShaderChunk.common,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {\n\tvNormal = normalize( normalMatrix * normal );",THREE.ShaderChunk.begin_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.project_vertex,THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform float opacity;\nvarying vec3 vNormal;",THREE.ShaderChunk.common,
THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {\n\tgl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );",THREE.ShaderChunk.logdepthbuf_fragment,"}"].join("\n")},cube:{uniforms:{tCube:{type:"t",value:null},tFlip:{type:"f",value:-1}},vertexShader:["varying vec3 vWorldPosition;",THREE.ShaderChunk.common,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {\n\tvWorldPosition = transformDirection( position, modelMatrix );\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );",
THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform samplerCube tCube;\nuniform float tFlip;\nvarying vec3 vWorldPosition;",THREE.ShaderChunk.common,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {\n\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );",THREE.ShaderChunk.logdepthbuf_fragment,"}"].join("\n")},equirect:{uniforms:{tEquirect:{type:"t",value:null},tFlip:{type:"f",value:-1}},vertexShader:["varying vec3 vWorldPosition;",
THREE.ShaderChunk.common,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {\n\tvWorldPosition = transformDirection( position, modelMatrix );\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );",THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform sampler2D tEquirect;\nuniform float tFlip;\nvarying vec3 vWorldPosition;",THREE.ShaderChunk.common,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {\nvec3 direction = normalize( vWorldPosition );\nvec2 sampleUV;\nsampleUV.y = saturate( tFlip * direction.y * -0.5 + 0.5 );\nsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\ngl_FragColor = texture2D( tEquirect, sampleUV );",
THREE.ShaderChunk.logdepthbuf_fragment,"}"].join("\n")},depthRGBA:{uniforms:{},vertexShader:[THREE.ShaderChunk.common,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.begin_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.project_vertex,THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:[THREE.ShaderChunk.common,
THREE.ShaderChunk.logdepthbuf_pars_fragment,"vec4 pack_depth( const in float depth ) {\n\tconst vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\n\tconst vec4 bit_mask = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\n\tvec4 res = mod( depth * bit_shift * vec4( 255 ), vec4( 256 ) ) / vec4( 255 );\n\tres -= res.xxyz * bit_mask;\n\treturn res;\n}\nvoid main() {",THREE.ShaderChunk.logdepthbuf_fragment,"\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tgl_FragData[ 0 ] = pack_depth( gl_FragDepthEXT );\n\t#else\n\t\tgl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );\n\t#endif\n}"].join("\n")},
distanceRGBA:{uniforms:{lightPos:{type:"v3",value:new THREE.Vector3(0,0,0)}},vertexShader:["varying vec4 vWorldPosition;",THREE.ShaderChunk.common,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.begin_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.project_vertex,THREE.ShaderChunk.worldpos_vertex,"vWorldPosition = worldPosition;\n}"].join("\n"),fragmentShader:["uniform vec3 lightPos;\nvarying vec4 vWorldPosition;",
THREE.ShaderChunk.common,"vec4 pack1K ( float depth ) {\n   depth /= 1000.0;\n   const vec4 bitSh = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\n\tconst vec4 bitMsk = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\n\tvec4 res = fract( depth * bitSh );\n\tres -= res.xxyz * bitMsk;\n\treturn res; \n}\nfloat unpack1K ( vec4 color ) {\n\tconst vec4 bitSh = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\n\treturn dot( color, bitSh ) * 1000.0;\n}\nvoid main () {\n\tgl_FragColor = pack1K( length( vWorldPosition.xyz - lightPos.xyz ) );\n}"].join("\n")}};
THREE.WebGLRenderer=function(a){function b(a,b,c,d){if(E===true){a=a*d;b=b*d;c=c*d}o.clearColor(a,b,c,d)}function c(){G.init();o.viewport(R,ka,va,ya);b(S.r,S.g,S.b,ja)}function d(){Z=fa=null;la="";ma=-1;wa=true;G.reset()}function e(a){a.preventDefault();d();c();V.clear()}function g(a){a=a.target;a.removeEventListener("dispose",g);a:{var b=V.get(a);if(a.image&&b.__image__webglTextureCube)o.deleteTexture(b.__image__webglTextureCube);else{if(b.__webglInit===void 0)break a;o.deleteTexture(b.__webglTexture)}V.delete(a)}xa.textures--}
function f(a){a=a.target;a.removeEventListener("dispose",f);var b=V.get(a),c=V.get(a.texture);if(a&&c.__webglTexture!==void 0){o.deleteTexture(c.__webglTexture);if(a instanceof THREE.WebGLRenderTargetCube)for(c=0;c<6;c++){o.deleteFramebuffer(b.__webglFramebuffer[c]);o.deleteRenderbuffer(b.__webglRenderbuffer[c])}else{o.deleteFramebuffer(b.__webglFramebuffer);o.deleteRenderbuffer(b.__webglRenderbuffer)}V.delete(a.texture);V.delete(a)}xa.textures--}function h(a){a=a.target;a.removeEventListener("dispose",
h);j(a);V.delete(a)}function j(a){var b=V.get(a).program;a.program=void 0;b!==void 0&&za.releaseProgram(b)}function i(a,b){return b[0]-a[0]}function k(a,b){return a.object.renderOrder!==b.object.renderOrder?a.object.renderOrder-b.object.renderOrder:a.material.id!==b.material.id?a.material.id-b.material.id:a.z!==b.z?a.z-b.z:a.id-b.id}function m(a,b){return a.object.renderOrder!==b.object.renderOrder?a.object.renderOrder-b.object.renderOrder:a.z!==b.z?b.z-a.z:a.id-b.id}function l(a,b,c,d,e){var f;if(c.transparent){d=
ha;f=++pa}else{d=ca;f=++Y}f=d[f];if(f!==void 0){f.id=a.id;f.object=a;f.geometry=b;f.material=c;f.z=T.z;f.group=e}else{f={id:a.id,object:a,geometry:b,material:c,z:T.z,group:e};d.push(f)}}function n(a,b){if(a.visible!==false){if((a.channels.mask&b.channels.mask)!==0)if(a instanceof THREE.Light)ra.push(a);else if(a instanceof THREE.Sprite)X.push(a);else if(a instanceof THREE.LensFlare)na.push(a);else if(a instanceof THREE.ImmediateRenderObject){if(aa.sortObjects===true){T.setFromMatrixPosition(a.matrixWorld);
T.applyProjection(Aa)}l(a,null,a.material,T.z,null)}else if(a instanceof THREE.Mesh||a instanceof THREE.Line||a instanceof THREE.Points){a instanceof THREE.SkinnedMesh&&a.skeleton.update();if(a.frustumCulled===false||Da.intersectsObject(a)===true){var c=a.material;if(c.visible===true){if(aa.sortObjects===true){T.setFromMatrixPosition(a.matrixWorld);T.applyProjection(Aa)}var d=Ea.update(a);if(c instanceof THREE.MeshFaceMaterial)for(var e=d.groups,f=c.materials,c=0,g=e.length;c<g;c++){var h=e[c],j=
f[h.materialIndex];j.visible===true&&l(a,d,j,T.z,h)}else l(a,d,c,T.z,null)}}}d=a.children;c=0;for(g=d.length;c<g;c++)n(d[c],b)}}function p(a,b,c,d,e){for(var f=0,g=a.length;f<g;f++){var h=a[f],j=h.object,i=h.geometry,l=e===void 0?h.material:e,h=h.group;j.modelViewMatrix.multiplyMatrices(b.matrixWorldInverse,j.matrixWorld);j.normalMatrix.getNormalMatrix(j.modelViewMatrix);if(j instanceof THREE.ImmediateRenderObject){r(l);var k=s(b,c,d,l,j);la="";j.render(function(a){aa.renderBufferImmediate(a,k,l)})}else aa.renderBufferDirect(b,
c,d,i,l,j,h)}}function r(a){a.side!==THREE.DoubleSide?G.enable(o.CULL_FACE):G.disable(o.CULL_FACE);G.setFlipSided(a.side===THREE.BackSide);a.transparent===true?G.setBlending(a.blending,a.blendEquation,a.blendSrc,a.blendDst,a.blendEquationAlpha,a.blendSrcAlpha,a.blendDstAlpha):G.setBlending(THREE.NoBlending);G.setDepthFunc(a.depthFunc);G.setDepthTest(a.depthTest);G.setDepthWrite(a.depthWrite);G.setColorWrite(a.colorWrite);G.setPolygonOffset(a.polygonOffset,a.polygonOffsetFactor,a.polygonOffsetUnits)}
function s(a,b,c,d,e){da=0;var f=V.get(d);if(d.needsUpdate||!f.program){a:{var g=V.get(d),i=za.getParameters(d,b,c,e),l=za.getProgramCode(d,i),k=g.program,n=true;if(k===void 0)d.addEventListener("dispose",h);else if(k.code!==l)j(d);else if(i.shaderID!==void 0)break a;else n=false;if(n){if(i.shaderID){k=THREE.ShaderLib[i.shaderID];g.__webglShader={name:d.type,uniforms:THREE.UniformsUtils.clone(k.uniforms),vertexShader:k.vertexShader,fragmentShader:k.fragmentShader}}else g.__webglShader={name:d.type,
uniforms:d.uniforms,vertexShader:d.vertexShader,fragmentShader:d.fragmentShader};d.__webglShader=g.__webglShader;k=za.acquireProgram(d,i,l);g.program=k;d.program=k}i=k.getAttributes();if(d.morphTargets)for(l=d.numSupportedMorphTargets=0;l<aa.maxMorphTargets;l++)i["morphTarget"+l]>=0&&d.numSupportedMorphTargets++;if(d.morphNormals)for(l=d.numSupportedMorphNormals=0;l<aa.maxMorphNormals;l++)i["morphNormal"+l]>=0&&d.numSupportedMorphNormals++;g.uniformsList=[];var i=g.program.getUniforms(),m;for(m in g.__webglShader.uniforms)(l=
i[m])&&g.uniformsList.push([g.__webglShader.uniforms[m],l])}d.needsUpdate=false}l=k=n=false;g=f.program;m=g.getUniforms();i=f.__webglShader.uniforms;if(g.id!==fa){o.useProgram(g.program);fa=g.id;l=k=n=true}if(d.id!==ma){ma===-1&&(l=true);ma=d.id;k=true}if(n||a!==Z){o.uniformMatrix4fv(m.projectionMatrix,false,a.projectionMatrix.elements);sa.logarithmicDepthBuffer&&o.uniform1f(m.logDepthBufFC,2/(Math.log(a.far+1)/Math.LN2));a!==Z&&(Z=a);if((d instanceof THREE.ShaderMaterial||d instanceof THREE.MeshPhongMaterial||
d.envMap)&&m.cameraPosition!==void 0){T.setFromMatrixPosition(a.matrixWorld);o.uniform3f(m.cameraPosition,T.x,T.y,T.z)}(d instanceof THREE.MeshPhongMaterial||d instanceof THREE.MeshLambertMaterial||d instanceof THREE.MeshBasicMaterial||d instanceof THREE.ShaderMaterial||d.skinning)&&m.viewMatrix!==void 0&&o.uniformMatrix4fv(m.viewMatrix,false,a.matrixWorldInverse.elements)}if(d.skinning){e.bindMatrix&&m.bindMatrix!==void 0&&o.uniformMatrix4fv(m.bindMatrix,false,e.bindMatrix.elements);e.bindMatrixInverse&&
m.bindMatrixInverse!==void 0&&o.uniformMatrix4fv(m.bindMatrixInverse,false,e.bindMatrixInverse.elements);if(sa.floatVertexTextures&&e.skeleton&&e.skeleton.useVertexTexture){if(m.boneTexture!==void 0){n=u();o.uniform1i(m.boneTexture,n);aa.setTexture(e.skeleton.boneTexture,n)}m.boneTextureWidth!==void 0&&o.uniform1i(m.boneTextureWidth,e.skeleton.boneTextureWidth);m.boneTextureHeight!==void 0&&o.uniform1i(m.boneTextureHeight,e.skeleton.boneTextureHeight)}else e.skeleton&&e.skeleton.boneMatrices&&m.boneGlobalMatrices!==
void 0&&o.uniformMatrix4fv(m.boneGlobalMatrices,false,e.skeleton.boneMatrices)}if(k){if(c&&d.fog){i.fogColor.value=c.color;if(c instanceof THREE.Fog){i.fogNear.value=c.near;i.fogFar.value=c.far}else if(c instanceof THREE.FogExp2)i.fogDensity.value=c.density}if(d instanceof THREE.MeshPhongMaterial||d instanceof THREE.MeshLambertMaterial||d.lights){if(wa){for(var l=true,p,r=n=0,t=0,s,F,y,v=Ca,z=a.matrixWorldInverse,D=v.directional.colors,B=v.directional.positions,C=v.point.colors,H=v.point.positions,
E=v.point.distances,K=v.point.decays,L=v.spot.colors,J=v.spot.positions,G=v.spot.distances,O=v.spot.directions,Q=v.spot.anglesCos,M=v.spot.exponents,ra=v.spot.decays,Y=v.hemi.skyColors,P=v.hemi.groundColors,ha=v.hemi.positions,ca=0,U=0,S=0,X=0,ta=0,na=0,pa=0,W=0,R=p=0,c=y=R=0,k=b.length;c<k;c++){p=b[c];s=p.color;F=p.intensity;y=p.distance;if(p instanceof THREE.AmbientLight){if(p.visible){n=n+s.r;r=r+s.g;t=t+s.b}}else if(p instanceof THREE.DirectionalLight){ta=ta+1;if(p.visible){ba.setFromMatrixPosition(p.matrixWorld);
T.setFromMatrixPosition(p.target.matrixWorld);ba.sub(T);ba.transformDirection(z);p=ca*3;B[p+0]=ba.x;B[p+1]=ba.y;B[p+2]=ba.z;A(D,p,s,F);ca=ca+1}}else if(p instanceof THREE.PointLight){na=na+1;if(p.visible){R=U*3;A(C,R,s,F);T.setFromMatrixPosition(p.matrixWorld);T.applyMatrix4(z);H[R+0]=T.x;H[R+1]=T.y;H[R+2]=T.z;E[U]=y;K[U]=p.distance===0?0:p.decay;U=U+1}}else if(p instanceof THREE.SpotLight){pa=pa+1;if(p.visible){R=S*3;A(L,R,s,F);ba.setFromMatrixPosition(p.matrixWorld);T.copy(ba).applyMatrix4(z);J[R+
0]=T.x;J[R+1]=T.y;J[R+2]=T.z;G[S]=y;T.setFromMatrixPosition(p.target.matrixWorld);ba.sub(T);ba.transformDirection(z);O[R+0]=ba.x;O[R+1]=ba.y;O[R+2]=ba.z;Q[S]=Math.cos(p.angle);M[S]=p.exponent;ra[S]=p.distance===0?0:p.decay;S=S+1}}else if(p instanceof THREE.HemisphereLight){W=W+1;if(p.visible){ba.setFromMatrixPosition(p.matrixWorld);ba.transformDirection(z);y=X*3;ha[y+0]=ba.x;ha[y+1]=ba.y;ha[y+2]=ba.z;s=p.color;p=p.groundColor;A(Y,y,s,F);A(P,y,p,F);X=X+1}}}c=ca*3;for(k=Math.max(D.length,ta*3);c<k;c++)D[c]=
0;c=U*3;for(k=Math.max(C.length,na*3);c<k;c++)C[c]=0;c=S*3;for(k=Math.max(L.length,pa*3);c<k;c++)L[c]=0;c=X*3;for(k=Math.max(Y.length,W*3);c<k;c++)Y[c]=0;c=X*3;for(k=Math.max(P.length,W*3);c<k;c++)P[c]=0;v.directional.length=ca;v.point.length=U;v.spot.length=S;v.hemi.length=X;v.ambient[0]=n;v.ambient[1]=r;v.ambient[2]=t;wa=false}if(l){l=Ca;i.ambientLightColor.value=l.ambient;i.directionalLightColor.value=l.directional.colors;i.directionalLightDirection.value=l.directional.positions;i.pointLightColor.value=
l.point.colors;i.pointLightPosition.value=l.point.positions;i.pointLightDistance.value=l.point.distances;i.pointLightDecay.value=l.point.decays;i.spotLightColor.value=l.spot.colors;i.spotLightPosition.value=l.spot.positions;i.spotLightDistance.value=l.spot.distances;i.spotLightDirection.value=l.spot.directions;i.spotLightAngleCos.value=l.spot.anglesCos;i.spotLightExponent.value=l.spot.exponents;i.spotLightDecay.value=l.spot.decays;i.hemisphereLightSkyColor.value=l.hemi.skyColors;i.hemisphereLightGroundColor.value=
l.hemi.groundColors;i.hemisphereLightDirection.value=l.hemi.positions;q(i,true)}else q(i,false)}if(d instanceof THREE.MeshBasicMaterial||d instanceof THREE.MeshLambertMaterial||d instanceof THREE.MeshPhongMaterial){i.opacity.value=d.opacity;i.diffuse.value=d.color;if(d.emissive)i.emissive.value=d.emissive;i.map.value=d.map;i.specularMap.value=d.specularMap;i.alphaMap.value=d.alphaMap;if(d.aoMap){i.aoMap.value=d.aoMap;i.aoMapIntensity.value=d.aoMapIntensity}var N;if(d.map)N=d.map;else if(d.specularMap)N=
d.specularMap;else if(d.displacementMap)N=d.displacementMap;else if(d.normalMap)N=d.normalMap;else if(d.bumpMap)N=d.bumpMap;else if(d.alphaMap)N=d.alphaMap;else if(d.emissiveMap)N=d.emissiveMap;if(N!==void 0){if(N instanceof THREE.WebGLRenderTarget)N=N.texture;l=N.offset;N=N.repeat;i.offsetRepeat.value.set(l.x,l.y,N.x,N.y)}i.envMap.value=d.envMap;i.flipEnvMap.value=d.envMap instanceof THREE.WebGLRenderTargetCube?1:-1;i.reflectivity.value=d.reflectivity;i.refractionRatio.value=d.refractionRatio}if(d instanceof
THREE.LineBasicMaterial){i.diffuse.value=d.color;i.opacity.value=d.opacity}else if(d instanceof THREE.LineDashedMaterial){i.diffuse.value=d.color;i.opacity.value=d.opacity;i.dashSize.value=d.dashSize;i.totalSize.value=d.dashSize+d.gapSize;i.scale.value=d.scale}else if(d instanceof THREE.PointsMaterial){i.psColor.value=d.color;i.opacity.value=d.opacity;i.size.value=d.size;i.scale.value=I.height/2;i.map.value=d.map;if(d.map!==null){a=d.map.offset;N=d.map.repeat;i.offsetRepeat.value.set(a.x,a.y,N.x,
N.y)}}else if(d instanceof THREE.MeshPhongMaterial){i.specular.value=d.specular;i.shininess.value=Math.max(d.shininess,1.0E-4);if(d.lightMap){i.lightMap.value=d.lightMap;i.lightMapIntensity.value=d.lightMapIntensity}if(d.emissiveMap)i.emissiveMap.value=d.emissiveMap;if(d.bumpMap){i.bumpMap.value=d.bumpMap;i.bumpScale.value=d.bumpScale}if(d.normalMap){i.normalMap.value=d.normalMap;i.normalScale.value.copy(d.normalScale)}if(d.displacementMap){i.displacementMap.value=d.displacementMap;i.displacementScale.value=
d.displacementScale;i.displacementBias.value=d.displacementBias}}else if(d instanceof THREE.MeshDepthMaterial){i.mNear.value=a.near;i.mFar.value=a.far;i.opacity.value=d.opacity}else if(d instanceof THREE.MeshNormalMaterial)i.opacity.value=d.opacity;if(e.receiveShadow&&!d._shadowPass&&i.shadowMatrix){a=d=0;for(N=b.length;a<N;a++){l=b[a];if(l.castShadow===true&&(l instanceof THREE.PointLight||l instanceof THREE.SpotLight||l instanceof THREE.DirectionalLight)){c=l.shadow;if(l instanceof THREE.PointLight){T.setFromMatrixPosition(l.matrixWorld).negate();
c.matrix.identity().setPosition(T);i.shadowDarkness.value[d]=-c.darkness}else i.shadowDarkness.value[d]=c.darkness;i.shadowMatrix.value[d]=c.matrix;i.shadowMap.value[d]=c.map;i.shadowMapSize.value[d]=c.mapSize;i.shadowBias.value[d]=c.bias;d++}}}b=f.uniformsList;f=0;for(d=b.length;f<d;f++){a=b[f][0];if(a.needsUpdate!==false){i=a.type;c=a.value;N=b[f][1];switch(i){case "1i":o.uniform1i(N,c);break;case "1f":o.uniform1f(N,c);break;case "2f":o.uniform2f(N,c[0],c[1]);break;case "3f":o.uniform3f(N,c[0],
c[1],c[2]);break;case "4f":o.uniform4f(N,c[0],c[1],c[2],c[3]);break;case "1iv":o.uniform1iv(N,c);break;case "3iv":o.uniform3iv(N,c);break;case "1fv":o.uniform1fv(N,c);break;case "2fv":o.uniform2fv(N,c);break;case "3fv":o.uniform3fv(N,c);break;case "4fv":o.uniform4fv(N,c);break;case "Matrix3fv":o.uniformMatrix3fv(N,false,c);break;case "Matrix4fv":o.uniformMatrix4fv(N,false,c);break;case "i":o.uniform1i(N,c);break;case "f":o.uniform1f(N,c);break;case "v2":o.uniform2f(N,c.x,c.y);break;case "v3":o.uniform3f(N,
c.x,c.y,c.z);break;case "v4":o.uniform4f(N,c.x,c.y,c.z,c.w);break;case "c":o.uniform3f(N,c.r,c.g,c.b);break;case "iv1":o.uniform1iv(N,c);break;case "iv":o.uniform3iv(N,c);break;case "fv1":o.uniform1fv(N,c);break;case "fv":o.uniform3fv(N,c);break;case "v2v":if(a._array===void 0)a._array=new Float32Array(2*c.length);k=i=0;for(l=c.length;i<l;i++,k=k+2){a._array[k+0]=c[i].x;a._array[k+1]=c[i].y}o.uniform2fv(N,a._array);break;case "v3v":if(a._array===void 0)a._array=new Float32Array(3*c.length);k=i=0;
for(l=c.length;i<l;i++,k=k+3){a._array[k+0]=c[i].x;a._array[k+1]=c[i].y;a._array[k+2]=c[i].z}o.uniform3fv(N,a._array);break;case "v4v":if(a._array===void 0)a._array=new Float32Array(4*c.length);k=i=0;for(l=c.length;i<l;i++,k=k+4){a._array[k+0]=c[i].x;a._array[k+1]=c[i].y;a._array[k+2]=c[i].z;a._array[k+3]=c[i].w}o.uniform4fv(N,a._array);break;case "m3":o.uniformMatrix3fv(N,false,c.elements);break;case "m3v":if(a._array===void 0)a._array=new Float32Array(9*c.length);i=0;for(l=c.length;i<l;i++)c[i].flattenToArrayOffset(a._array,
i*9);o.uniformMatrix3fv(N,false,a._array);break;case "m4":o.uniformMatrix4fv(N,false,c.elements);break;case "m4v":if(a._array===void 0)a._array=new Float32Array(16*c.length);i=0;for(l=c.length;i<l;i++)c[i].flattenToArrayOffset(a._array,i*16);o.uniformMatrix4fv(N,false,a._array);break;case "t":k=u();o.uniform1i(N,k);if(!c)continue;c instanceof THREE.CubeTexture||Array.isArray(c.image)&&c.image.length===6?w(c,k):c instanceof THREE.WebGLRenderTargetCube?x(c.texture,k):c instanceof THREE.WebGLRenderTarget?
aa.setTexture(c.texture,k):aa.setTexture(c,k);break;case "tv":if(a._array===void 0)a._array=[];i=0;for(l=a.value.length;i<l;i++)a._array[i]=u();o.uniform1iv(N,a._array);i=0;for(l=a.value.length;i<l;i++){c=a.value[i];k=a._array[i];c&&(c instanceof THREE.CubeTexture||c.image instanceof Array&&c.image.length===6?w(c,k):c instanceof THREE.WebGLRenderTarget?aa.setTexture(c.texture,k):c instanceof THREE.WebGLRenderTargetCube?x(c.texture,k):aa.setTexture(c,k))}break;default:console.warn("THREE.WebGLRenderer: Unknown uniform type: "+
i)}}}}o.uniformMatrix4fv(m.modelViewMatrix,false,e.modelViewMatrix.elements);m.normalMatrix&&o.uniformMatrix3fv(m.normalMatrix,false,e.normalMatrix.elements);m.modelMatrix!==void 0&&o.uniformMatrix4fv(m.modelMatrix,false,e.matrixWorld.elements);return g}function q(a,b){a.ambientLightColor.needsUpdate=b;a.directionalLightColor.needsUpdate=b;a.directionalLightDirection.needsUpdate=b;a.pointLightColor.needsUpdate=b;a.pointLightPosition.needsUpdate=b;a.pointLightDistance.needsUpdate=b;a.pointLightDecay.needsUpdate=
b;a.spotLightColor.needsUpdate=b;a.spotLightPosition.needsUpdate=b;a.spotLightDistance.needsUpdate=b;a.spotLightDirection.needsUpdate=b;a.spotLightAngleCos.needsUpdate=b;a.spotLightExponent.needsUpdate=b;a.spotLightDecay.needsUpdate=b;a.hemisphereLightSkyColor.needsUpdate=b;a.hemisphereLightGroundColor.needsUpdate=b;a.hemisphereLightDirection.needsUpdate=b}function u(){var a=da;a>=sa.maxTextures&&console.warn("WebGLRenderer: trying to use "+a+" texture units while this GPU supports only "+sa.maxTextures);
da=da+1;return a}function A(a,b,c,d){a[b+0]=c.r*d;a[b+1]=c.g*d;a[b+2]=c.b*d}function t(a,b,c){if(c){o.texParameteri(a,o.TEXTURE_WRAP_S,J(b.wrapS));o.texParameteri(a,o.TEXTURE_WRAP_T,J(b.wrapT));o.texParameteri(a,o.TEXTURE_MAG_FILTER,J(b.magFilter));o.texParameteri(a,o.TEXTURE_MIN_FILTER,J(b.minFilter))}else{o.texParameteri(a,o.TEXTURE_WRAP_S,o.CLAMP_TO_EDGE);o.texParameteri(a,o.TEXTURE_WRAP_T,o.CLAMP_TO_EDGE);(b.wrapS!==THREE.ClampToEdgeWrapping||b.wrapT!==THREE.ClampToEdgeWrapping)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.",
b);o.texParameteri(a,o.TEXTURE_MAG_FILTER,C(b.magFilter));o.texParameteri(a,o.TEXTURE_MIN_FILTER,C(b.minFilter));b.minFilter!==THREE.NearestFilter&&b.minFilter!==THREE.LinearFilter&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.",b)}if((c=P.get("EXT_texture_filter_anisotropic"))&&!(b.type===THREE.FloatType&&P.get("OES_texture_float_linear")===null)&&!(b.type===THREE.HalfFloatType&&P.get("OES_texture_half_float_linear")===
null)&&(b.anisotropy>1||V.get(b).__currentAnisotropy)){o.texParameterf(a,c.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(b.anisotropy,aa.getMaxAnisotropy()));V.get(b).__currentAnisotropy=b.anisotropy}}function y(a,b){if(a.width>b||a.height>b){var c=b/Math.max(a.width,a.height),d=document.createElement("canvas");d.width=Math.floor(a.width*c);d.height=Math.floor(a.height*c);d.getContext("2d").drawImage(a,0,0,a.width,a.height,0,0,d.width,d.height);console.warn("THREE.WebGLRenderer: image is too big ("+a.width+
"x"+a.height+"). Resized to "+d.width+"x"+d.height,a);return d}return a}function v(a){return THREE.Math.isPowerOfTwo(a.width)&&THREE.Math.isPowerOfTwo(a.height)}function w(a,b){var c=V.get(a);if(a.image.length===6)if(a.version>0&&c.__version!==a.version){if(!c.__image__webglTextureCube){a.addEventListener("dispose",g);c.__image__webglTextureCube=o.createTexture();xa.textures++}G.activeTexture(o.TEXTURE0+b);G.bindTexture(o.TEXTURE_CUBE_MAP,c.__image__webglTextureCube);o.pixelStorei(o.UNPACK_FLIP_Y_WEBGL,
a.flipY);for(var d=a instanceof THREE.CompressedTexture,e=a.image[0]instanceof THREE.DataTexture,f=[],h=0;h<6;h++)f[h]=aa.autoScaleCubemaps&&!d&&!e?y(a.image[h],sa.maxCubemapSize):e?a.image[h].image:a.image[h];var i=v(f[0]),j=J(a.format),l=J(a.type);t(o.TEXTURE_CUBE_MAP,a,i);for(h=0;h<6;h++)if(d)for(var k,n=f[h].mipmaps,m=0,p=n.length;m<p;m++){k=n[m];a.format!==THREE.RGBAFormat&&a.format!==THREE.RGBFormat?G.getCompressedTextureFormats().indexOf(j)>-1?G.compressedTexImage2D(o.TEXTURE_CUBE_MAP_POSITIVE_X+
h,m,j,k.width,k.height,0,k.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setCubeTexture()"):G.texImage2D(o.TEXTURE_CUBE_MAP_POSITIVE_X+h,m,j,k.width,k.height,0,j,l,k.data)}else e?G.texImage2D(o.TEXTURE_CUBE_MAP_POSITIVE_X+h,0,j,f[h].width,f[h].height,0,j,l,f[h].data):G.texImage2D(o.TEXTURE_CUBE_MAP_POSITIVE_X+h,0,j,j,l,f[h]);a.generateMipmaps&&i&&o.generateMipmap(o.TEXTURE_CUBE_MAP);c.__version=a.version;if(a.onUpdate)a.onUpdate(a)}else{G.activeTexture(o.TEXTURE0+
b);G.bindTexture(o.TEXTURE_CUBE_MAP,c.__image__webglTextureCube)}}function x(a,b){G.activeTexture(o.TEXTURE0+b);G.bindTexture(o.TEXTURE_CUBE_MAP,V.get(a).__webglTexture)}function K(a,b,c){o.bindFramebuffer(o.FRAMEBUFFER,a);o.framebufferTexture2D(o.FRAMEBUFFER,o.COLOR_ATTACHMENT0,c,V.get(b.texture).__webglTexture,0)}function F(a,b){o.bindRenderbuffer(o.RENDERBUFFER,a);if(b.depthBuffer&&!b.stencilBuffer){o.renderbufferStorage(o.RENDERBUFFER,o.DEPTH_COMPONENT16,b.width,b.height);o.framebufferRenderbuffer(o.FRAMEBUFFER,
o.DEPTH_ATTACHMENT,o.RENDERBUFFER,a)}else if(b.depthBuffer&&b.stencilBuffer){o.renderbufferStorage(o.RENDERBUFFER,o.DEPTH_STENCIL,b.width,b.height);o.framebufferRenderbuffer(o.FRAMEBUFFER,o.DEPTH_STENCIL_ATTACHMENT,o.RENDERBUFFER,a)}else o.renderbufferStorage(o.RENDERBUFFER,o.RGBA4,b.width,b.height)}function C(a){return a===THREE.NearestFilter||a===THREE.NearestMipMapNearestFilter||a===THREE.NearestMipMapLinearFilter?o.NEAREST:o.LINEAR}function J(a){var b;if(a===THREE.RepeatWrapping)return o.REPEAT;
if(a===THREE.ClampToEdgeWrapping)return o.CLAMP_TO_EDGE;if(a===THREE.MirroredRepeatWrapping)return o.MIRRORED_REPEAT;if(a===THREE.NearestFilter)return o.NEAREST;if(a===THREE.NearestMipMapNearestFilter)return o.NEAREST_MIPMAP_NEAREST;if(a===THREE.NearestMipMapLinearFilter)return o.NEAREST_MIPMAP_LINEAR;if(a===THREE.LinearFilter)return o.LINEAR;if(a===THREE.LinearMipMapNearestFilter)return o.LINEAR_MIPMAP_NEAREST;if(a===THREE.LinearMipMapLinearFilter)return o.LINEAR_MIPMAP_LINEAR;if(a===THREE.UnsignedByteType)return o.UNSIGNED_BYTE;
if(a===THREE.UnsignedShort4444Type)return o.UNSIGNED_SHORT_4_4_4_4;if(a===THREE.UnsignedShort5551Type)return o.UNSIGNED_SHORT_5_5_5_1;if(a===THREE.UnsignedShort565Type)return o.UNSIGNED_SHORT_5_6_5;if(a===THREE.ByteType)return o.BYTE;if(a===THREE.ShortType)return o.SHORT;if(a===THREE.UnsignedShortType)return o.UNSIGNED_SHORT;if(a===THREE.IntType)return o.INT;if(a===THREE.UnsignedIntType)return o.UNSIGNED_INT;if(a===THREE.FloatType)return o.FLOAT;b=P.get("OES_texture_half_float");if(b!==null&&a===
THREE.HalfFloatType)return b.HALF_FLOAT_OES;if(a===THREE.AlphaFormat)return o.ALPHA;if(a===THREE.RGBFormat)return o.RGB;if(a===THREE.RGBAFormat)return o.RGBA;if(a===THREE.LuminanceFormat)return o.LUMINANCE;if(a===THREE.LuminanceAlphaFormat)return o.LUMINANCE_ALPHA;if(a===THREE.AddEquation)return o.FUNC_ADD;if(a===THREE.SubtractEquation)return o.FUNC_SUBTRACT;if(a===THREE.ReverseSubtractEquation)return o.FUNC_REVERSE_SUBTRACT;if(a===THREE.ZeroFactor)return o.ZERO;if(a===THREE.OneFactor)return o.ONE;
if(a===THREE.SrcColorFactor)return o.SRC_COLOR;if(a===THREE.OneMinusSrcColorFactor)return o.ONE_MINUS_SRC_COLOR;if(a===THREE.SrcAlphaFactor)return o.SRC_ALPHA;if(a===THREE.OneMinusSrcAlphaFactor)return o.ONE_MINUS_SRC_ALPHA;if(a===THREE.DstAlphaFactor)return o.DST_ALPHA;if(a===THREE.OneMinusDstAlphaFactor)return o.ONE_MINUS_DST_ALPHA;if(a===THREE.DstColorFactor)return o.DST_COLOR;if(a===THREE.OneMinusDstColorFactor)return o.ONE_MINUS_DST_COLOR;if(a===THREE.SrcAlphaSaturateFactor)return o.SRC_ALPHA_SATURATE;
b=P.get("WEBGL_compressed_texture_s3tc");if(b!==null){if(a===THREE.RGB_S3TC_DXT1_Format)return b.COMPRESSED_RGB_S3TC_DXT1_EXT;if(a===THREE.RGBA_S3TC_DXT1_Format)return b.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(a===THREE.RGBA_S3TC_DXT3_Format)return b.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(a===THREE.RGBA_S3TC_DXT5_Format)return b.COMPRESSED_RGBA_S3TC_DXT5_EXT}b=P.get("WEBGL_compressed_texture_pvrtc");if(b!==null){if(a===THREE.RGB_PVRTC_4BPPV1_Format)return b.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(a===THREE.RGB_PVRTC_2BPPV1_Format)return b.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;
if(a===THREE.RGBA_PVRTC_4BPPV1_Format)return b.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(a===THREE.RGBA_PVRTC_2BPPV1_Format)return b.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}b=P.get("EXT_blend_minmax");if(b!==null){if(a===THREE.MinEquation)return b.MIN_EXT;if(a===THREE.MaxEquation)return b.MAX_EXT}return 0}var a=a||{},I=a.canvas!==void 0?a.canvas:document.createElement("canvas"),L=a.context!==void 0?a.context:null,D=I.width,B=I.height,z=1,H=a.alpha!==void 0?a.alpha:false,Q=a.depth!==void 0?a.depth:true,O=a.stencil!==
void 0?a.stencil:true,M=a.antialias!==void 0?a.antialias:false,E=a.premultipliedAlpha!==void 0?a.premultipliedAlpha:true,ta=a.preserveDrawingBuffer!==void 0?a.preserveDrawingBuffer:false,S=new THREE.Color(0),ja=0,ra=[],ca=[],Y=-1,ha=[],pa=-1,U=new Float32Array(8),X=[],na=[];this.domElement=I;this.context=null;this.sortObjects=this.autoClearStencil=this.autoClearDepth=this.autoClearColor=this.autoClear=true;this.gammaFactor=2;this.gammaOutput=this.gammaInput=false;this.maxMorphTargets=8;this.maxMorphNormals=
4;this.autoScaleCubemaps=true;var aa=this,fa=null,ia=null,ma=-1,la="",Z=null,da=0,R=0,ka=0,va=I.width,ya=I.height,oa=0,W=0,Da=new THREE.Frustum,Aa=new THREE.Matrix4,T=new THREE.Vector3,ba=new THREE.Vector3,wa=true,Ca={ambient:[0,0,0],directional:{length:0,colors:[],positions:[]},point:{length:0,colors:[],positions:[],distances:[],decays:[]},spot:{length:0,colors:[],positions:[],distances:[],directions:[],anglesCos:[],exponents:[],decays:[]},hemi:{length:0,skyColors:[],groundColors:[],positions:[]}},
xa={geometries:0,textures:0},Ba={calls:0,vertices:0,faces:0,points:0};this.info={render:Ba,memory:xa,programs:null};var o;try{H={alpha:H,depth:Q,stencil:O,antialias:M,premultipliedAlpha:E,preserveDrawingBuffer:ta};o=L||I.getContext("webgl",H)||I.getContext("experimental-webgl",H);if(o===null){if(I.getContext("webgl")!==null)throw"Error creating WebGL context with your selected attributes.";throw"Error creating WebGL context.";}I.addEventListener("webglcontextlost",e,false)}catch(ea){console.error("THREE.WebGLRenderer: "+
ea)}var P=new THREE.WebGLExtensions(o);P.get("OES_texture_float");P.get("OES_texture_float_linear");P.get("OES_texture_half_float");P.get("OES_texture_half_float_linear");P.get("OES_standard_derivatives");P.get("ANGLE_instanced_arrays");if(P.get("OES_element_index_uint"))THREE.BufferGeometry.MaxIndex=4294967296;var sa=new THREE.WebGLCapabilities(o,P,a),G=new THREE.WebGLState(o,P,J),V=new THREE.WebGLProperties,Ea=new THREE.WebGLObjects(o,V,this.info),za=new THREE.WebGLPrograms(this,sa);this.info.programs=
za.programs;var ga=new THREE.WebGLBufferRenderer(o,P,Ba),Fa=new THREE.WebGLIndexedBufferRenderer(o,P,Ba);c();this.context=o;this.capabilities=sa;this.extensions=P;this.state=G;var qa=new THREE.WebGLShadowMap(this,ra,Ea);this.shadowMap=qa;var ua=new THREE.SpritePlugin(this,X),Ha=new THREE.LensFlarePlugin(this,na);this.getContext=function(){return o};this.getContextAttributes=function(){return o.getContextAttributes()};this.forceContextLoss=function(){P.get("WEBGL_lose_context").loseContext()};this.getMaxAnisotropy=
function(){var a;return function(){if(a!==void 0)return a;var b=P.get("EXT_texture_filter_anisotropic");return a=b!==null?o.getParameter(b.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0}}();this.getPrecision=function(){return sa.precision};this.getPixelRatio=function(){return z};this.setPixelRatio=function(a){a!==void 0&&(z=a)};this.getSize=function(){return{width:D,height:B}};this.setSize=function(a,b,c){D=a;B=b;I.width=a*z;I.height=b*z;if(c!==false){I.style.width=a+"px";I.style.height=b+"px"}this.setViewport(0,
0,a,b)};this.setViewport=function(a,b,c,d){R=a*z;ka=b*z;va=c*z;ya=d*z;o.viewport(R,ka,va,ya)};this.getViewport=function(a){a.x=R/z;a.y=ka/z;a.z=va/z;a.w=ya/z};this.setScissor=function(a,b,c,d){o.scissor(a*z,b*z,c*z,d*z)};this.enableScissorTest=function(a){G.setScissorTest(a)};this.getClearColor=function(){return S};this.setClearColor=function(a,c){S.set(a);ja=c!==void 0?c:1;b(S.r,S.g,S.b,ja)};this.getClearAlpha=function(){return ja};this.setClearAlpha=function(a){ja=a;b(S.r,S.g,S.b,ja)};this.clear=
function(a,b,c){var d=0;if(a===void 0||a)d=d|o.COLOR_BUFFER_BIT;if(b===void 0||b)d=d|o.DEPTH_BUFFER_BIT;if(c===void 0||c)d=d|o.STENCIL_BUFFER_BIT;o.clear(d)};this.clearColor=function(){o.clear(o.COLOR_BUFFER_BIT)};this.clearDepth=function(){o.clear(o.DEPTH_BUFFER_BIT)};this.clearStencil=function(){o.clear(o.STENCIL_BUFFER_BIT)};this.clearTarget=function(a,b,c,d){this.setRenderTarget(a);this.clear(b,c,d)};this.resetGLState=d;this.dispose=function(){I.removeEventListener("webglcontextlost",e,false)};
this.renderBufferImmediate=function(a,b,c){G.initAttributes();var d=V.get(a);if(a.hasPositions&&!d.position)d.position=o.createBuffer();if(a.hasNormals&&!d.normal)d.normal=o.createBuffer();if(a.hasUvs&&!d.uv)d.uv=o.createBuffer();if(a.hasColors&&!d.color)d.color=o.createBuffer();b=b.getAttributes();if(a.hasPositions){o.bindBuffer(o.ARRAY_BUFFER,d.position);o.bufferData(o.ARRAY_BUFFER,a.positionArray,o.DYNAMIC_DRAW);G.enableAttribute(b.position);o.vertexAttribPointer(b.position,3,o.FLOAT,false,0,0)}if(a.hasNormals){o.bindBuffer(o.ARRAY_BUFFER,
d.normal);if(c.type!=="MeshPhongMaterial"&&c.shading===THREE.FlatShading)for(var e=0,f=a.count*3;e<f;e=e+9){var g=a.normalArray,h=(g[e+0]+g[e+3]+g[e+6])/3,i=(g[e+1]+g[e+4]+g[e+7])/3,j=(g[e+2]+g[e+5]+g[e+8])/3;g[e+0]=h;g[e+1]=i;g[e+2]=j;g[e+3]=h;g[e+4]=i;g[e+5]=j;g[e+6]=h;g[e+7]=i;g[e+8]=j}o.bufferData(o.ARRAY_BUFFER,a.normalArray,o.DYNAMIC_DRAW);G.enableAttribute(b.normal);o.vertexAttribPointer(b.normal,3,o.FLOAT,false,0,0)}if(a.hasUvs&&c.map){o.bindBuffer(o.ARRAY_BUFFER,d.uv);o.bufferData(o.ARRAY_BUFFER,
a.uvArray,o.DYNAMIC_DRAW);G.enableAttribute(b.uv);o.vertexAttribPointer(b.uv,2,o.FLOAT,false,0,0)}if(a.hasColors&&c.vertexColors!==THREE.NoColors){o.bindBuffer(o.ARRAY_BUFFER,d.color);o.bufferData(o.ARRAY_BUFFER,a.colorArray,o.DYNAMIC_DRAW);G.enableAttribute(b.color);o.vertexAttribPointer(b.color,3,o.FLOAT,false,0,0)}G.disableUnusedAttributes();o.drawArrays(o.TRIANGLES,0,a.count);a.count=0};this.renderBufferDirect=function(a,b,c,d,e,f,g){r(e);var h=s(a,b,c,e,f),j=false,a=d.id+"_"+h.id+"_"+e.wireframe;
if(a!==la){la=a;j=true}b=f.morphTargetInfluences;if(b!==void 0){a=[];c=0;for(j=b.length;c<j;c++){var l=b[c];a.push([l,c])}a.sort(i);if(a.length>8)a.length=8;for(var k=d.morphAttributes,c=0,j=a.length;c<j;c++){l=a[c];U[c]=l[0];if(l[0]!==0){b=l[1];e.morphTargets===true&&k.position&&d.addAttribute("morphTarget"+c,k.position[b]);e.morphNormals===true&&k.normal&&d.addAttribute("morphNormal"+c,k.normal[b])}else{e.morphTargets===true&&d.removeAttribute("morphTarget"+c);e.morphNormals===true&&d.removeAttribute("morphNormal"+
c)}}a=h.getUniforms();a.morphTargetInfluences!==null&&o.uniform1fv(a.morphTargetInfluences,U);j=true}b=d.index;c=d.attributes.position;e.wireframe===true&&(b=Ea.getWireframeAttribute(d));if(b!==null){a=Fa;a.setIndex(b)}else a=ga;if(j){a:{var j=void 0,n;if(d instanceof THREE.InstancedBufferGeometry){n=P.get("ANGLE_instanced_arrays");if(n===null){console.error("THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");
break a}}j===void 0&&(j=0);G.initAttributes();var l=d.attributes,h=h.getAttributes(),k=e.defaultAttributeValues,m;for(m in h){var p=h[m];if(p>=0){var q=l[m];if(q!==void 0){var u=q.itemSize,t=Ea.getAttributeBuffer(q);if(q instanceof THREE.InterleavedBufferAttribute){var A=q.data,F=A.stride,q=q.offset;if(A instanceof THREE.InstancedInterleavedBuffer){G.enableAttributeAndDivisor(p,A.meshPerAttribute,n);if(d.maxInstancedCount===void 0)d.maxInstancedCount=A.meshPerAttribute*A.count}else G.enableAttribute(p);
o.bindBuffer(o.ARRAY_BUFFER,t);o.vertexAttribPointer(p,u,o.FLOAT,false,F*A.array.BYTES_PER_ELEMENT,(j*F+q)*A.array.BYTES_PER_ELEMENT)}else{if(q instanceof THREE.InstancedBufferAttribute){G.enableAttributeAndDivisor(p,q.meshPerAttribute,n);if(d.maxInstancedCount===void 0)d.maxInstancedCount=q.meshPerAttribute*q.count}else G.enableAttribute(p);o.bindBuffer(o.ARRAY_BUFFER,t);o.vertexAttribPointer(p,u,o.FLOAT,false,0,j*u*4)}}else if(k!==void 0){u=k[m];if(u!==void 0)switch(u.length){case 2:o.vertexAttrib2fv(p,
u);break;case 3:o.vertexAttrib3fv(p,u);break;case 4:o.vertexAttrib4fv(p,u);break;default:o.vertexAttrib1fv(p,u)}}}}G.disableUnusedAttributes()}b!==null&&o.bindBuffer(o.ELEMENT_ARRAY_BUFFER,Ea.getAttributeBuffer(b))}n=Infinity;if(b!==null)n=b.count;else if(c!==void 0)n=c.count;m=d.drawRange.start;b=d.drawRange.count;c=g!==null?g.start:0;j=g!==null?g.count:Infinity;g=Math.max(0,m,c);n=Math.min(0+n,m+b,c+j)-1;n=Math.max(0,n-g+1);if(f instanceof THREE.Mesh){if(e.wireframe===true){G.setLineWidth(e.wireframeLinewidth*
z);a.setMode(o.LINES)}else a.setMode(o.TRIANGLES);d instanceof THREE.InstancedBufferGeometry&&d.maxInstancedCount>0?a.renderInstances(d):a.render(g,n)}else if(f instanceof THREE.Line){d=e.linewidth;d===void 0&&(d=1);G.setLineWidth(d*z);f instanceof THREE.LineSegments?a.setMode(o.LINES):a.setMode(o.LINE_STRIP);a.render(g,n)}else if(f instanceof THREE.Points){a.setMode(o.POINTS);a.render(g,n)}};this.render=function(a,b,c,d){if(b instanceof THREE.Camera===false)console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");
else{var e=a.fog;la="";ma=-1;Z=null;wa=true;a.autoUpdate===true&&a.updateMatrixWorld();b.parent===null&&b.updateMatrixWorld();b.matrixWorldInverse.getInverse(b.matrixWorld);Aa.multiplyMatrices(b.projectionMatrix,b.matrixWorldInverse);Da.setFromMatrix(Aa);ra.length=0;pa=Y=-1;X.length=0;na.length=0;n(a,b);ca.length=Y+1;ha.length=pa+1;if(aa.sortObjects===true){ca.sort(k);ha.sort(m)}qa.render(a);Ba.calls=0;Ba.vertices=0;Ba.faces=0;Ba.points=0;this.setRenderTarget(c);(this.autoClear||d)&&this.clear(this.autoClearColor,
this.autoClearDepth,this.autoClearStencil);if(a.overrideMaterial){d=a.overrideMaterial;p(ca,b,ra,e,d);p(ha,b,ra,e,d)}else{G.setBlending(THREE.NoBlending);p(ca,b,ra,e);p(ha,b,ra,e)}ua.render(a,b);Ha.render(a,b,oa,W);if(c){a=c.texture;b=v(c);if(a.generateMipmaps&&b&&a.minFilter!==THREE.NearestFilter&&a.minFilter!==THREE.LinearFilter){a=c instanceof THREE.WebGLRenderTargetCube?o.TEXTURE_CUBE_MAP:o.TEXTURE_2D;c=V.get(c.texture).__webglTexture;G.bindTexture(a,c);o.generateMipmap(a);G.bindTexture(a,null)}}G.setDepthTest(true);
G.setDepthWrite(true);G.setColorWrite(true)}};this.setFaceCulling=function(a,b){if(a===THREE.CullFaceNone)G.disable(o.CULL_FACE);else{b===THREE.FrontFaceDirectionCW?o.frontFace(o.CW):o.frontFace(o.CCW);a===THREE.CullFaceBack?o.cullFace(o.BACK):a===THREE.CullFaceFront?o.cullFace(o.FRONT):o.cullFace(o.FRONT_AND_BACK);G.enable(o.CULL_FACE)}};this.setTexture=function(a,b){var c=V.get(a);if(a.version>0&&c.__version!==a.version){var d=a.image;if(d===void 0)console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined",
a);else if(d.complete===false)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete",a);else{if(c.__webglInit===void 0){c.__webglInit=true;a.addEventListener("dispose",g);c.__webglTexture=o.createTexture();xa.textures++}G.activeTexture(o.TEXTURE0+b);G.bindTexture(o.TEXTURE_2D,c.__webglTexture);o.pixelStorei(o.UNPACK_FLIP_Y_WEBGL,a.flipY);o.pixelStorei(o.UNPACK_PREMULTIPLY_ALPHA_WEBGL,a.premultiplyAlpha);o.pixelStorei(o.UNPACK_ALIGNMENT,a.unpackAlignment);a.image=y(a.image,
sa.maxTextureSize);d=a.wrapS!==THREE.ClampToEdgeWrapping||a.wrapT!==THREE.ClampToEdgeWrapping?true:a.minFilter!==THREE.NearestFilter&&a.minFilter!==THREE.LinearFilter?true:false;if(d&&v(a.image)===false){d=a.image;if(d instanceof HTMLImageElement||d instanceof HTMLCanvasElement){var e=document.createElement("canvas");e.width=THREE.Math.nearestPowerOfTwo(d.width);e.height=THREE.Math.nearestPowerOfTwo(d.height);e.getContext("2d").drawImage(d,0,0,e.width,e.height);d=e}a.image=d}var f=a.image,d=v(f),
e=J(a.format),h=J(a.type);t(o.TEXTURE_2D,a,d);var i=a.mipmaps;if(a instanceof THREE.DataTexture)if(i.length>0&&d){for(var j=0,l=i.length;j<l;j++){f=i[j];G.texImage2D(o.TEXTURE_2D,j,e,f.width,f.height,0,e,h,f.data)}a.generateMipmaps=false}else G.texImage2D(o.TEXTURE_2D,0,e,f.width,f.height,0,e,h,f.data);else if(a instanceof THREE.CompressedTexture){j=0;for(l=i.length;j<l;j++){f=i[j];a.format!==THREE.RGBAFormat&&a.format!==THREE.RGBFormat?G.getCompressedTextureFormats().indexOf(e)>-1?G.compressedTexImage2D(o.TEXTURE_2D,
j,e,f.width,f.height,0,f.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):G.texImage2D(o.TEXTURE_2D,j,e,f.width,f.height,0,e,h,f.data)}}else if(i.length>0&&d){j=0;for(l=i.length;j<l;j++){f=i[j];G.texImage2D(o.TEXTURE_2D,j,e,e,h,f)}a.generateMipmaps=false}else G.texImage2D(o.TEXTURE_2D,0,e,e,h,a.image);a.generateMipmaps&&d&&o.generateMipmap(o.TEXTURE_2D);c.__version=a.version;if(a.onUpdate)a.onUpdate(a)}}else{G.activeTexture(o.TEXTURE0+
b);G.bindTexture(o.TEXTURE_2D,c.__webglTexture)}};this.setRenderTarget=function(a){var b=a instanceof THREE.WebGLRenderTargetCube;if(a&&V.get(a).__webglFramebuffer===void 0){var c=V.get(a),d=V.get(a.texture);if(a.depthBuffer===void 0)a.depthBuffer=true;if(a.stencilBuffer===void 0)a.stencilBuffer=true;a.addEventListener("dispose",f);d.__webglTexture=o.createTexture();xa.textures++;var e=v(a),g=J(a.texture.format),h=J(a.texture.type);if(b){c.__webglFramebuffer=[];c.__webglRenderbuffer=[];G.bindTexture(o.TEXTURE_CUBE_MAP,
d.__webglTexture);t(o.TEXTURE_CUBE_MAP,a.texture,e);for(d=0;d<6;d++){c.__webglFramebuffer[d]=o.createFramebuffer();c.__webglRenderbuffer[d]=o.createRenderbuffer();G.texImage2D(o.TEXTURE_CUBE_MAP_POSITIVE_X+d,0,g,a.width,a.height,0,g,h,null);K(c.__webglFramebuffer[d],a,o.TEXTURE_CUBE_MAP_POSITIVE_X+d);F(c.__webglRenderbuffer[d],a)}a.texture.generateMipmaps&&e&&o.generateMipmap(o.TEXTURE_CUBE_MAP)}else{c.__webglFramebuffer=o.createFramebuffer();c.__webglRenderbuffer=a.shareDepthFrom?a.shareDepthFrom.__webglRenderbuffer:
o.createRenderbuffer();G.bindTexture(o.TEXTURE_2D,d.__webglTexture);t(o.TEXTURE_2D,a.texture,e);G.texImage2D(o.TEXTURE_2D,0,g,a.width,a.height,0,g,h,null);K(c.__webglFramebuffer,a,o.TEXTURE_2D);a.shareDepthFrom?a.depthBuffer&&!a.stencilBuffer?o.framebufferRenderbuffer(o.FRAMEBUFFER,o.DEPTH_ATTACHMENT,o.RENDERBUFFER,c.__webglRenderbuffer):a.depthBuffer&&a.stencilBuffer&&o.framebufferRenderbuffer(o.FRAMEBUFFER,o.DEPTH_STENCIL_ATTACHMENT,o.RENDERBUFFER,c.__webglRenderbuffer):F(c.__webglRenderbuffer,
a);a.texture.generateMipmaps&&e&&o.generateMipmap(o.TEXTURE_2D)}b?G.bindTexture(o.TEXTURE_CUBE_MAP,null):G.bindTexture(o.TEXTURE_2D,null);o.bindRenderbuffer(o.RENDERBUFFER,null);o.bindFramebuffer(o.FRAMEBUFFER,null)}if(a){c=V.get(a);d=b?c.__webglFramebuffer[a.activeCubeFace]:c.__webglFramebuffer;c=a.width;e=a.height;h=g=0}else{d=null;c=va;e=ya;g=R;h=ka}if(d!==ia){o.bindFramebuffer(o.FRAMEBUFFER,d);o.viewport(g,h,c,e);ia=d}if(b){d=V.get(a.texture);o.framebufferTexture2D(o.FRAMEBUFFER,o.COLOR_ATTACHMENT0,
o.TEXTURE_CUBE_MAP_POSITIVE_X+a.activeCubeFace,d.__webglTexture,0)}oa=c;W=e};this.readRenderTargetPixels=function(a,b,c,d,e,f){if(a instanceof THREE.WebGLRenderTarget===false)console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");else{var g=V.get(a).__webglFramebuffer;if(g){var h=false;if(g!==ia){o.bindFramebuffer(o.FRAMEBUFFER,g);h=true}try{var i=a.texture;i.format!==THREE.RGBAFormat&&J(i.format)!==o.getParameter(o.IMPLEMENTATION_COLOR_READ_FORMAT)?
console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format."):i.type!==THREE.UnsignedByteType&&J(i.type)!==o.getParameter(o.IMPLEMENTATION_COLOR_READ_TYPE)&&!(i.type===THREE.FloatType&&P.get("WEBGL_color_buffer_float"))&&!(i.type===THREE.HalfFloatType&&P.get("EXT_color_buffer_half_float"))?console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type."):o.checkFramebufferStatus(o.FRAMEBUFFER)===
o.FRAMEBUFFER_COMPLETE?o.readPixels(b,c,d,e,J(i.format),J(i.type),f):console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.")}finally{h&&o.bindFramebuffer(o.FRAMEBUFFER,ia)}}}};this.supportsFloatTextures=function(){console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' ).");return P.get("OES_texture_float")};this.supportsHalfFloatTextures=function(){console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' ).");
return P.get("OES_texture_half_float")};this.supportsStandardDerivatives=function(){console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' ).");return P.get("OES_standard_derivatives")};this.supportsCompressedTextureS3TC=function(){console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' ).");return P.get("WEBGL_compressed_texture_s3tc")};this.supportsCompressedTexturePVRTC=
function(){console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' ).");return P.get("WEBGL_compressed_texture_pvrtc")};this.supportsBlendMinMax=function(){console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' ).");return P.get("EXT_blend_minmax")};this.supportsVertexTextures=function(){return sa.vertexTextures};this.supportsInstancedArrays=function(){console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' ).");
return P.get("ANGLE_instanced_arrays")};this.initMaterial=function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")};this.addPrePlugin=function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")};this.addPostPlugin=function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")};this.updateShadowMap=function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")};Object.defineProperties(this,{shadowMapEnabled:{get:function(){return qa.enabled},
set:function(a){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.");qa.enabled=a}},shadowMapType:{get:function(){return qa.type},set:function(a){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.");qa.type=a}},shadowMapCullFace:{get:function(){return qa.cullFace},set:function(a){console.warn("THREE.WebGLRenderer: .shadowMapCullFace is now .shadowMap.cullFace.");qa.cullFace=a}},shadowMapDebug:{get:function(){return qa.debug},set:function(a){console.warn("THREE.WebGLRenderer: .shadowMapDebug is now .shadowMap.debug.");
qa.debug=a}}})};THREE.WebGLRenderTarget=function(a,b,c){this.uuid=THREE.Math.generateUUID();this.width=a;this.height=b;c=c||{};if(c.minFilter===void 0)c.minFilter=THREE.LinearFilter;this.texture=new THREE.Texture(void 0,void 0,c.wrapS,c.wrapT,c.magFilter,c.minFilter,c.format,c.type,c.anisotropy);this.depthBuffer=c.depthBuffer!==void 0?c.depthBuffer:true;this.stencilBuffer=c.stencilBuffer!==void 0?c.stencilBuffer:true;this.shareDepthFrom=c.shareDepthFrom!==void 0?c.shareDepthFrom:null};
THREE.WebGLRenderTarget.prototype={constructor:THREE.WebGLRenderTarget,get wrapS(){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.");return this.texture.wrapS},set wrapS(a){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.");this.texture.wrapS=a},get wrapT(){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.");return this.texture.wrapT},set wrapT(a){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.");this.texture.wrapT=a},
get magFilter(){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.");return this.texture.magFilter},set magFilter(a){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.");this.texture.magFilter=a},get minFilter(){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.");return this.texture.minFilter},set minFilter(a){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.");this.texture.minFilter=a},get anisotropy(){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.");
return this.texture.anisotropy},set anisotropy(a){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.");this.texture.anisotropy=a},get offset(){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset.");return this.texture.offset},set offset(a){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset.");this.texture.offset=a},get repeat(){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat.");return this.texture.repeat},set repeat(a){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat.");
this.texture.repeat=a},get format(){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format.");return this.texture.format},set format(a){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format.");this.texture.format=a},get type(){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type.");return this.texture.type},set type(a){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type.");this.texture.type=a},get generateMipmaps(){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.");
return this.texture.generateMipmaps},set generateMipmaps(a){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.");this.texture.generateMipmaps=a},setSize:function(a,b){if(this.width!==a||this.height!==b){this.width=a;this.height=b;this.dispose()}},clone:function(){return(new this.constructor).copy(this)},copy:function(a){this.width=a.width;this.height=a.height;this.texture=a.texture.clone();this.depthBuffer=a.depthBuffer;this.stencilBuffer=a.stencilBuffer;this.shareDepthFrom=
a.shareDepthFrom;return this},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.EventDispatcher.prototype.apply(THREE.WebGLRenderTarget.prototype);THREE.WebGLRenderTargetCube=function(a,b,c){THREE.WebGLRenderTarget.call(this,a,b,c);this.activeCubeFace=0};THREE.WebGLRenderTargetCube.prototype=Object.create(THREE.WebGLRenderTarget.prototype);THREE.WebGLRenderTargetCube.prototype.constructor=THREE.WebGLRenderTargetCube;
THREE.WebGLBufferRenderer=function(a,b,c){var d;this.setMode=function(a){d=a};this.render=function(b,g){a.drawArrays(d,b,g);c.calls++;c.vertices=c.vertices+g;if(d===a.TRIANGLES)c.faces=c.faces+g/3};this.renderInstances=function(a){var c=b.get("ANGLE_instanced_arrays");if(c===null)console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");else{var f=a.attributes.position;f instanceof THREE.InterleavedBufferAttribute?
c.drawArraysInstancedANGLE(d,0,f.data.count,a.maxInstancedCount):c.drawArraysInstancedANGLE(d,0,f.count,a.maxInstancedCount)}}};
THREE.WebGLIndexedBufferRenderer=function(a,b,c){var d,e,g;this.setMode=function(a){d=a};this.setIndex=function(c){if(c.array instanceof Uint32Array&&b.get("OES_element_index_uint")){e=a.UNSIGNED_INT;g=4}else{e=a.UNSIGNED_SHORT;g=2}};this.render=function(b,h){a.drawElements(d,h,e,b*g);c.calls++;c.vertices=c.vertices+h;if(d===a.TRIANGLES)c.faces=c.faces+h/3};this.renderInstances=function(a){var c=b.get("ANGLE_instanced_arrays");c===null?console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays."):
c.drawElementsInstancedANGLE(d,a.index.array.length,e,0,a.maxInstancedCount)}};
THREE.WebGLExtensions=function(a){var b={};this.get=function(c){if(b[c]!==void 0)return b[c];var d;switch(c){case "EXT_texture_filter_anisotropic":d=a.getExtension("EXT_texture_filter_anisotropic")||a.getExtension("MOZ_EXT_texture_filter_anisotropic")||a.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case "WEBGL_compressed_texture_s3tc":d=a.getExtension("WEBGL_compressed_texture_s3tc")||a.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||a.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");
break;case "WEBGL_compressed_texture_pvrtc":d=a.getExtension("WEBGL_compressed_texture_pvrtc")||a.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:d=a.getExtension(c)}d===null&&console.warn("THREE.WebGLRenderer: "+c+" extension not supported.");return b[c]=d}};
THREE.WebGLCapabilities=function(a,b,c){function d(b){if(b==="highp"){if(a.getShaderPrecisionFormat(a.VERTEX_SHADER,a.HIGH_FLOAT).precision>0&&a.getShaderPrecisionFormat(a.FRAGMENT_SHADER,a.HIGH_FLOAT).precision>0)return"highp";b="mediump"}return b==="mediump"&&a.getShaderPrecisionFormat(a.VERTEX_SHADER,a.MEDIUM_FLOAT).precision>0&&a.getShaderPrecisionFormat(a.FRAGMENT_SHADER,a.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}this.getMaxPrecision=d;this.precision=c.precision!==void 0?c.precision:"highp";
this.logarithmicDepthBuffer=c.logarithmicDepthBuffer!==void 0?c.logarithmicDepthBuffer:false;this.maxTextures=a.getParameter(a.MAX_TEXTURE_IMAGE_UNITS);this.maxVertexTextures=a.getParameter(a.MAX_VERTEX_TEXTURE_IMAGE_UNITS);this.maxTextureSize=a.getParameter(a.MAX_TEXTURE_SIZE);this.maxCubemapSize=a.getParameter(a.MAX_CUBE_MAP_TEXTURE_SIZE);this.maxAttributes=a.getParameter(a.MAX_VERTEX_ATTRIBS);this.maxVertexUniforms=a.getParameter(a.MAX_VERTEX_UNIFORM_VECTORS);this.maxVaryings=a.getParameter(a.MAX_VARYING_VECTORS);
this.maxFragmentUniforms=a.getParameter(a.MAX_FRAGMENT_UNIFORM_VECTORS);this.vertexTextures=this.maxVertexTextures>0;this.floatFragmentTextures=!!b.get("OES_texture_float");this.floatVertexTextures=this.vertexTextures&&this.floatFragmentTextures;c=d(this.precision);if(c!==this.precision){console.warn("THREE.WebGLRenderer:",this.precision,"not supported, using",c,"instead.");this.precision=c}if(this.logarithmicDepthBuffer)this.logarithmicDepthBuffer=!!b.get("EXT_frag_depth")};
THREE.WebGLGeometries=function(a,b,c){function d(a){var a=a.target,h=g[a.id].attributes,j;for(j in h)e(h[j]);a.removeEventListener("dispose",d);delete g[a.id];j=b.get(a);j.wireframe&&e(j.wireframe);c.memory.geometries--}function e(c){var d;d=c instanceof THREE.InterleavedBufferAttribute?b.get(c.data).__webglBuffer:b.get(c).__webglBuffer;if(d!==void 0){a.deleteBuffer(d);c instanceof THREE.InterleavedBufferAttribute?b.delete(c.data):b.delete(c)}}var g={};this.get=function(a){var b=a.geometry;if(g[b.id]!==
void 0)return g[b.id];b.addEventListener("dispose",d);var e;if(b instanceof THREE.BufferGeometry)e=b;else if(b instanceof THREE.Geometry){if(b._bufferGeometry===void 0)b._bufferGeometry=(new THREE.BufferGeometry).setFromObject(a);e=b._bufferGeometry}g[b.id]=e;c.memory.geometries++;return e}};
THREE.WebGLObjects=function(a,b,c){function d(c,d){var e=c instanceof THREE.InterleavedBufferAttribute?c.data:c,g=b.get(e);if(g.__webglBuffer===void 0){g.__webglBuffer=a.createBuffer();a.bindBuffer(d,g.__webglBuffer);a.bufferData(d,e.array,e.dynamic?a.DYNAMIC_DRAW:a.STATIC_DRAW);g.version=e.version}else if(g.version!==e.version){a.bindBuffer(d,g.__webglBuffer);if(e.dynamic===false||e.updateRange.count===-1)a.bufferSubData(d,0,e.array);else if(e.updateRange.count===0)console.error("THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually.");
else{a.bufferSubData(d,e.updateRange.offset*e.array.BYTES_PER_ELEMENT,e.array.subarray(e.updateRange.offset,e.updateRange.offset+e.updateRange.count));e.updateRange.count=0}g.version=e.version}}function e(a,b,c){if(b>c)var d=b,b=c,c=d;d=a[b];if(d===void 0){a[b]=[c];return true}if(d.indexOf(c)===-1){d.push(c);return true}return false}var g=new THREE.WebGLGeometries(a,b,c);this.getAttributeBuffer=function(a){return a instanceof THREE.InterleavedBufferAttribute?b.get(a.data).__webglBuffer:b.get(a).__webglBuffer};
this.getWireframeAttribute=function(c){var g=b.get(c);if(g.wireframe!==void 0)return g.wireframe;var j=[],i=c.index,k=c.attributes,c=k.position;if(i!==null)for(var k={},i=i.array,m=0,l=i.length;m<l;m=m+3){var n=i[m+0],p=i[m+1],r=i[m+2];e(k,n,p)&&j.push(n,p);e(k,p,r)&&j.push(p,r);e(k,r,n)&&j.push(r,n)}else{i=k.position.array;m=0;for(l=i.length/3-1;m<l;m=m+3){n=m+0;p=m+1;r=m+2;j.push(n,p,p,r,r,n)}}j=new THREE.BufferAttribute(new (c.count>65535?Uint32Array:Uint16Array)(j),1);d(j,a.ELEMENT_ARRAY_BUFFER);
return g.wireframe=j};this.update=function(b){var c=g.get(b);b.geometry instanceof THREE.Geometry&&c.updateFromObject(b);var b=c.index,e=c.attributes;b!==null&&d(b,a.ELEMENT_ARRAY_BUFFER);for(var i in e)d(e[i],a.ARRAY_BUFFER);b=c.morphAttributes;for(i in b)for(var e=b[i],k=0,m=e.length;k<m;k++)d(e[k],a.ARRAY_BUFFER);return c}};
THREE.WebGLProgram=function(){function a(a){var b=[],c;for(c in a){var f=a[c];f!==false&&b.push("#define "+c+" "+f)}return b.join("\n")}function b(a){return a!==""}var c=0;return function(d,e,g,f){var h=d.context,j=g.defines,i=g.__webglShader.vertexShader,k=g.__webglShader.fragmentShader,m="SHADOWMAP_TYPE_BASIC";f.shadowMapType===THREE.PCFShadowMap?m="SHADOWMAP_TYPE_PCF":f.shadowMapType===THREE.PCFSoftShadowMap&&(m="SHADOWMAP_TYPE_PCF_SOFT");var l="ENVMAP_TYPE_CUBE",n="ENVMAP_MODE_REFLECTION",p="ENVMAP_BLENDING_MULTIPLY";
if(f.envMap){switch(g.envMap.mapping){case THREE.CubeReflectionMapping:case THREE.CubeRefractionMapping:l="ENVMAP_TYPE_CUBE";break;case THREE.EquirectangularReflectionMapping:case THREE.EquirectangularRefractionMapping:l="ENVMAP_TYPE_EQUIREC";break;case THREE.SphericalReflectionMapping:l="ENVMAP_TYPE_SPHERE"}switch(g.envMap.mapping){case THREE.CubeRefractionMapping:case THREE.EquirectangularRefractionMapping:n="ENVMAP_MODE_REFRACTION"}switch(g.combine){case THREE.MultiplyOperation:p="ENVMAP_BLENDING_MULTIPLY";
break;case THREE.MixOperation:p="ENVMAP_BLENDING_MIX";break;case THREE.AddOperation:p="ENVMAP_BLENDING_ADD"}}var r=d.gammaFactor>0?d.gammaFactor:1,s=a(j),q=h.createProgram();if(g instanceof THREE.RawShaderMaterial)d=j="";else{j=["precision "+f.precision+" float;","precision "+f.precision+" int;","#define SHADER_NAME "+g.__webglShader.name,s,f.supportsVertexTextures?"#define VERTEX_TEXTURES":"",d.gammaInput?"#define GAMMA_INPUT":"",d.gammaOutput?"#define GAMMA_OUTPUT":"","#define GAMMA_FACTOR "+r,
"#define MAX_DIR_LIGHTS "+f.maxDirLights,"#define MAX_POINT_LIGHTS "+f.maxPointLights,"#define MAX_SPOT_LIGHTS "+f.maxSpotLights,"#define MAX_HEMI_LIGHTS "+f.maxHemiLights,"#define MAX_SHADOWS "+f.maxShadows,"#define MAX_BONES "+f.maxBones,f.map?"#define USE_MAP":"",f.envMap?"#define USE_ENVMAP":"",f.envMap?"#define "+n:"",f.lightMap?"#define USE_LIGHTMAP":"",f.aoMap?"#define USE_AOMAP":"",f.emissiveMap?"#define USE_EMISSIVEMAP":"",f.bumpMap?"#define USE_BUMPMAP":"",f.normalMap?"#define USE_NORMALMAP":
"",f.displacementMap&&f.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",f.specularMap?"#define USE_SPECULARMAP":"",f.alphaMap?"#define USE_ALPHAMAP":"",f.vertexColors?"#define USE_COLOR":"",f.flatShading?"#define FLAT_SHADED":"",f.skinning?"#define USE_SKINNING":"",f.useVertexTexture?"#define BONE_TEXTURE":"",f.morphTargets?"#define USE_MORPHTARGETS":"",f.morphNormals&&f.flatShading===false?"#define USE_MORPHNORMALS":"",f.doubleSided?"#define DOUBLE_SIDED":"",f.flipSided?"#define FLIP_SIDED":
"",f.shadowMapEnabled?"#define USE_SHADOWMAP":"",f.shadowMapEnabled?"#define "+m:"",f.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",f.pointLightShadows>0?"#define POINT_LIGHT_SHADOWS":"",f.sizeAttenuation?"#define USE_SIZEATTENUATION":"",f.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",f.logarithmicDepthBuffer&&d.extensions.get("EXT_frag_depth")?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;",
"uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_COLOR","\tattribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","\tattribute vec3 morphTarget0;","\tattribute vec3 morphTarget1;","\tattribute vec3 morphTarget2;","\tattribute vec3 morphTarget3;","\t#ifdef USE_MORPHNORMALS","\t\tattribute vec3 morphNormal0;","\t\tattribute vec3 morphNormal1;","\t\tattribute vec3 morphNormal2;","\t\tattribute vec3 morphNormal3;",
"\t#else","\t\tattribute vec3 morphTarget4;","\t\tattribute vec3 morphTarget5;","\t\tattribute vec3 morphTarget6;","\t\tattribute vec3 morphTarget7;","\t#endif","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif","\n"].filter(b).join("\n");d=[f.bumpMap||f.normalMap||f.flatShading||g.derivatives?"#extension GL_OES_standard_derivatives : enable":"",f.logarithmicDepthBuffer&&d.extensions.get("EXT_frag_depth")?"#extension GL_EXT_frag_depth : enable":"",
"precision "+f.precision+" float;","precision "+f.precision+" int;","#define SHADER_NAME "+g.__webglShader.name,s,"#define MAX_DIR_LIGHTS "+f.maxDirLights,"#define MAX_POINT_LIGHTS "+f.maxPointLights,"#define MAX_SPOT_LIGHTS "+f.maxSpotLights,"#define MAX_HEMI_LIGHTS "+f.maxHemiLights,"#define MAX_SHADOWS "+f.maxShadows,f.alphaTest?"#define ALPHATEST "+f.alphaTest:"",d.gammaInput?"#define GAMMA_INPUT":"",d.gammaOutput?"#define GAMMA_OUTPUT":"","#define GAMMA_FACTOR "+r,f.useFog&&f.fog?"#define USE_FOG":
"",f.useFog&&f.fogExp?"#define FOG_EXP2":"",f.map?"#define USE_MAP":"",f.envMap?"#define USE_ENVMAP":"",f.envMap?"#define "+l:"",f.envMap?"#define "+n:"",f.envMap?"#define "+p:"",f.lightMap?"#define USE_LIGHTMAP":"",f.aoMap?"#define USE_AOMAP":"",f.emissiveMap?"#define USE_EMISSIVEMAP":"",f.bumpMap?"#define USE_BUMPMAP":"",f.normalMap?"#define USE_NORMALMAP":"",f.specularMap?"#define USE_SPECULARMAP":"",f.alphaMap?"#define USE_ALPHAMAP":"",f.vertexColors?"#define USE_COLOR":"",f.flatShading?"#define FLAT_SHADED":
"",f.metal?"#define METAL":"",f.doubleSided?"#define DOUBLE_SIDED":"",f.flipSided?"#define FLIP_SIDED":"",f.shadowMapEnabled?"#define USE_SHADOWMAP":"",f.shadowMapEnabled?"#define "+m:"",f.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",f.pointLightShadows>0?"#define POINT_LIGHT_SHADOWS":"",f.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",f.logarithmicDepthBuffer&&d.extensions.get("EXT_frag_depth")?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","\n"].filter(b).join("\n")}k=
d+k;i=THREE.WebGLShader(h,h.VERTEX_SHADER,j+i);k=THREE.WebGLShader(h,h.FRAGMENT_SHADER,k);h.attachShader(q,i);h.attachShader(q,k);g.index0AttributeName!==void 0?h.bindAttribLocation(q,0,g.index0AttributeName):f.morphTargets===true&&h.bindAttribLocation(q,0,"position");h.linkProgram(q);f=h.getProgramInfoLog(q);m=h.getShaderInfoLog(i);l=h.getShaderInfoLog(k);p=n=true;if(h.getProgramParameter(q,h.LINK_STATUS)===false){n=false;console.error("THREE.WebGLProgram: shader error: ",h.getError(),"gl.VALIDATE_STATUS",
h.getProgramParameter(q,h.VALIDATE_STATUS),"gl.getProgramInfoLog",f,m,l)}else if(f!=="")console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()",f);else if(m===""||l==="")p=false;if(p)this.diagnostics={runnable:n,material:g,programLog:f,vertexShader:{log:m,prefix:j},fragmentShader:{log:l,prefix:d}};h.deleteShader(i);h.deleteShader(k);var u;this.getUniforms=function(){if(u===void 0){for(var a={},b=h.getProgramParameter(q,h.ACTIVE_UNIFORMS),c=0;c<b;c++){var d=h.getActiveUniform(q,c).name,e=h.getUniformLocation(q,
d),g=d.lastIndexOf("[0]");g!==-1&&g===d.length-3&&(a[d.substr(0,g)]=e);a[d]=e}u=a}return u};var A;this.getAttributes=function(){if(A===void 0){for(var a={},b=h.getProgramParameter(q,h.ACTIVE_ATTRIBUTES),c=0;c<b;c++){var d=h.getActiveAttrib(q,c).name;a[d]=h.getAttribLocation(q,d)}A=a}return A};this.destroy=function(){h.deleteProgram(q);this.program=void 0};Object.defineProperties(this,{uniforms:{get:function(){console.warn("THREE.WebGLProgram: .uniforms is now .getUniforms().");return this.getUniforms()}},
attributes:{get:function(){console.warn("THREE.WebGLProgram: .attributes is now .getAttributes().");return this.getAttributes()}}});this.id=c++;this.code=e;this.usedTimes=1;this.program=q;this.vertexShader=i;this.fragmentShader=k;return this}}();
THREE.WebGLPrograms=function(a,b){var c=[],d={MeshDepthMaterial:"depth",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points"},e=["precision","supportsVertexTextures","map","envMap","envMapMode","lightMap","aoMap","emissiveMap","bumpMap","normalMap","displacementMap","specularMap","alphaMap","combine","vertexColors","fog","useFog","fogExp","flatShading","sizeAttenuation",
"logarithmicDepthBuffer","skinning","maxBones","useVertexTexture","morphTargets","morphNormals","maxMorphTargets","maxMorphNormals","maxDirLights","maxPointLights","maxSpotLights","maxHemiLights","maxShadows","shadowMapEnabled","pointLightShadows","shadowMapType","shadowMapDebug","alphaTest","metal","doubleSided","flipSided"];this.getParameters=function(c,e,h,j){var i,k,m,l,n,p=d[c.type];i=n=l=m=k=0;for(var r=e.length;i<r;i++){var s=e[i];if(s.visible!==false){s instanceof THREE.DirectionalLight&&
k++;s instanceof THREE.PointLight&&m++;s instanceof THREE.SpotLight&&l++;s instanceof THREE.HemisphereLight&&n++}}for(var s=i=r=0,q=e.length;s<q;s++){var u=e[s];if(u.castShadow){(u instanceof THREE.SpotLight||u instanceof THREE.DirectionalLight)&&r++;if(u instanceof THREE.PointLight){r++;i++}}}e=r;if(b.floatVertexTextures&&j&&j.skeleton&&j.skeleton.useVertexTexture)r=1024;else{r=Math.floor((b.maxVertexUniforms-20)/4);if(j!==void 0&&j instanceof THREE.SkinnedMesh){r=Math.min(j.skeleton.bones.length,
r);r<j.skeleton.bones.length&&console.warn("WebGLRenderer: too many bones - "+j.skeleton.bones.length+", this GPU supports just "+r+" (try OpenGL instead of ANGLE)")}}s=a.getPrecision();if(c.precision!==null){s=b.getMaxPrecision(c.precision);s!==c.precision&&console.warn("THREE.WebGLRenderer.initMaterial:",c.precision,"not supported, using",s,"instead.")}return{shaderID:p,precision:s,supportsVertexTextures:b.vertexTextures,map:!!c.map,envMap:!!c.envMap,envMapMode:c.envMap&&c.envMap.mapping,lightMap:!!c.lightMap,
aoMap:!!c.aoMap,emissiveMap:!!c.emissiveMap,bumpMap:!!c.bumpMap,normalMap:!!c.normalMap,displacementMap:!!c.displacementMap,specularMap:!!c.specularMap,alphaMap:!!c.alphaMap,combine:c.combine,vertexColors:c.vertexColors,fog:h,useFog:c.fog,fogExp:h instanceof THREE.FogExp2,flatShading:c.shading===THREE.FlatShading,sizeAttenuation:c.sizeAttenuation,logarithmicDepthBuffer:b.logarithmicDepthBuffer,skinning:c.skinning,maxBones:r,useVertexTexture:b.floatVertexTextures&&j&&j.skeleton&&j.skeleton.useVertexTexture,
morphTargets:c.morphTargets,morphNormals:c.morphNormals,maxMorphTargets:a.maxMorphTargets,maxMorphNormals:a.maxMorphNormals,maxDirLights:k,maxPointLights:m,maxSpotLights:l,maxHemiLights:n,maxShadows:e,pointLightShadows:i,shadowMapEnabled:a.shadowMap.enabled&&j.receiveShadow&&e>0,shadowMapType:a.shadowMap.type,shadowMapDebug:a.shadowMap.debug,alphaTest:c.alphaTest,metal:c.metal,doubleSided:c.side===THREE.DoubleSide,flipSided:c.side===THREE.BackSide}};this.getProgramCode=function(a,b){var c=[];if(b.shaderID)c.push(b.shaderID);
else{c.push(a.fragmentShader);c.push(a.vertexShader)}if(a.defines!==void 0)for(var d in a.defines){c.push(d);c.push(a.defines[d])}for(d=0;d<e.length;d++){var i=e[d];c.push(i);c.push(b[i])}return c.join()};this.acquireProgram=function(b,d,e){for(var j,i=0,k=c.length;i<k;i++){var m=c[i];if(m.code===e){j=m;++j.usedTimes;break}}if(j===void 0){j=new THREE.WebGLProgram(a,e,b,d);c.push(j)}return j};this.releaseProgram=function(a){if(--a.usedTimes===0){var b=c.indexOf(a);c[b]=c[c.length-1];c.pop();a.destroy()}};
this.programs=c};THREE.WebGLProperties=function(){var a={};this.get=function(b){var b=b.uuid,c=a[b];if(c===void 0){c={};a[b]=c}return c};this.delete=function(b){delete a[b.uuid]};this.clear=function(){a={}}};
THREE.WebGLShader=function(){function a(a){for(var a=a.split("\n"),c=0;c<a.length;c++)a[c]=c+1+": "+a[c];return a.join("\n")}return function(b,c,d){var e=b.createShader(c);b.shaderSource(e,d);b.compileShader(e);b.getShaderParameter(e,b.COMPILE_STATUS)===false&&console.error("THREE.WebGLShader: Shader couldn't compile.");b.getShaderInfoLog(e)!==""&&console.warn("THREE.WebGLShader: gl.getShaderInfoLog()",c===b.VERTEX_SHADER?"vertex":"fragment",b.getShaderInfoLog(e),a(d));return e}}();
THREE.WebGLShadowMap=function(a,b,c){function d(a,b,c,d){var e=a.geometry,f=null,f=r,g=a.customDepthMaterial;if(c){f=s;g=a.customDistanceMaterial}if(g)f=g;else{a=a instanceof THREE.SkinnedMesh&&b.skinning;g=0;e.morphTargets!==void 0&&(e.morphTargets.length>0&&b.morphTargets)&&(g=g|l);a&&(g=g|n);f=f[g]}f.visible=b.visible;f.wireframe=b.wireframe;f.wireframeLinewidth=b.wireframeLinewidth;c&&f.uniforms.lightPos!==void 0&&f.uniforms.lightPos.value.copy(d);return f}function e(a,b){if(a.visible!==false){if(a instanceof
THREE.Mesh||a instanceof THREE.Line||a instanceof THREE.Points)if(a.castShadow&&(a.frustumCulled===false||h.intersectsObject(a)===true)&&a.material.visible===true){a.modelViewMatrix.multiplyMatrices(b.matrixWorldInverse,a.matrixWorld);m.push(a)}for(var c=a.children,d=0,f=c.length;d<f;d++)e(c[d],b)}}var g=a.context,f=a.state,h=new THREE.Frustum,j=new THREE.Matrix4;new THREE.Vector3;new THREE.Vector3;for(var i=new THREE.Vector3,k=new THREE.Vector3,m=[],l=1,n=2,p=(l|n)+1,r=Array(p),s=Array(p),q=[new THREE.Vector3(1,
0,0),new THREE.Vector3(-1,0,0),new THREE.Vector3(0,0,1),new THREE.Vector3(0,0,-1),new THREE.Vector3(0,1,0),new THREE.Vector3(0,-1,0)],u=[new THREE.Vector3(0,1,0),new THREE.Vector3(0,1,0),new THREE.Vector3(0,1,0),new THREE.Vector3(0,1,0),new THREE.Vector3(0,0,1),new THREE.Vector3(0,0,-1)],A=[new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4],t=new THREE.Vector4,y=THREE.ShaderLib.depthRGBA,v=THREE.UniformsUtils.clone(y.uniforms),w=THREE.ShaderLib.distanceRGBA,
x=THREE.UniformsUtils.clone(w.uniforms),K=0;K!==p;++K){var F=(K&l)!==0,C=(K&n)!==0,J=new THREE.ShaderMaterial({uniforms:v,vertexShader:y.vertexShader,fragmentShader:y.fragmentShader,morphTargets:F,skinning:C});J._shadowPass=true;r[K]=J;F=new THREE.ShaderMaterial({uniforms:x,vertexShader:w.vertexShader,fragmentShader:w.fragmentShader,morphTargets:F,skinning:C});F._shadowPass=true;s[K]=F}var I=this;this.enabled=false;this.autoUpdate=true;this.needsUpdate=false;this.type=THREE.PCFShadowMap;this.cullFace=
THREE.CullFaceFront;this.render=function(l){var n,p;if(I.enabled!==false&&!(I.autoUpdate===false&&I.needsUpdate===false)){g.clearColor(1,1,1,1);f.disable(g.BLEND);f.enable(g.CULL_FACE);g.frontFace(g.CCW);g.cullFace(I.cullFace===THREE.CullFaceFront?g.FRONT:g.BACK);f.setDepthTest(true);a.getViewport(t);for(var r=0,s=b.length;r<s;r++){var F=b[r];if(F.castShadow===true){var y=F.shadow,v=y.camera,w=y.mapSize;if(F instanceof THREE.PointLight){n=6;p=true;var x=w.x/4,C=w.y/2;A[0].set(x*2,C,x,C);A[1].set(0,
C,x,C);A[2].set(x*3,C,x,C);A[3].set(x,C,x,C);A[4].set(x*3,0,x,C);A[5].set(x,0,x,C)}else{n=1;p=false}if(y.map===null){x=THREE.LinearFilter;if(I.type===THREE.PCFSoftShadowMap)x=THREE.NearestFilter;y.map=new THREE.WebGLRenderTarget(w.x,w.y,{minFilter:x,magFilter:x,format:THREE.RGBAFormat});y.matrix=new THREE.Matrix4;if(F instanceof THREE.SpotLight)v.aspect=w.x/w.y;v.updateProjectionMatrix()}w=y.map;y=y.matrix;k.setFromMatrixPosition(F.matrixWorld);v.position.copy(k);a.setRenderTarget(w);a.clear();for(w=
0;w<n;w++){if(p){i.copy(v.position);i.add(q[w]);v.up.copy(u[w]);v.lookAt(i);x=A[w];a.setViewport(x.x,x.y,x.z,x.w)}else{i.setFromMatrixPosition(F.target.matrixWorld);v.lookAt(i)}v.updateMatrixWorld();v.matrixWorldInverse.getInverse(v.matrixWorld);y.set(0.5,0,0,0.5,0,0.5,0,0.5,0,0,0.5,0.5,0,0,0,1);y.multiply(v.projectionMatrix);y.multiply(v.matrixWorldInverse);j.multiplyMatrices(v.projectionMatrix,v.matrixWorldInverse);h.setFromMatrix(j);m.length=0;e(l,v);x=0;for(C=m.length;x<C;x++){var K=m[x],J=c.update(K),
ca=K.material;if(ca instanceof THREE.MeshFaceMaterial)for(var Y=J.groups,ca=ca.materials,ha=0,pa=Y.length;ha<pa;ha++){var U=Y[ha],X=ca[U.materialIndex];if(X.visible===true){X=d(K,X,p,k);a.renderBufferDirect(v,b,null,J,X,K,U)}}else{X=d(K,ca,p,k);a.renderBufferDirect(v,b,null,J,X,K,null)}}}a.resetGLState()}}a.setViewport(t.x,t.y,t.z,t.w);l=a.getClearColor();n=a.getClearAlpha();a.setClearColor(l,n);f.enable(g.BLEND);I.cullFace===THREE.CullFaceFront&&g.cullFace(g.BACK);a.resetGLState();I.needsUpdate=
false}}};
THREE.WebGLState=function(a,b,c){var d=this,e=new Uint8Array(16),g=new Uint8Array(16),f=new Uint8Array(16),h={},j=null,i=null,k=null,m=null,l=null,n=null,p=null,r=null,s=null,q=null,u=null,A=null,t=null,y=null,v=null,w=a.getParameter(a.MAX_TEXTURE_IMAGE_UNITS),x=void 0,K={};this.init=function(){a.clearColor(0,0,0,1);a.clearDepth(1);a.clearStencil(0);this.enable(a.DEPTH_TEST);a.depthFunc(a.LEQUAL);a.frontFace(a.CCW);a.cullFace(a.BACK);this.enable(a.CULL_FACE);this.enable(a.BLEND);a.blendEquation(a.FUNC_ADD);a.blendFunc(a.SRC_ALPHA,
a.ONE_MINUS_SRC_ALPHA)};this.initAttributes=function(){for(var a=0,b=e.length;a<b;a++)e[a]=0};this.enableAttribute=function(c){e[c]=1;if(g[c]===0){a.enableVertexAttribArray(c);g[c]=1}if(f[c]!==0){b.get("ANGLE_instanced_arrays").vertexAttribDivisorANGLE(c,0);f[c]=0}};this.enableAttributeAndDivisor=function(b,c,d){e[b]=1;if(g[b]===0){a.enableVertexAttribArray(b);g[b]=1}if(f[b]!==c){d.vertexAttribDivisorANGLE(b,c);f[b]=c}};this.disableUnusedAttributes=function(){for(var b=0,c=g.length;b<c;b++)if(g[b]!==
e[b]){a.disableVertexAttribArray(b);g[b]=0}};this.enable=function(b){if(h[b]!==true){a.enable(b);h[b]=true}};this.disable=function(b){if(h[b]!==false){a.disable(b);h[b]=false}};this.getCompressedTextureFormats=function(){if(j===null){j=[];if(b.get("WEBGL_compressed_texture_pvrtc")||b.get("WEBGL_compressed_texture_s3tc"))for(var c=a.getParameter(a.COMPRESSED_TEXTURE_FORMATS),d=0;d<c.length;d++)j.push(c[d])}return j};this.setBlending=function(b,d,e,f,g,h,j){if(b!==i){if(b===THREE.NoBlending)this.disable(a.BLEND);
else if(b===THREE.AdditiveBlending){this.enable(a.BLEND);a.blendEquation(a.FUNC_ADD);a.blendFunc(a.SRC_ALPHA,a.ONE)}else if(b===THREE.SubtractiveBlending){this.enable(a.BLEND);a.blendEquation(a.FUNC_ADD);a.blendFunc(a.ZERO,a.ONE_MINUS_SRC_COLOR)}else if(b===THREE.MultiplyBlending){this.enable(a.BLEND);a.blendEquation(a.FUNC_ADD);a.blendFunc(a.ZERO,a.SRC_COLOR)}else if(b===THREE.CustomBlending)this.enable(a.BLEND);else{this.enable(a.BLEND);a.blendEquationSeparate(a.FUNC_ADD,a.FUNC_ADD);a.blendFuncSeparate(a.SRC_ALPHA,
a.ONE_MINUS_SRC_ALPHA,a.ONE,a.ONE_MINUS_SRC_ALPHA)}i=b}if(b===THREE.CustomBlending){g=g||d;h=h||e;j=j||f;if(d!==k||g!==n){a.blendEquationSeparate(c(d),c(g));k=d;n=g}if(e!==m||f!==l||h!==p||j!==r){a.blendFuncSeparate(c(e),c(f),c(h),c(j));m=e;l=f;p=h;r=j}}else r=p=n=l=m=k=null};this.setDepthFunc=function(b){if(s!==b){if(b)switch(b){case THREE.NeverDepth:a.depthFunc(a.NEVER);break;case THREE.AlwaysDepth:a.depthFunc(a.ALWAYS);break;case THREE.LessDepth:a.depthFunc(a.LESS);break;case THREE.LessEqualDepth:a.depthFunc(a.LEQUAL);
break;case THREE.EqualDepth:a.depthFunc(a.EQUAL);break;case THREE.GreaterEqualDepth:a.depthFunc(a.GEQUAL);break;case THREE.GreaterDepth:a.depthFunc(a.GREATER);break;case THREE.NotEqualDepth:a.depthFunc(a.NOTEQUAL);break;default:a.depthFunc(a.LEQUAL)}else a.depthFunc(a.LEQUAL);s=b}};this.setDepthTest=function(b){b?this.enable(a.DEPTH_TEST):this.disable(a.DEPTH_TEST)};this.setDepthWrite=function(b){if(q!==b){a.depthMask(b);q=b}};this.setColorWrite=function(b){if(u!==b){a.colorMask(b,b,b,b);u=b}};this.setFlipSided=
function(b){if(A!==b){b?a.frontFace(a.CW):a.frontFace(a.CCW);A=b}};this.setLineWidth=function(b){if(b!==t){a.lineWidth(b);t=b}};this.setPolygonOffset=function(b,c,d){b?this.enable(a.POLYGON_OFFSET_FILL):this.disable(a.POLYGON_OFFSET_FILL);if(b&&(y!==c||v!==d)){a.polygonOffset(c,d);y=c;v=d}};this.setScissorTest=function(b){b?this.enable(a.SCISSOR_TEST):this.disable(a.SCISSOR_TEST)};this.activeTexture=function(b){b===void 0&&(b=a.TEXTURE0+w-1);if(x!==b){a.activeTexture(b);x=b}};this.bindTexture=function(b,
c){x===void 0&&d.activeTexture();var e=K[x];if(e===void 0){e={type:void 0,texture:void 0};K[x]=e}if(e.type!==b||e.texture!==c){a.bindTexture(b,c);e.type=b;e.texture=c}};this.compressedTexImage2D=function(){try{a.compressedTexImage2D.apply(a,arguments)}catch(b){console.error(b)}};this.texImage2D=function(){try{a.texImage2D.apply(a,arguments)}catch(b){console.error(b)}};this.reset=function(){for(var b=0;b<g.length;b++)if(g[b]===1){a.disableVertexAttribArray(b);g[b]=0}h={};A=u=q=i=j=null}};
THREE.LensFlarePlugin=function(a,b){var c,d,e,g,f,h,j,i,k,m,l=a.context,n=a.state,p,r,s,q,u,A;this.render=function(t,y,v,w){if(b.length!==0){var t=new THREE.Vector3,x=w/v,K=v*0.5,F=w*0.5,C=16/w,J=new THREE.Vector2(C*x,C),I=new THREE.Vector3(1,1,0),L=new THREE.Vector2(1,1);if(s===void 0){var C=new Float32Array([-1,-1,0,0,1,-1,1,0,1,1,1,1,-1,1,0,1]),D=new Uint16Array([0,1,2,0,2,3]);p=l.createBuffer();r=l.createBuffer();l.bindBuffer(l.ARRAY_BUFFER,p);l.bufferData(l.ARRAY_BUFFER,C,l.STATIC_DRAW);l.bindBuffer(l.ELEMENT_ARRAY_BUFFER,
r);l.bufferData(l.ELEMENT_ARRAY_BUFFER,D,l.STATIC_DRAW);u=l.createTexture();A=l.createTexture();n.bindTexture(l.TEXTURE_2D,u);l.texImage2D(l.TEXTURE_2D,0,l.RGB,16,16,0,l.RGB,l.UNSIGNED_BYTE,null);l.texParameteri(l.TEXTURE_2D,l.TEXTURE_WRAP_S,l.CLAMP_TO_EDGE);l.texParameteri(l.TEXTURE_2D,l.TEXTURE_WRAP_T,l.CLAMP_TO_EDGE);l.texParameteri(l.TEXTURE_2D,l.TEXTURE_MAG_FILTER,l.NEAREST);l.texParameteri(l.TEXTURE_2D,l.TEXTURE_MIN_FILTER,l.NEAREST);n.bindTexture(l.TEXTURE_2D,A);l.texImage2D(l.TEXTURE_2D,0,
l.RGBA,16,16,0,l.RGBA,l.UNSIGNED_BYTE,null);l.texParameteri(l.TEXTURE_2D,l.TEXTURE_WRAP_S,l.CLAMP_TO_EDGE);l.texParameteri(l.TEXTURE_2D,l.TEXTURE_WRAP_T,l.CLAMP_TO_EDGE);l.texParameteri(l.TEXTURE_2D,l.TEXTURE_MAG_FILTER,l.NEAREST);l.texParameteri(l.TEXTURE_2D,l.TEXTURE_MIN_FILTER,l.NEAREST);var C=(q=l.getParameter(l.MAX_VERTEX_TEXTURE_IMAGE_UNITS)>0)?{vertexShader:"uniform lowp int renderType;\nuniform vec3 screenPosition;\nuniform vec2 scale;\nuniform float rotation;\nuniform sampler2D occlusionMap;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\nvUV = uv;\nvec2 pos = position;\nif ( renderType == 2 ) {\nvec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );\nvVisibility =        visibility.r / 9.0;\nvVisibility *= 1.0 - visibility.g / 9.0;\nvVisibility *=       visibility.b / 9.0;\nvVisibility *= 1.0 - visibility.a / 9.0;\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\n}\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n}",
fragmentShader:"uniform lowp int renderType;\nuniform sampler2D map;\nuniform float opacity;\nuniform vec3 color;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\nif ( renderType == 0 ) {\ngl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\n} else if ( renderType == 1 ) {\ngl_FragColor = texture2D( map, vUV );\n} else {\nvec4 texture = texture2D( map, vUV );\ntexture.a *= opacity * vVisibility;\ngl_FragColor = texture;\ngl_FragColor.rgb *= color;\n}\n}"}:{vertexShader:"uniform lowp int renderType;\nuniform vec3 screenPosition;\nuniform vec2 scale;\nuniform float rotation;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvoid main() {\nvUV = uv;\nvec2 pos = position;\nif ( renderType == 2 ) {\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\n}\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n}",
fragmentShader:"precision mediump float;\nuniform lowp int renderType;\nuniform sampler2D map;\nuniform sampler2D occlusionMap;\nuniform float opacity;\nuniform vec3 color;\nvarying vec2 vUV;\nvoid main() {\nif ( renderType == 0 ) {\ngl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );\n} else if ( renderType == 1 ) {\ngl_FragColor = texture2D( map, vUV );\n} else {\nfloat visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a;\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a;\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a;\nvisibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;\nvisibility = ( 1.0 - visibility / 4.0 );\nvec4 texture = texture2D( map, vUV );\ntexture.a *= opacity * visibility;\ngl_FragColor = texture;\ngl_FragColor.rgb *= color;\n}\n}"},
D=l.createProgram(),B=l.createShader(l.FRAGMENT_SHADER),z=l.createShader(l.VERTEX_SHADER),H="precision "+a.getPrecision()+" float;\n";l.shaderSource(B,H+C.fragmentShader);l.shaderSource(z,H+C.vertexShader);l.compileShader(B);l.compileShader(z);l.attachShader(D,B);l.attachShader(D,z);l.linkProgram(D);s=D;k=l.getAttribLocation(s,"position");m=l.getAttribLocation(s,"uv");c=l.getUniformLocation(s,"renderType");d=l.getUniformLocation(s,"map");e=l.getUniformLocation(s,"occlusionMap");g=l.getUniformLocation(s,
"opacity");f=l.getUniformLocation(s,"color");h=l.getUniformLocation(s,"scale");j=l.getUniformLocation(s,"rotation");i=l.getUniformLocation(s,"screenPosition")}l.useProgram(s);n.initAttributes();n.enableAttribute(k);n.enableAttribute(m);n.disableUnusedAttributes();l.uniform1i(e,0);l.uniform1i(d,1);l.bindBuffer(l.ARRAY_BUFFER,p);l.vertexAttribPointer(k,2,l.FLOAT,false,16,0);l.vertexAttribPointer(m,2,l.FLOAT,false,16,8);l.bindBuffer(l.ELEMENT_ARRAY_BUFFER,r);n.disable(l.CULL_FACE);l.depthMask(false);
D=0;for(B=b.length;D<B;D++){C=16/w;J.set(C*x,C);z=b[D];t.set(z.matrixWorld.elements[12],z.matrixWorld.elements[13],z.matrixWorld.elements[14]);t.applyMatrix4(y.matrixWorldInverse);t.applyProjection(y.projectionMatrix);I.copy(t);L.x=I.x*K+K;L.y=I.y*F+F;if(q||L.x>0&&L.x<v&&L.y>0&&L.y<w){n.activeTexture(l.TEXTURE0);n.bindTexture(l.TEXTURE_2D,null);n.activeTexture(l.TEXTURE1);n.bindTexture(l.TEXTURE_2D,u);l.copyTexImage2D(l.TEXTURE_2D,0,l.RGB,L.x-8,L.y-8,16,16,0);l.uniform1i(c,0);l.uniform2f(h,J.x,J.y);
l.uniform3f(i,I.x,I.y,I.z);n.disable(l.BLEND);n.enable(l.DEPTH_TEST);l.drawElements(l.TRIANGLES,6,l.UNSIGNED_SHORT,0);n.activeTexture(l.TEXTURE0);n.bindTexture(l.TEXTURE_2D,A);l.copyTexImage2D(l.TEXTURE_2D,0,l.RGBA,L.x-8,L.y-8,16,16,0);l.uniform1i(c,1);n.disable(l.DEPTH_TEST);n.activeTexture(l.TEXTURE1);n.bindTexture(l.TEXTURE_2D,u);l.drawElements(l.TRIANGLES,6,l.UNSIGNED_SHORT,0);z.positionScreen.copy(I);z.customUpdateCallback?z.customUpdateCallback(z):z.updateLensFlares();l.uniform1i(c,2);n.enable(l.BLEND);
for(var H=0,Q=z.lensFlares.length;H<Q;H++){var O=z.lensFlares[H];if(O.opacity>0.001&&O.scale>0.001){I.x=O.x;I.y=O.y;I.z=O.z;C=O.size*O.scale/w;J.x=C*x;J.y=C;l.uniform3f(i,I.x,I.y,I.z);l.uniform2f(h,J.x,J.y);l.uniform1f(j,O.rotation);l.uniform1f(g,O.opacity);l.uniform3f(f,O.color.r,O.color.g,O.color.b);n.setBlending(O.blending,O.blendEquation,O.blendSrc,O.blendDst);a.setTexture(O.texture,1);l.drawElements(l.TRIANGLES,6,l.UNSIGNED_SHORT,0)}}}}n.enable(l.CULL_FACE);n.enable(l.DEPTH_TEST);l.depthMask(true);
a.resetGLState()}}};
THREE.SpritePlugin=function(a,b){var c,d,e,g,f,h,j,i,k,m,l,n,p,r,s,q,u;function A(a,b){return a.z!==b.z?b.z-a.z:b.id-a.id}var t=a.context,y=a.state,v,w,x,K,F=new THREE.Vector3,C=new THREE.Quaternion,J=new THREE.Vector3;this.render=function(I,L){if(b.length!==0){if(x===void 0){var D=new Float32Array([-0.5,-0.5,0,0,0.5,-0.5,1,0,0.5,0.5,1,1,-0.5,0.5,0,1]),B=new Uint16Array([0,1,2,0,2,3]);v=t.createBuffer();w=t.createBuffer();t.bindBuffer(t.ARRAY_BUFFER,v);t.bufferData(t.ARRAY_BUFFER,D,t.STATIC_DRAW);
t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,w);t.bufferData(t.ELEMENT_ARRAY_BUFFER,B,t.STATIC_DRAW);var D=t.createProgram(),B=t.createShader(t.VERTEX_SHADER),z=t.createShader(t.FRAGMENT_SHADER);t.shaderSource(B,["precision "+a.getPrecision()+" float;","uniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform float rotation;\nuniform vec2 scale;\nuniform vec2 uvOffset;\nuniform vec2 uvScale;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvoid main() {\nvUV = uvOffset + uv * uvScale;\nvec2 alignedPosition = position * scale;\nvec2 rotatedPosition;\nrotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\nrotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\nvec4 finalPosition;\nfinalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\nfinalPosition.xy += rotatedPosition;\nfinalPosition = projectionMatrix * finalPosition;\ngl_Position = finalPosition;\n}"].join("\n"));
t.shaderSource(z,["precision "+a.getPrecision()+" float;","uniform vec3 color;\nuniform sampler2D map;\nuniform float opacity;\nuniform int fogType;\nuniform vec3 fogColor;\nuniform float fogDensity;\nuniform float fogNear;\nuniform float fogFar;\nuniform float alphaTest;\nvarying vec2 vUV;\nvoid main() {\nvec4 texture = texture2D( map, vUV );\nif ( texture.a < alphaTest ) discard;\ngl_FragColor = vec4( color * texture.xyz, texture.a * opacity );\nif ( fogType > 0 ) {\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\nfloat fogFactor = 0.0;\nif ( fogType == 1 ) {\nfogFactor = smoothstep( fogNear, fogFar, depth );\n} else {\nconst float LOG2 = 1.442695;\nfogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n}\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n}\n}"].join("\n"));
t.compileShader(B);t.compileShader(z);t.attachShader(D,B);t.attachShader(D,z);t.linkProgram(D);x=D;q=t.getAttribLocation(x,"position");u=t.getAttribLocation(x,"uv");c=t.getUniformLocation(x,"uvOffset");d=t.getUniformLocation(x,"uvScale");e=t.getUniformLocation(x,"rotation");g=t.getUniformLocation(x,"scale");f=t.getUniformLocation(x,"color");h=t.getUniformLocation(x,"map");j=t.getUniformLocation(x,"opacity");i=t.getUniformLocation(x,"modelViewMatrix");k=t.getUniformLocation(x,"projectionMatrix");m=
t.getUniformLocation(x,"fogType");l=t.getUniformLocation(x,"fogDensity");n=t.getUniformLocation(x,"fogNear");p=t.getUniformLocation(x,"fogFar");r=t.getUniformLocation(x,"fogColor");s=t.getUniformLocation(x,"alphaTest");D=document.createElement("canvas");D.width=8;D.height=8;B=D.getContext("2d");B.fillStyle="white";B.fillRect(0,0,8,8);K=new THREE.Texture(D);K.needsUpdate=true}t.useProgram(x);y.initAttributes();y.enableAttribute(q);y.enableAttribute(u);y.disableUnusedAttributes();y.disable(t.CULL_FACE);
y.enable(t.BLEND);t.bindBuffer(t.ARRAY_BUFFER,v);t.vertexAttribPointer(q,2,t.FLOAT,false,16,0);t.vertexAttribPointer(u,2,t.FLOAT,false,16,8);t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,w);t.uniformMatrix4fv(k,false,L.projectionMatrix.elements);y.activeTexture(t.TEXTURE0);t.uniform1i(h,0);B=D=0;if(z=I.fog){t.uniform3f(r,z.color.r,z.color.g,z.color.b);if(z instanceof THREE.Fog){t.uniform1f(n,z.near);t.uniform1f(p,z.far);t.uniform1i(m,1);B=D=1}else if(z instanceof THREE.FogExp2){t.uniform1f(l,z.density);t.uniform1i(m,
2);B=D=2}}else{t.uniform1i(m,0);B=D=0}for(var z=0,H=b.length;z<H;z++){var Q=b[z];Q.modelViewMatrix.multiplyMatrices(L.matrixWorldInverse,Q.matrixWorld);Q.z=-Q.modelViewMatrix.elements[14]}b.sort(A);for(var O=[],z=0,H=b.length;z<H;z++){var Q=b[z],M=Q.material;t.uniform1f(s,M.alphaTest);t.uniformMatrix4fv(i,false,Q.modelViewMatrix.elements);Q.matrixWorld.decompose(F,C,J);O[0]=J.x;O[1]=J.y;Q=0;I.fog&&M.fog&&(Q=B);if(D!==Q){t.uniform1i(m,Q);D=Q}if(M.map!==null){t.uniform2f(c,M.map.offset.x,M.map.offset.y);
t.uniform2f(d,M.map.repeat.x,M.map.repeat.y)}else{t.uniform2f(c,0,0);t.uniform2f(d,1,1)}t.uniform1f(j,M.opacity);t.uniform3f(f,M.color.r,M.color.g,M.color.b);t.uniform1f(e,M.rotation);t.uniform2fv(g,O);y.setBlending(M.blending,M.blendEquation,M.blendSrc,M.blendDst);y.setDepthTest(M.depthTest);y.setDepthWrite(M.depthWrite);M.map&&M.map.image&&M.map.image.width?a.setTexture(M.map,0):a.setTexture(K,0);t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0)}y.enable(t.CULL_FACE);a.resetGLState()}}};
THREE.CurveUtils={tangentQuadraticBezier:function(a,b,c,d){return 2*(1-a)*(c-b)+2*a*(d-c)},tangentCubicBezier:function(a,b,c,d,e){return-3*b*(1-a)*(1-a)+3*c*(1-a)*(1-a)-6*a*c*(1-a)+6*a*d*(1-a)-3*a*a*d+3*a*a*e},tangentSpline:function(a){return 6*a*a-6*a+(3*a*a-4*a+1)+(-6*a*a+6*a)+(3*a*a-2*a)},interpolate:function(a,b,c,d,e){var a=(c-a)*0.5,d=(d-b)*0.5,g=e*e;return(2*b-2*c+a+d)*e*g+(-3*b+3*c-2*a-d)*g+a*e+b}};
THREE.GeometryUtils={merge:function(a,b,c){console.warn("THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.");var d;if(b instanceof THREE.Mesh){b.matrixAutoUpdate&&b.updateMatrix();d=b.matrix;b=b.geometry}a.merge(b,d,c)},center:function(a){console.warn("THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead.");return a.center()}};
THREE.ImageUtils={crossOrigin:void 0,loadTexture:function(a,b,c,d){var e=new THREE.TextureLoader;e.setCrossOrigin(this.crossOrigin);a=e.load(a,c,void 0,d);if(b)a.mapping=b;return a},loadTextureCube:function(a,b,c,d){var e=new THREE.CubeTextureLoader;e.setCrossOrigin(this.crossOrigin);a=e.load(a,c,void 0,d);if(b)a.mapping=b;return a},loadCompressedTexture:function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")},loadCompressedTextureCube:function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")}};
THREE.SceneUtils={createMultiMaterialObject:function(a,b){for(var c=new THREE.Group,d=0,e=b.length;d<e;d++)c.add(new THREE.Mesh(a,b[d]));return c},detach:function(a,b,c){a.applyMatrix(b.matrixWorld);b.remove(a);c.add(a)},attach:function(a,b,c){var d=new THREE.Matrix4;d.getInverse(c.matrixWorld);a.applyMatrix(d);b.remove(a);c.add(a)}};
THREE.ShapeUtils={area:function(a){for(var b=a.length,c=0,d=b-1,e=0;e<b;d=e++)c=c+(a[d].x*a[e].y-a[e].x*a[d].y);return c*0.5},triangulate:function(){return function(a,b){var c=a.length;if(c<3)return null;var d=[],e=[],g=[],f,h,j;if(THREE.ShapeUtils.area(a)>0)for(h=0;h<c;h++)e[h]=h;else for(h=0;h<c;h++)e[h]=c-1-h;var i=2*c;for(h=c-1;c>2;){if(i--<=0){console.warn("THREE.ShapeUtils: Unable to triangulate polygon! in triangulate()");break}f=h;c<=f&&(f=0);h=f+1;c<=h&&(h=0);j=h+1;c<=j&&(j=0);var k;a:{var m=
k=void 0,l=void 0,n=void 0,p=void 0,r=void 0,s=void 0,q=void 0,u=void 0,m=a[e[f]].x,l=a[e[f]].y,n=a[e[h]].x,p=a[e[h]].y,r=a[e[j]].x,s=a[e[j]].y;if(Number.EPSILON>(n-m)*(s-l)-(p-l)*(r-m))k=false;else{var A=void 0,t=void 0,y=void 0,v=void 0,w=void 0,x=void 0,K=void 0,F=void 0,C=void 0,J=void 0,C=F=K=u=q=void 0,A=r-n,t=s-p,y=m-r,v=l-s,w=n-m,x=p-l;for(k=0;k<c;k++){q=a[e[k]].x;u=a[e[k]].y;if(!(q===m&&u===l||q===n&&u===p||q===r&&u===s)){K=q-m;F=u-l;C=q-n;J=u-p;q=q-r;u=u-s;C=A*J-t*C;K=w*F-x*K;F=y*u-v*q;
if(C>=-Number.EPSILON&&F>=-Number.EPSILON&&K>=-Number.EPSILON){k=false;break a}}}k=true}}if(k){d.push([a[e[f]],a[e[h]],a[e[j]]]);g.push([e[f],e[h],e[j]]);f=h;for(j=h+1;j<c;f++,j++)e[f]=e[j];c--;i=2*c}}return b?g:d}}(),triangulateShape:function(a,b){function c(a,b,c){return a.x!==b.x?a.x<b.x?a.x<=c.x&&c.x<=b.x:b.x<=c.x&&c.x<=a.x:a.y<b.y?a.y<=c.y&&c.y<=b.y:b.y<=c.y&&c.y<=a.y}function d(a,b,d,e,f){var g=b.x-a.x,h=b.y-a.y,i=e.x-d.x,j=e.y-d.y,k=a.x-d.x,m=a.y-d.y,w=h*i-g*j,x=h*k-g*m;if(Math.abs(w)>Number.EPSILON){if(w>
0){if(x<0||x>w)return[];i=j*k-i*m;if(i<0||i>w)return[]}else{if(x>0||x<w)return[];i=j*k-i*m;if(i>0||i<w)return[]}if(i===0)return f&&(x===0||x===w)?[]:[a];if(i===w)return f&&(x===0||x===w)?[]:[b];if(x===0)return[d];if(x===w)return[e];f=i/w;return[{x:a.x+f*g,y:a.y+f*h}]}if(x!==0||j*k!==i*m)return[];h=g===0&&h===0;i=i===0&&j===0;if(h&&i)return a.x!==d.x||a.y!==d.y?[]:[a];if(h)return!c(d,e,a)?[]:[a];if(i)return!c(a,b,d)?[]:[d];if(g!==0){if(a.x<b.x){g=a;i=a.x;h=b;a=b.x}else{g=b;i=b.x;h=a;a=a.x}if(d.x<e.x){b=
d;w=d.x;j=e;d=e.x}else{b=e;w=e.x;j=d;d=d.x}}else{if(a.y<b.y){g=a;i=a.y;h=b;a=b.y}else{g=b;i=b.y;h=a;a=a.y}if(d.y<e.y){b=d;w=d.y;j=e;d=e.y}else{b=e;w=e.y;j=d;d=d.y}}return i<=w?a<w?[]:a===w?f?[]:[b]:a<=d?[b,h]:[b,j]:i>d?[]:i===d?f?[]:[g]:a<=d?[g,h]:[g,j]}function e(a,b,c,d){var e=b.x-a.x,f=b.y-a.y,b=c.x-a.x,c=c.y-a.y,g=d.x-a.x,d=d.y-a.y,a=e*c-f*b,e=e*d-f*g;if(Math.abs(a)>Number.EPSILON){b=g*c-d*b;return a>0?e>=0&&b>=0:e>=0||b>=0}return e>0}var g,f,h,j,i,k={};h=a.concat();g=0;for(f=b.length;g<f;g++)Array.prototype.push.apply(h,
b[g]);g=0;for(f=h.length;g<f;g++){i=h[g].x+":"+h[g].y;k[i]!==void 0&&console.warn("THREE.Shape: Duplicate point",i);k[i]=g}g=function(a,b){function c(a,b){var d=h.length-1,f=a-1;f<0&&(f=d);var g=a+1;g>d&&(g=0);d=e(h[a],h[f],h[g],i[b]);if(!d)return false;d=i.length-1;f=b-1;f<0&&(f=d);g=b+1;g>d&&(g=0);d=e(i[b],i[f],i[g],h[a]);return!d?false:true}function f(a,b){var c,e;for(c=0;c<h.length;c++){e=c+1;e=e%h.length;e=d(a,b,h[c],h[e],true);if(e.length>0)return true}return false}function g(a,c){var e,f,h,
i;for(e=0;e<j.length;e++){f=b[j[e]];for(h=0;h<f.length;h++){i=h+1;i=i%f.length;i=d(a,c,f[h],f[i],true);if(i.length>0)return true}}return false}var h=a.concat(),i,j=[],k,m,v,w,x,K=[],F,C,J,I=0;for(k=b.length;I<k;I++)j.push(I);F=0;for(var L=j.length*2;j.length>0;){L--;if(L<0){console.log("Infinite Loop! Holes left:"+j.length+", Probably Hole outside Shape!");break}for(m=F;m<h.length;m++){v=h[m];k=-1;for(I=0;I<j.length;I++){w=j[I];x=v.x+":"+v.y+":"+w;if(K[x]===void 0){i=b[w];for(C=0;C<i.length;C++){w=
i[C];if(c(m,C)&&!f(v,w)&&!g(v,w)){k=C;j.splice(I,1);F=h.slice(0,m+1);w=h.slice(m);C=i.slice(k);J=i.slice(0,k+1);h=F.concat(C).concat(J).concat(w);F=m;break}}if(k>=0)break;K[x]=true}}if(k>=0)break}}return h}(a,b);var m=THREE.ShapeUtils.triangulate(g,false);g=0;for(f=m.length;g<f;g++){j=m[g];for(h=0;h<3;h++){i=j[h].x+":"+j[h].y;i=k[i];i!==void 0&&(j[h]=i)}}return m.concat()},isClockWise:function(a){return THREE.ShapeUtils.area(a)<0},b2:function(){return function(a,b,c,d){var e=1-a;return e*e*b+2*(1-
a)*a*c+a*a*d}}(),b3:function(){return function(a,b,c,d,e){var g=1-a,f=1-a;return g*g*g*b+3*f*f*a*c+3*(1-a)*a*a*d+a*a*a*e}}()};
THREE.Audio=function(a){THREE.Object3D.call(this);this.type="Audio";this.context=a.context;this.source=this.context.createBufferSource();this.source.onended=this.onEnded.bind(this);this.gain=this.context.createGain();this.gain.connect(this.context.destination);this.panner=this.context.createPanner();this.panner.connect(this.gain);this.autoplay=false;this.startTime=0;this.playbackRate=1;this.isPlaying=false};THREE.Audio.prototype=Object.create(THREE.Object3D.prototype);
THREE.Audio.prototype.constructor=THREE.Audio;THREE.Audio.prototype.load=function(a){var b=this,c=new XMLHttpRequest;c.open("GET",a,true);c.responseType="arraybuffer";c.onload=function(){b.context.decodeAudioData(this.response,function(a){b.source.buffer=a;b.autoplay&&b.play()})};c.send();return this};
THREE.Audio.prototype.play=function(){if(this.isPlaying===true)console.warn("THREE.Audio: Audio is already playing.");else{var a=this.context.createBufferSource();a.buffer=this.source.buffer;a.loop=this.source.loop;a.onended=this.source.onended;a.start(0,this.startTime);a.playbackRate.value=this.playbackRate;this.isPlaying=true;this.source=a;this.connect()}};THREE.Audio.prototype.pause=function(){this.source.stop();this.startTime=this.context.currentTime};
THREE.Audio.prototype.stop=function(){this.source.stop();this.startTime=0};THREE.Audio.prototype.connect=function(){if(this.filter!==void 0){this.source.connect(this.filter);this.filter.connect(this.panner)}else this.source.connect(this.panner)};THREE.Audio.prototype.disconnect=function(){if(this.filter!==void 0){this.source.disconnect(this.filter);this.filter.disconnect(this.panner)}else this.source.disconnect(this.panner)};
THREE.Audio.prototype.setFilter=function(a){if(this.isPlaying===true){this.disconnect();this.filter=a;this.connect()}else this.filter=a};THREE.Audio.prototype.getFilter=function(){return this.filter};THREE.Audio.prototype.setPlaybackRate=function(a){this.playbackRate=a;if(this.isPlaying===true)this.source.playbackRate.value=this.playbackRate};THREE.Audio.prototype.getPlaybackRate=function(){return this.playbackRate};THREE.Audio.prototype.onEnded=function(){this.isPlaying=false};
THREE.Audio.prototype.setLoop=function(a){this.source.loop=a};THREE.Audio.prototype.getLoop=function(){return this.source.loop};THREE.Audio.prototype.setRefDistance=function(a){this.panner.refDistance=a};THREE.Audio.prototype.getRefDistance=function(){return this.panner.refDistance};THREE.Audio.prototype.setRolloffFactor=function(a){this.panner.rolloffFactor=a};THREE.Audio.prototype.getRolloffFactor=function(){return this.panner.rolloffFactor};
THREE.Audio.prototype.setVolume=function(a){this.gain.gain.value=a};THREE.Audio.prototype.getVolume=function(){return this.gain.gain.value};THREE.Audio.prototype.updateMatrixWorld=function(){var a=new THREE.Vector3;return function(b){THREE.Object3D.prototype.updateMatrixWorld.call(this,b);a.setFromMatrixPosition(this.matrixWorld);this.panner.setPosition(a.x,a.y,a.z)}}();THREE.AudioListener=function(){THREE.Object3D.call(this);this.type="AudioListener";this.context=new (window.AudioContext||window.webkitAudioContext)};
THREE.AudioListener.prototype=Object.create(THREE.Object3D.prototype);THREE.AudioListener.prototype.constructor=THREE.AudioListener;
THREE.AudioListener.prototype.updateMatrixWorld=function(){var a=new THREE.Vector3,b=new THREE.Quaternion,c=new THREE.Vector3,d=new THREE.Vector3;return function(e){THREE.Object3D.prototype.updateMatrixWorld.call(this,e);var e=this.context.listener,g=this.up;this.matrixWorld.decompose(a,b,c);d.set(0,0,-1).applyQuaternion(b);e.setPosition(a.x,a.y,a.z);e.setOrientation(d.x,d.y,d.z,g.x,g.y,g.z)}}();THREE.Curve=function(){};
THREE.Curve.prototype={constructor:THREE.Curve,getPoint:function(){console.warn("THREE.Curve: Warning, getPoint() not implemented!");return null},getPointAt:function(a){return this.getPoint(this.getUtoTmapping(a))},getPoints:function(a){a||(a=5);var b,c=[];for(b=0;b<=a;b++)c.push(this.getPoint(b/a));return c},getSpacedPoints:function(a){a||(a=5);var b,c=[];for(b=0;b<=a;b++)c.push(this.getPointAt(b/a));return c},getLength:function(){var a=this.getLengths();return a[a.length-1]},getLengths:function(a){a||
(a=this.__arcLengthDivisions?this.__arcLengthDivisions:200);if(this.cacheArcLengths&&this.cacheArcLengths.length===a+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=false;var b=[],c,d=this.getPoint(0),e,g=0;b.push(0);for(e=1;e<=a;e++){c=this.getPoint(e/a);g=g+c.distanceTo(d);b.push(g);d=c}return this.cacheArcLengths=b},updateArcLengths:function(){this.needsUpdate=true;this.getLengths()},getUtoTmapping:function(a,b){var c=this.getLengths(),d=0,e=c.length,g;g=b?b:a*c[e-1];for(var f=
0,h=e-1,j;f<=h;){d=Math.floor(f+(h-f)/2);j=c[d]-g;if(j<0)f=d+1;else if(j>0)h=d-1;else{h=d;break}}d=h;if(c[d]===g)return d/(e-1);f=c[d];return c=(d+(g-f)/(c[d+1]-f))/(e-1)},getTangent:function(a){var b=a-1.0E-4,a=a+1.0E-4;b<0&&(b=0);a>1&&(a=1);b=this.getPoint(b);return this.getPoint(a).clone().sub(b).normalize()},getTangentAt:function(a){return this.getTangent(this.getUtoTmapping(a))}};THREE.Curve.Utils=THREE.CurveUtils;
THREE.Curve.create=function(a,b){a.prototype=Object.create(THREE.Curve.prototype);a.prototype.constructor=a;a.prototype.getPoint=b;return a};THREE.CurvePath=function(){this.curves=[];this.autoClose=false};THREE.CurvePath.prototype=Object.create(THREE.Curve.prototype);THREE.CurvePath.prototype.constructor=THREE.CurvePath;THREE.CurvePath.prototype.add=function(a){this.curves.push(a)};
THREE.CurvePath.prototype.closePath=function(){var a=this.curves[0].getPoint(0),b=this.curves[this.curves.length-1].getPoint(1);a.equals(b)||this.curves.push(new THREE.LineCurve(b,a))};THREE.CurvePath.prototype.getPoint=function(a){for(var b=a*this.getLength(),c=this.getCurveLengths(),d=0;d<c.length;){if(c[d]>=b){a=this.curves[d];b=1-(c[d]-b)/a.getLength();return a.getPointAt(b)}d++}return null};THREE.CurvePath.prototype.getLength=function(){var a=this.getCurveLengths();return a[a.length-1]};
THREE.CurvePath.prototype.getCurveLengths=function(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;for(var a=[],b=0,c=0,d=this.curves.length;c<d;c++){b=b+this.curves[c].getLength();a.push(b)}return this.cacheLengths=a};THREE.CurvePath.prototype.createPointsGeometry=function(a){return this.createGeometry(this.getPoints(a,true))};THREE.CurvePath.prototype.createSpacedPointsGeometry=function(a){return this.createGeometry(this.getSpacedPoints(a,true))};
THREE.CurvePath.prototype.createGeometry=function(a){for(var b=new THREE.Geometry,c=0,d=a.length;c<d;c++){var e=a[c];b.vertices.push(new THREE.Vector3(e.x,e.y,e.z||0))}return b};THREE.Path=function(a){THREE.CurvePath.call(this);this.actions=[];a&&this.fromPoints(a)};THREE.Path.prototype=Object.create(THREE.CurvePath.prototype);THREE.Path.prototype.constructor=THREE.Path;THREE.Path.prototype.fromPoints=function(a){this.moveTo(a[0].x,a[0].y);for(var b=1,c=a.length;b<c;b++)this.lineTo(a[b].x,a[b].y)};
THREE.Path.prototype.moveTo=function(a,b){this.actions.push({action:"moveTo",args:[a,b]})};THREE.Path.prototype.lineTo=function(a,b){var c=this.actions[this.actions.length-1].args;this.curves.push(new THREE.LineCurve(new THREE.Vector2(c[c.length-2],c[c.length-1]),new THREE.Vector2(a,b)));this.actions.push({action:"lineTo",args:[a,b]})};
THREE.Path.prototype.quadraticCurveTo=function(a,b,c,d){var e=this.actions[this.actions.length-1].args;this.curves.push(new THREE.QuadraticBezierCurve(new THREE.Vector2(e[e.length-2],e[e.length-1]),new THREE.Vector2(a,b),new THREE.Vector2(c,d)));this.actions.push({action:"quadraticCurveTo",args:[a,b,c,d]})};
THREE.Path.prototype.bezierCurveTo=function(a,b,c,d,e,g){var f=this.actions[this.actions.length-1].args;this.curves.push(new THREE.CubicBezierCurve(new THREE.Vector2(f[f.length-2],f[f.length-1]),new THREE.Vector2(a,b),new THREE.Vector2(c,d),new THREE.Vector2(e,g)));this.actions.push({action:"bezierCurveTo",args:[a,b,c,d,e,g]})};
THREE.Path.prototype.splineThru=function(a){var b=Array.prototype.slice.call(arguments),c=this.actions[this.actions.length-1].args,c=[new THREE.Vector2(c[c.length-2],c[c.length-1])];Array.prototype.push.apply(c,a);this.curves.push(new THREE.SplineCurve(c));this.actions.push({action:"splineThru",args:b})};THREE.Path.prototype.arc=function(a,b,c,d,e,g){var f=this.actions[this.actions.length-1].args;this.absarc(a+f[f.length-2],b+f[f.length-1],c,d,e,g)};
THREE.Path.prototype.absarc=function(a,b,c,d,e,g){this.absellipse(a,b,c,c,d,e,g)};THREE.Path.prototype.ellipse=function(a,b,c,d,e,g,f,h){var j=this.actions[this.actions.length-1].args;this.absellipse(a+j[j.length-2],b+j[j.length-1],c,d,e,g,f,h)};THREE.Path.prototype.absellipse=function(a,b,c,d,e,g,f,h){var j=[a,b,c,d,e,g,f,h||0],a=new THREE.EllipseCurve(a,b,c,d,e,g,f,h);this.curves.push(a);a=a.getPoint(1);j.push(a.x);j.push(a.y);this.actions.push({action:"ellipse",args:j})};
THREE.Path.prototype.getSpacedPoints=function(a){a||(a=40);for(var b=[],c=0;c<a;c++)b.push(this.getPoint(c/a));return b};
THREE.Path.prototype.getPoints=function(a,b){for(var a=a||12,c=THREE.ShapeUtils.b2,d=THREE.ShapeUtils.b3,e=[],g,f,h,j,i,k,m,l,n,p,r=0,s=this.actions.length;r<s;r++){n=this.actions[r];var q=n.args;switch(n.action){case "moveTo":e.push(new THREE.Vector2(q[0],q[1]));break;case "lineTo":e.push(new THREE.Vector2(q[0],q[1]));break;case "quadraticCurveTo":g=q[2];f=q[3];i=q[0];k=q[1];if(e.length>0){n=e[e.length-1];m=n.x;l=n.y}else{n=this.actions[r-1].args;m=n[n.length-2];l=n[n.length-1]}for(q=1;q<=a;q++){p=
q/a;n=c(p,m,i,g);p=c(p,l,k,f);e.push(new THREE.Vector2(n,p))}break;case "bezierCurveTo":g=q[4];f=q[5];i=q[0];k=q[1];h=q[2];j=q[3];if(e.length>0){n=e[e.length-1];m=n.x;l=n.y}else{n=this.actions[r-1].args;m=n[n.length-2];l=n[n.length-1]}for(q=1;q<=a;q++){p=q/a;n=d(p,m,i,h,g);p=d(p,l,k,j,f);e.push(new THREE.Vector2(n,p))}break;case "splineThru":n=this.actions[r-1].args;p=[new THREE.Vector2(n[n.length-2],n[n.length-1])];n=a*q[0].length;p=p.concat(q[0]);p=new THREE.SplineCurve(p);for(q=1;q<=n;q++)e.push(p.getPointAt(q/
n));break;case "arc":g=q[0];f=q[1];k=q[2];h=q[3];n=q[4];i=!!q[5];m=n-h;l=a*2;for(q=1;q<=l;q++){p=q/l;i||(p=1-p);p=h+p*m;n=g+k*Math.cos(p);p=f+k*Math.sin(p);e.push(new THREE.Vector2(n,p))}break;case "ellipse":g=q[0];f=q[1];k=q[2];j=q[3];h=q[4];n=q[5];i=!!q[6];var u=q[7];m=n-h;l=a*2;var A,t;if(u!==0){A=Math.cos(u);t=Math.sin(u)}for(q=1;q<=l;q++){p=q/l;i||(p=1-p);p=h+p*m;n=g+k*Math.cos(p);p=f+j*Math.sin(p);if(u!==0){var y=n;n=(y-g)*A-(p-f)*t+g;p=(y-g)*t+(p-f)*A+f}e.push(new THREE.Vector2(n,p))}}}c=e[e.length-
1];Math.abs(c.x-e[0].x)<Number.EPSILON&&Math.abs(c.y-e[0].y)<Number.EPSILON&&e.splice(e.length-1,1);b&&e.push(e[0]);return e};
THREE.Path.prototype.toShapes=function(a,b){function c(a){for(var b=[],c=0,d=a.length;c<d;c++){var e=a[c],f=new THREE.Shape;f.actions=e.actions;f.curves=e.curves;b.push(f)}return b}function d(a,b){for(var c=b.length,d=false,e=c-1,f=0;f<c;e=f++){var g=b[e],h=b[f],i=h.x-g.x,j=h.y-g.y;if(Math.abs(j)>Number.EPSILON){if(j<0){g=b[f];i=-i;h=b[e];j=-j}if(!(a.y<g.y||a.y>h.y))if(a.y===g.y){if(a.x===g.x)return true}else{e=j*(a.x-g.x)-i*(a.y-g.y);if(e===0)return true;e<0||(d=!d)}}else if(a.y===g.y&&(h.x<=a.x&&
a.x<=g.x||g.x<=a.x&&a.x<=h.x))return true}return d}var e=THREE.ShapeUtils.isClockWise,g=function(a){for(var b=[],c=new THREE.Path,d=0,e=a.length;d<e;d++){var f=a[d],g=f.args,f=f.action;if(f==="moveTo"&&c.actions.length!==0){b.push(c);c=new THREE.Path}c[f].apply(c,g)}c.actions.length!==0&&b.push(c);return b}(this.actions);if(g.length===0)return[];if(b===true)return c(g);var f,h,j,i=[];if(g.length===1){h=g[0];j=new THREE.Shape;j.actions=h.actions;j.curves=h.curves;i.push(j);return i}var k=!e(g[0].getPoints()),
k=a?!k:k;j=[];var m=[],l=[],n=0,p;m[n]=void 0;l[n]=[];for(var r=0,s=g.length;r<s;r++){h=g[r];p=h.getPoints();f=e(p);if(f=a?!f:f){!k&&m[n]&&n++;m[n]={s:new THREE.Shape,p:p};m[n].s.actions=h.actions;m[n].s.curves=h.curves;k&&n++;l[n]=[]}else l[n].push({h:h,p:p[0]})}if(!m[0])return c(g);if(m.length>1){r=false;h=[];e=0;for(g=m.length;e<g;e++)j[e]=[];e=0;for(g=m.length;e<g;e++){f=l[e];for(k=0;k<f.length;k++){n=f[k];p=true;for(s=0;s<m.length;s++)if(d(n.p,m[s].p)){e!==s&&h.push({froms:e,tos:s,hole:k});if(p){p=
false;j[s].push(n)}else r=true}p&&j[e].push(n)}}h.length>0&&(r||(l=j))}r=0;for(e=m.length;r<e;r++){j=m[r].s;i.push(j);h=l[r];g=0;for(f=h.length;g<f;g++)j.holes.push(h[g].h)}return i};THREE.Shape=function(){THREE.Path.apply(this,arguments);this.holes=[]};THREE.Shape.prototype=Object.create(THREE.Path.prototype);THREE.Shape.prototype.constructor=THREE.Shape;THREE.Shape.prototype.extrude=function(a){return new THREE.ExtrudeGeometry(this,a)};
THREE.Shape.prototype.makeGeometry=function(a){return new THREE.ShapeGeometry(this,a)};THREE.Shape.prototype.getPointsHoles=function(a){for(var b=[],c=0,d=this.holes.length;c<d;c++)b[c]=this.holes[c].getPoints(a);return b};THREE.Shape.prototype.extractAllPoints=function(a){return{shape:this.getPoints(a),holes:this.getPointsHoles(a)}};THREE.Shape.prototype.extractPoints=function(a){return this.extractAllPoints(a)};THREE.Shape.Utils=THREE.ShapeUtils;THREE.LineCurve=function(a,b){this.v1=a;this.v2=b};
THREE.LineCurve.prototype=Object.create(THREE.Curve.prototype);THREE.LineCurve.prototype.constructor=THREE.LineCurve;THREE.LineCurve.prototype.getPoint=function(a){var b=this.v2.clone().sub(this.v1);b.multiplyScalar(a).add(this.v1);return b};THREE.LineCurve.prototype.getPointAt=function(a){return this.getPoint(a)};THREE.LineCurve.prototype.getTangent=function(){return this.v2.clone().sub(this.v1).normalize()};THREE.QuadraticBezierCurve=function(a,b,c){this.v0=a;this.v1=b;this.v2=c};
THREE.QuadraticBezierCurve.prototype=Object.create(THREE.Curve.prototype);THREE.QuadraticBezierCurve.prototype.constructor=THREE.QuadraticBezierCurve;THREE.QuadraticBezierCurve.prototype.getPoint=function(a){var b=THREE.ShapeUtils.b2;return new THREE.Vector2(b(a,this.v0.x,this.v1.x,this.v2.x),b(a,this.v0.y,this.v1.y,this.v2.y))};
THREE.QuadraticBezierCurve.prototype.getTangent=function(a){var b=THREE.CurveUtils.tangentQuadraticBezier;return(new THREE.Vector2(b(a,this.v0.x,this.v1.x,this.v2.x),b(a,this.v0.y,this.v1.y,this.v2.y))).normalize()};THREE.CubicBezierCurve=function(a,b,c,d){this.v0=a;this.v1=b;this.v2=c;this.v3=d};THREE.CubicBezierCurve.prototype=Object.create(THREE.Curve.prototype);THREE.CubicBezierCurve.prototype.constructor=THREE.CubicBezierCurve;
THREE.CubicBezierCurve.prototype.getPoint=function(a){var b=THREE.ShapeUtils.b3;return new THREE.Vector2(b(a,this.v0.x,this.v1.x,this.v2.x,this.v3.x),b(a,this.v0.y,this.v1.y,this.v2.y,this.v3.y))};THREE.CubicBezierCurve.prototype.getTangent=function(a){var b=THREE.CurveUtils.tangentCubicBezier;return(new THREE.Vector2(b(a,this.v0.x,this.v1.x,this.v2.x,this.v3.x),b(a,this.v0.y,this.v1.y,this.v2.y,this.v3.y))).normalize()};THREE.SplineCurve=function(a){this.points=a==void 0?[]:a};
THREE.SplineCurve.prototype=Object.create(THREE.Curve.prototype);THREE.SplineCurve.prototype.constructor=THREE.SplineCurve;THREE.SplineCurve.prototype.getPoint=function(a){var b=this.points,a=(b.length-1)*a,c=Math.floor(a),a=a-c,d=b[c===0?c:c-1],e=b[c],g=b[c>b.length-2?b.length-1:c+1],b=b[c>b.length-3?b.length-1:c+2],c=THREE.CurveUtils.interpolate;return new THREE.Vector2(c(d.x,e.x,g.x,b.x,a),c(d.y,e.y,g.y,b.y,a))};
THREE.EllipseCurve=function(a,b,c,d,e,g,f,h){this.aX=a;this.aY=b;this.xRadius=c;this.yRadius=d;this.aStartAngle=e;this.aEndAngle=g;this.aClockwise=f;this.aRotation=h||0};THREE.EllipseCurve.prototype=Object.create(THREE.Curve.prototype);THREE.EllipseCurve.prototype.constructor=THREE.EllipseCurve;
THREE.EllipseCurve.prototype.getPoint=function(a){var b=this.aEndAngle-this.aStartAngle;b<0&&(b=b+Math.PI*2);b>Math.PI*2&&(b=b-Math.PI*2);var b=this.aClockwise===true?this.aEndAngle+(1-a)*(Math.PI*2-b):this.aStartAngle+a*b,a=this.aX+this.xRadius*Math.cos(b),c=this.aY+this.yRadius*Math.sin(b);if(this.aRotation!==0)var b=Math.cos(this.aRotation),d=Math.sin(this.aRotation),e=a,a=(e-this.aX)*b-(c-this.aY)*d+this.aX,c=(e-this.aX)*d+(c-this.aY)*b+this.aY;return new THREE.Vector2(a,c)};
THREE.ArcCurve=function(a,b,c,d,e,g){THREE.EllipseCurve.call(this,a,b,c,c,d,e,g)};THREE.ArcCurve.prototype=Object.create(THREE.EllipseCurve.prototype);THREE.ArcCurve.prototype.constructor=THREE.ArcCurve;THREE.LineCurve3=THREE.Curve.create(function(a,b){this.v1=a;this.v2=b},function(a){var b=new THREE.Vector3;b.subVectors(this.v2,this.v1);b.multiplyScalar(a);b.add(this.v1);return b});
THREE.QuadraticBezierCurve3=THREE.Curve.create(function(a,b,c){this.v0=a;this.v1=b;this.v2=c},function(a){var b=THREE.ShapeUtils.b2;return new THREE.Vector3(b(a,this.v0.x,this.v1.x,this.v2.x),b(a,this.v0.y,this.v1.y,this.v2.y),b(a,this.v0.z,this.v1.z,this.v2.z))});
THREE.CubicBezierCurve3=THREE.Curve.create(function(a,b,c,d){this.v0=a;this.v1=b;this.v2=c;this.v3=d},function(a){var b=THREE.ShapeUtils.b3;return new THREE.Vector3(b(a,this.v0.x,this.v1.x,this.v2.x,this.v3.x),b(a,this.v0.y,this.v1.y,this.v2.y,this.v3.y),b(a,this.v0.z,this.v1.z,this.v2.z,this.v3.z))});
THREE.SplineCurve3=THREE.Curve.create(function(a){console.warn("THREE.SplineCurve3 will be deprecated. Please use THREE.CatmullRomCurve3");this.points=a==void 0?[]:a},function(a){var b=this.points,a=(b.length-1)*a,c=Math.floor(a),a=a-c,d=b[c==0?c:c-1],e=b[c],g=b[c>b.length-2?b.length-1:c+1],b=b[c>b.length-3?b.length-1:c+2],c=THREE.CurveUtils.interpolate;return new THREE.Vector3(c(d.x,e.x,g.x,b.x,a),c(d.y,e.y,g.y,b.y,a),c(d.z,e.z,g.z,b.z,a))});
THREE.CatmullRomCurve3=function(){function a(){}var b=new THREE.Vector3,c=new a,d=new a,e=new a;a.prototype.init=function(a,b,c,d){this.c0=a;this.c1=c;this.c2=-3*a+3*b-2*c-d;this.c3=2*a-2*b+c+d};a.prototype.initNonuniformCatmullRom=function(a,b,c,d,e,k,m){this.init(b,c,((b-a)/e-(c-a)/(e+k)+(c-b)/k)*k,((c-b)/k-(d-b)/(k+m)+(d-c)/m)*k)};a.prototype.initCatmullRom=function(a,b,c,d,e){this.init(b,c,e*(c-a),e*(d-b))};a.prototype.calc=function(a){var b=a*a;return this.c0+this.c1*a+this.c2*b+this.c3*b*a};
return THREE.Curve.create(function(a){this.points=a||[]},function(a){var f=this.points,h,j;j=f.length;j<2&&console.log("duh, you need at least 2 points");a=(j-1)*a;h=Math.floor(a);a=a-h;if(a===0&&h===j-1){h=j-2;a=1}var i,k,m;if(h===0){b.subVectors(f[0],f[1]).add(f[0]);i=b}else i=f[h-1];k=f[h];m=f[h+1];if(h+2<j)f=f[h+2];else{b.subVectors(f[j-1],f[j-2]).add(f[j-2]);f=b}if(this.type===void 0||this.type==="centripetal"||this.type==="chordal"){var l=this.type==="chordal"?0.5:0.25;j=Math.pow(i.distanceToSquared(k),
l);h=Math.pow(k.distanceToSquared(m),l);l=Math.pow(m.distanceToSquared(f),l);h<1.0E-4&&(h=1);j<1.0E-4&&(j=h);l<1.0E-4&&(l=h);c.initNonuniformCatmullRom(i.x,k.x,m.x,f.x,j,h,l);d.initNonuniformCatmullRom(i.y,k.y,m.y,f.y,j,h,l);e.initNonuniformCatmullRom(i.z,k.z,m.z,f.z,j,h,l)}else if(this.type==="catmullrom"){j=this.tension!==void 0?this.tension:0.5;c.initCatmullRom(i.x,k.x,m.x,f.x,j);d.initCatmullRom(i.y,k.y,m.y,f.y,j);e.initCatmullRom(i.z,k.z,m.z,f.z,j)}return new THREE.Vector3(c.calc(a),d.calc(a),
e.calc(a))})}();THREE.ClosedSplineCurve3=THREE.Curve.create(function(a){this.points=a==void 0?[]:a},function(a){var b=this.points,a=(b.length-0)*a,c=Math.floor(a),a=a-c,c=c+(c>0?0:(Math.floor(Math.abs(c)/b.length)+1)*b.length),d=b[(c-1)%b.length],e=b[c%b.length],g=b[(c+1)%b.length],b=b[(c+2)%b.length],c=THREE.CurveUtils.interpolate;return new THREE.Vector3(c(d.x,e.x,g.x,b.x,a),c(d.y,e.y,g.y,b.y,a),c(d.z,e.z,g.z,b.z,a))});
THREE.BoxGeometry=function(a,b,c,d,e,g){function f(a,b,c,d,e,f,g,r){var s,q=h.widthSegments,u=h.heightSegments,A=e/2,t=f/2,y=h.vertices.length;if(a==="x"&&b==="y"||a==="y"&&b==="x")s="z";else if(a==="x"&&b==="z"||a==="z"&&b==="x"){s="y";u=h.depthSegments}else if(a==="z"&&b==="y"||a==="y"&&b==="z"){s="x";q=h.depthSegments}var v=q+1,w=u+1,x=e/q,K=f/u,F=new THREE.Vector3;F[s]=g>0?1:-1;for(e=0;e<w;e++)for(f=0;f<v;f++){var C=new THREE.Vector3;C[a]=(f*x-A)*c;C[b]=(e*K-t)*d;C[s]=g;h.vertices.push(C)}for(e=
0;e<u;e++)for(f=0;f<q;f++){t=f+v*e;a=f+v*(e+1);b=f+1+v*(e+1);c=f+1+v*e;d=new THREE.Vector2(f/q,1-e/u);g=new THREE.Vector2(f/q,1-(e+1)/u);s=new THREE.Vector2((f+1)/q,1-(e+1)/u);A=new THREE.Vector2((f+1)/q,1-e/u);t=new THREE.Face3(t+y,a+y,c+y);t.normal.copy(F);t.vertexNormals.push(F.clone(),F.clone(),F.clone());t.materialIndex=r;h.faces.push(t);h.faceVertexUvs[0].push([d,g,A]);t=new THREE.Face3(a+y,b+y,c+y);t.normal.copy(F);t.vertexNormals.push(F.clone(),F.clone(),F.clone());t.materialIndex=r;h.faces.push(t);
h.faceVertexUvs[0].push([g.clone(),s,A.clone()])}}THREE.Geometry.call(this);this.type="BoxGeometry";this.parameters={width:a,height:b,depth:c,widthSegments:d,heightSegments:e,depthSegments:g};this.widthSegments=d||1;this.heightSegments=e||1;this.depthSegments=g||1;var h=this,d=a/2,e=b/2,g=c/2;f("z","y",-1,-1,c,b,d,0);f("z","y",1,-1,c,b,-d,1);f("x","z",1,1,a,c,e,2);f("x","z",1,-1,a,c,-e,3);f("x","y",1,-1,a,b,g,4);f("x","y",-1,-1,a,b,-g,5);this.mergeVertices()};THREE.BoxGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.BoxGeometry.prototype.constructor=THREE.BoxGeometry;THREE.BoxGeometry.prototype.clone=function(){var a=this.parameters;return new THREE.BoxGeometry(a.width,a.height,a.depth,a.widthSegments,a.heightSegments,a.depthSegments)};THREE.CubeGeometry=THREE.BoxGeometry;THREE.CircleGeometry=function(a,b,c,d){THREE.Geometry.call(this);this.type="CircleGeometry";this.parameters={radius:a,segments:b,thetaStart:c,thetaLength:d};this.fromBufferGeometry(new THREE.CircleBufferGeometry(a,b,c,d))};
THREE.CircleGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.CircleGeometry.prototype.constructor=THREE.CircleGeometry;THREE.CircleGeometry.prototype.clone=function(){var a=this.parameters;return new THREE.CircleGeometry(a.radius,a.segments,a.thetaStart,a.thetaLength)};
THREE.CircleBufferGeometry=function(a,b,c,d){THREE.BufferGeometry.call(this);this.type="CircleBufferGeometry";this.parameters={radius:a,segments:b,thetaStart:c,thetaLength:d};var a=a||50,b=b!==void 0?Math.max(3,b):8,c=c!==void 0?c:0,d=d!==void 0?d:Math.PI*2,e=b+2,g=new Float32Array(e*3),f=new Float32Array(e*3),e=new Float32Array(e*2);f[2]=1;e[0]=0.5;e[1]=0.5;for(var h=0,j=3,i=2;h<=b;h++,j=j+3,i=i+2){var k=c+h/b*d;g[j]=a*Math.cos(k);g[j+1]=a*Math.sin(k);f[j+2]=1;e[i]=(g[j]/a+1)/2;e[i+1]=(g[j+1]/a+
1)/2}c=[];for(j=1;j<=b;j++)c.push(j,j+1,0);this.setIndex(new THREE.BufferAttribute(new Uint16Array(c),1));this.addAttribute("position",new THREE.BufferAttribute(g,3));this.addAttribute("normal",new THREE.BufferAttribute(f,3));this.addAttribute("uv",new THREE.BufferAttribute(e,2));this.boundingSphere=new THREE.Sphere(new THREE.Vector3,a)};THREE.CircleBufferGeometry.prototype=Object.create(THREE.BufferGeometry.prototype);THREE.CircleBufferGeometry.prototype.constructor=THREE.CircleBufferGeometry;
THREE.CircleBufferGeometry.prototype.clone=function(){var a=this.parameters;return new THREE.CircleBufferGeometry(a.radius,a.segments,a.thetaStart,a.thetaLength)};
THREE.CylinderGeometry=function(a,b,c,d,e,g,f,h){THREE.Geometry.call(this);this.type="CylinderGeometry";this.parameters={radiusTop:a,radiusBottom:b,height:c,radialSegments:d,heightSegments:e,openEnded:g,thetaStart:f,thetaLength:h};var a=a!==void 0?a:20,b=b!==void 0?b:20,c=c!==void 0?c:100,d=d||8,e=e||1,g=g!==void 0?g:false,f=f!==void 0?f:0,h=h!==void 0?h:2*Math.PI,j=c/2,i,k,m=[],l=[];for(k=0;k<=e;k++){var n=[],p=[],r=k/e,s=r*(b-a)+a;for(i=0;i<=d;i++){var q=i/d,u=new THREE.Vector3;u.x=s*Math.sin(q*
h+f);u.y=-r*c+j;u.z=s*Math.cos(q*h+f);this.vertices.push(u);n.push(this.vertices.length-1);p.push(new THREE.Vector2(q,1-r))}m.push(n);l.push(p)}c=(b-a)/c;for(i=0;i<d;i++){if(a!==0){f=this.vertices[m[0][i]].clone();h=this.vertices[m[0][i+1]].clone()}else{f=this.vertices[m[1][i]].clone();h=this.vertices[m[1][i+1]].clone()}f.setY(Math.sqrt(f.x*f.x+f.z*f.z)*c).normalize();h.setY(Math.sqrt(h.x*h.x+h.z*h.z)*c).normalize();for(k=0;k<e;k++){var n=m[k][i],p=m[k+1][i],r=m[k+1][i+1],s=m[k][i+1],q=f.clone(),
u=f.clone(),A=h.clone(),t=h.clone(),y=l[k][i].clone(),v=l[k+1][i].clone(),w=l[k+1][i+1].clone(),x=l[k][i+1].clone();this.faces.push(new THREE.Face3(n,p,s,[q,u,t]));this.faceVertexUvs[0].push([y,v,x]);this.faces.push(new THREE.Face3(p,r,s,[u.clone(),A,t.clone()]));this.faceVertexUvs[0].push([v.clone(),w,x.clone()])}}if(g===false&&a>0){this.vertices.push(new THREE.Vector3(0,j,0));for(i=0;i<d;i++){n=m[0][i];p=m[0][i+1];r=this.vertices.length-1;q=new THREE.Vector3(0,1,0);u=new THREE.Vector3(0,1,0);A=
new THREE.Vector3(0,1,0);y=l[0][i].clone();v=l[0][i+1].clone();w=new THREE.Vector2(v.x,0);this.faces.push(new THREE.Face3(n,p,r,[q,u,A],void 0,1));this.faceVertexUvs[0].push([y,v,w])}}if(g===false&&b>0){this.vertices.push(new THREE.Vector3(0,-j,0));for(i=0;i<d;i++){n=m[e][i+1];p=m[e][i];r=this.vertices.length-1;q=new THREE.Vector3(0,-1,0);u=new THREE.Vector3(0,-1,0);A=new THREE.Vector3(0,-1,0);y=l[e][i+1].clone();v=l[e][i].clone();w=new THREE.Vector2(v.x,1);this.faces.push(new THREE.Face3(n,p,r,[q,
u,A],void 0,2));this.faceVertexUvs[0].push([y,v,w])}}this.computeFaceNormals()};THREE.CylinderGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.CylinderGeometry.prototype.constructor=THREE.CylinderGeometry;THREE.CylinderGeometry.prototype.clone=function(){var a=this.parameters;return new THREE.CylinderGeometry(a.radiusTop,a.radiusBottom,a.height,a.radialSegments,a.heightSegments,a.openEnded,a.thetaStart,a.thetaLength)};
THREE.EdgesGeometry=function(a,b){function c(a,b){return a-b}THREE.BufferGeometry.call(this);var d=Math.cos(THREE.Math.degToRad(b!==void 0?b:1)),e=[0,0],g={},f=["a","b","c"],h;if(a instanceof THREE.BufferGeometry){h=new THREE.Geometry;h.fromBufferGeometry(a)}else h=a.clone();h.mergeVertices();h.computeFaceNormals();var j=h.vertices;h=h.faces;for(var i=0,k=h.length;i<k;i++)for(var m=h[i],l=0;l<3;l++){e[0]=m[f[l]];e[1]=m[f[(l+1)%3]];e.sort(c);var n=e.toString();g[n]===void 0?g[n]={vert1:e[0],vert2:e[1],
face1:i,face2:void 0}:g[n].face2=i}e=[];for(n in g){f=g[n];if(f.face2===void 0||h[f.face1].normal.dot(h[f.face2].normal)<=d){i=j[f.vert1];e.push(i.x);e.push(i.y);e.push(i.z);i=j[f.vert2];e.push(i.x);e.push(i.y);e.push(i.z)}}this.addAttribute("position",new THREE.BufferAttribute(new Float32Array(e),3))};THREE.EdgesGeometry.prototype=Object.create(THREE.BufferGeometry.prototype);THREE.EdgesGeometry.prototype.constructor=THREE.EdgesGeometry;
THREE.ExtrudeGeometry=function(a,b){if(typeof a!=="undefined"){THREE.Geometry.call(this);this.type="ExtrudeGeometry";a=Array.isArray(a)?a:[a];this.addShapeList(a,b);this.computeFaceNormals()}};THREE.ExtrudeGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ExtrudeGeometry.prototype.constructor=THREE.ExtrudeGeometry;THREE.ExtrudeGeometry.prototype.addShapeList=function(a,b){for(var c=a.length,d=0;d<c;d++)this.addShape(a[d],b)};
THREE.ExtrudeGeometry.prototype.addShape=function(a,b){function c(a,b,c){b||console.error("THREE.ExtrudeGeometry: vec does not exist");return b.clone().multiplyScalar(c).add(a)}function d(a,b,c){var d=1,d=a.x-b.x,e=a.y-b.y,f=c.x-a.x,g=c.y-a.y,h=d*d+e*e;if(Math.abs(d*g-e*f)>Number.EPSILON){var i=Math.sqrt(h),j=Math.sqrt(f*f+g*g),h=b.x-e/i,b=b.y+d/i,f=((c.x-g/j-h)*g-(c.y+f/j-b)*f)/(d*g-e*f),c=h+d*f-a.x,a=b+e*f-a.y,d=c*c+a*a;if(d<=2)return new THREE.Vector2(c,a);d=Math.sqrt(d/2)}else{a=false;d>Number.EPSILON?
f>Number.EPSILON&&(a=true):d<-Number.EPSILON?f<-Number.EPSILON&&(a=true):Math.sign(e)===Math.sign(g)&&(a=true);if(a){c=-e;a=d;d=Math.sqrt(h)}else{c=d;a=e;d=Math.sqrt(h/2)}}return new THREE.Vector2(c/d,a/d)}function e(a,b){var c,d;for(E=a.length;--E>=0;){c=E;d=E-1;d<0&&(d=a.length-1);for(var e=0,f=n+k*2,e=0;e<f;e++){var g=Q*e,h=Q*(e+1),i=b+c+g,g=b+d+g,j=b+d+h,h=b+c+h,i=i+F,g=g+F,j=j+F,h=h+F;K.faces.push(new THREE.Face3(i,g,h,null,null,1));K.faces.push(new THREE.Face3(g,j,h,null,null,1));i=q.generateSideWallUV(K,
i,g,j,h);K.faceVertexUvs[0].push([i[0],i[1],i[3]]);K.faceVertexUvs[0].push([i[1],i[2],i[3]])}}}function g(a,b,c){K.vertices.push(new THREE.Vector3(a,b,c))}function f(a,b,c){a=a+F;b=b+F;c=c+F;K.faces.push(new THREE.Face3(a,b,c,null,null,0));a=q.generateTopUV(K,a,b,c);K.faceVertexUvs[0].push(a)}var h=b.amount!==void 0?b.amount:100,j=b.bevelThickness!==void 0?b.bevelThickness:6,i=b.bevelSize!==void 0?b.bevelSize:j-2,k=b.bevelSegments!==void 0?b.bevelSegments:3,m=b.bevelEnabled!==void 0?b.bevelEnabled:
true,l=b.curveSegments!==void 0?b.curveSegments:12,n=b.steps!==void 0?b.steps:1,p=b.extrudePath,r,s=false,q=b.UVGenerator!==void 0?b.UVGenerator:THREE.ExtrudeGeometry.WorldUVGenerator,u,A,t,y;if(p){r=p.getSpacedPoints(n);s=true;m=false;u=b.frames!==void 0?b.frames:new THREE.TubeGeometry.FrenetFrames(p,n,false);A=new THREE.Vector3;t=new THREE.Vector3;y=new THREE.Vector3}if(!m)i=j=k=0;var v,w,x,K=this,F=this.vertices.length,p=a.extractPoints(l),l=p.shape,C=p.holes;if(p=!THREE.ShapeUtils.isClockWise(l)){l=
l.reverse();w=0;for(x=C.length;w<x;w++){v=C[w];THREE.ShapeUtils.isClockWise(v)&&(C[w]=v.reverse())}p=false}var J=THREE.ShapeUtils.triangulateShape(l,C),I=l;w=0;for(x=C.length;w<x;w++){v=C[w];l=l.concat(v)}var L,D,B,z,H,Q=l.length,O,M=J.length,p=[],E=0;B=I.length;L=B-1;for(D=E+1;E<B;E++,L++,D++){L===B&&(L=0);D===B&&(D=0);p[E]=d(I[E],I[L],I[D])}var ta=[],S,ja=p.concat();w=0;for(x=C.length;w<x;w++){v=C[w];S=[];E=0;B=v.length;L=B-1;for(D=E+1;E<B;E++,L++,D++){L===B&&(L=0);D===B&&(D=0);S[E]=d(v[E],v[L],
v[D])}ta.push(S);ja=ja.concat(S)}for(L=0;L<k;L++){B=L/k;z=j*(1-B);D=i*Math.sin(B*Math.PI/2);E=0;for(B=I.length;E<B;E++){H=c(I[E],p[E],D);g(H.x,H.y,-z)}w=0;for(x=C.length;w<x;w++){v=C[w];S=ta[w];E=0;for(B=v.length;E<B;E++){H=c(v[E],S[E],D);g(H.x,H.y,-z)}}}D=i;for(E=0;E<Q;E++){H=m?c(l[E],ja[E],D):l[E];if(s){t.copy(u.normals[0]).multiplyScalar(H.x);A.copy(u.binormals[0]).multiplyScalar(H.y);y.copy(r[0]).add(t).add(A);g(y.x,y.y,y.z)}else g(H.x,H.y,0)}for(B=1;B<=n;B++)for(E=0;E<Q;E++){H=m?c(l[E],ja[E],
D):l[E];if(s){t.copy(u.normals[B]).multiplyScalar(H.x);A.copy(u.binormals[B]).multiplyScalar(H.y);y.copy(r[B]).add(t).add(A);g(y.x,y.y,y.z)}else g(H.x,H.y,h/n*B)}for(L=k-1;L>=0;L--){B=L/k;z=j*(1-B);D=i*Math.sin(B*Math.PI/2);E=0;for(B=I.length;E<B;E++){H=c(I[E],p[E],D);g(H.x,H.y,h+z)}w=0;for(x=C.length;w<x;w++){v=C[w];S=ta[w];E=0;for(B=v.length;E<B;E++){H=c(v[E],S[E],D);s?g(H.x,H.y+r[n-1].y,r[n-1].x+z):g(H.x,H.y,h+z)}}}(function(){if(m){var a;a=Q*0;for(E=0;E<M;E++){O=J[E];f(O[2]+a,O[1]+a,O[0]+a)}a=
n+k*2;a=Q*a;for(E=0;E<M;E++){O=J[E];f(O[0]+a,O[1]+a,O[2]+a)}}else{for(E=0;E<M;E++){O=J[E];f(O[2],O[1],O[0])}for(E=0;E<M;E++){O=J[E];f(O[0]+Q*n,O[1]+Q*n,O[2]+Q*n)}}})();(function(){var a=0;e(I,a);a=a+I.length;w=0;for(x=C.length;w<x;w++){v=C[w];e(v,a);a=a+v.length}})()};
THREE.ExtrudeGeometry.WorldUVGenerator={generateTopUV:function(a,b,c,d){a=a.vertices;b=a[b];c=a[c];d=a[d];return[new THREE.Vector2(b.x,b.y),new THREE.Vector2(c.x,c.y),new THREE.Vector2(d.x,d.y)]},generateSideWallUV:function(a,b,c,d,e){a=a.vertices;b=a[b];c=a[c];d=a[d];e=a[e];return Math.abs(b.y-c.y)<0.01?[new THREE.Vector2(b.x,1-b.z),new THREE.Vector2(c.x,1-c.z),new THREE.Vector2(d.x,1-d.z),new THREE.Vector2(e.x,1-e.z)]:[new THREE.Vector2(b.y,1-b.z),new THREE.Vector2(c.y,1-c.z),new THREE.Vector2(d.y,
1-d.z),new THREE.Vector2(e.y,1-e.z)]}};THREE.ShapeGeometry=function(a,b){THREE.Geometry.call(this);this.type="ShapeGeometry";Array.isArray(a)===false&&(a=[a]);this.addShapeList(a,b);this.computeFaceNormals()};THREE.ShapeGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ShapeGeometry.prototype.constructor=THREE.ShapeGeometry;THREE.ShapeGeometry.prototype.addShapeList=function(a,b){for(var c=0,d=a.length;c<d;c++)this.addShape(a[c],b);return this};
THREE.ShapeGeometry.prototype.addShape=function(a,b){b===void 0&&(b={});var c=b.material,d=b.UVGenerator===void 0?THREE.ExtrudeGeometry.WorldUVGenerator:b.UVGenerator,e,g,f,h=this.vertices.length;e=a.extractPoints(b.curveSegments!==void 0?b.curveSegments:12);var j=e.shape,i=e.holes;if(!THREE.ShapeUtils.isClockWise(j)){j=j.reverse();e=0;for(g=i.length;e<g;e++){f=i[e];THREE.ShapeUtils.isClockWise(f)&&(i[e]=f.reverse())}}var k=THREE.ShapeUtils.triangulateShape(j,i);e=0;for(g=i.length;e<g;e++){f=i[e];
j=j.concat(f)}i=j.length;g=k.length;for(e=0;e<i;e++){f=j[e];this.vertices.push(new THREE.Vector3(f.x,f.y,0))}for(e=0;e<g;e++){i=k[e];j=i[0]+h;f=i[1]+h;i=i[2]+h;this.faces.push(new THREE.Face3(j,f,i,null,null,c));this.faceVertexUvs[0].push(d.generateTopUV(this,j,f,i))}};
THREE.LatheGeometry=function(a,b,c,d){THREE.Geometry.call(this);this.type="LatheGeometry";this.parameters={points:a,segments:b,phiStart:c,phiLength:d};for(var b=b||12,c=c||0,d=d||2*Math.PI,e=1/(a.length-1),g=1/b,f=0,h=b;f<=h;f++)for(var j=c+f*g*d,i=Math.cos(j),k=Math.sin(j),j=0,m=a.length;j<m;j++){var l=a[j],n=new THREE.Vector3;n.x=i*l.x-k*l.y;n.y=k*l.x+i*l.y;n.z=l.z;this.vertices.push(n)}c=a.length;f=0;for(h=b;f<h;f++){j=0;for(m=a.length-1;j<m;j++){var b=k=j+c*f,d=k+c,i=k+1+c,k=k+1,l=f*g,n=j*e,p=
l+g,r=n+e;this.faces.push(new THREE.Face3(b,d,k));this.faceVertexUvs[0].push([new THREE.Vector2(l,n),new THREE.Vector2(p,n),new THREE.Vector2(l,r)]);this.faces.push(new THREE.Face3(d,i,k));this.faceVertexUvs[0].push([new THREE.Vector2(p,n),new THREE.Vector2(p,r),new THREE.Vector2(l,r)])}}this.mergeVertices();this.computeFaceNormals();this.computeVertexNormals()};THREE.LatheGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.LatheGeometry.prototype.constructor=THREE.LatheGeometry;
THREE.PlaneGeometry=function(a,b,c,d){THREE.Geometry.call(this);this.type="PlaneGeometry";this.parameters={width:a,height:b,widthSegments:c,heightSegments:d};this.fromBufferGeometry(new THREE.PlaneBufferGeometry(a,b,c,d))};THREE.PlaneGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.PlaneGeometry.prototype.constructor=THREE.PlaneGeometry;THREE.PlaneGeometry.prototype.clone=function(){var a=this.parameters;return new THREE.PlaneGeometry(a.width,a.height,a.widthSegments,a.heightSegments)};
THREE.PlaneBufferGeometry=function(a,b,c,d){THREE.BufferGeometry.call(this);this.type="PlaneBufferGeometry";this.parameters={width:a,height:b,widthSegments:c,heightSegments:d};for(var e=a/2,g=b/2,c=Math.floor(c)||1,d=Math.floor(d)||1,f=c+1,h=d+1,j=a/c,i=b/d,b=new Float32Array(f*h*3),a=new Float32Array(f*h*3),k=new Float32Array(f*h*2),m=0,l=0,n=0;n<h;n++)for(var p=n*i-g,r=0;r<f;r++){b[m]=r*j-e;b[m+1]=-p;a[m+2]=1;k[l]=r/c;k[l+1]=1-n/d;m=m+3;l=l+2}m=0;e=new (b.length/3>65535?Uint32Array:Uint16Array)(c*
d*6);for(n=0;n<d;n++)for(r=0;r<c;r++){g=r+f*(n+1);h=r+1+f*(n+1);j=r+1+f*n;e[m]=r+f*n;e[m+1]=g;e[m+2]=j;e[m+3]=g;e[m+4]=h;e[m+5]=j;m=m+6}this.setIndex(new THREE.BufferAttribute(e,1));this.addAttribute("position",new THREE.BufferAttribute(b,3));this.addAttribute("normal",new THREE.BufferAttribute(a,3));this.addAttribute("uv",new THREE.BufferAttribute(k,2))};THREE.PlaneBufferGeometry.prototype=Object.create(THREE.BufferGeometry.prototype);THREE.PlaneBufferGeometry.prototype.constructor=THREE.PlaneBufferGeometry;
THREE.PlaneBufferGeometry.prototype.clone=function(){var a=this.parameters;return new THREE.PlaneBufferGeometry(a.width,a.height,a.widthSegments,a.heightSegments)};
THREE.RingGeometry=function(a,b,c,d,e,g){THREE.Geometry.call(this);this.type="RingGeometry";this.parameters={innerRadius:a,outerRadius:b,thetaSegments:c,phiSegments:d,thetaStart:e,thetaLength:g};for(var a=a||0,b=b||50,e=e!==void 0?e:0,g=g!==void 0?g:Math.PI*2,c=c!==void 0?Math.max(3,c):8,d=d!==void 0?Math.max(1,d):8,f,h=[],j=a,i=(b-a)/d,a=0;a<d+1;a++){for(f=0;f<c+1;f++){var k=new THREE.Vector3,m=e+f/c*g;k.x=j*Math.cos(m);k.y=j*Math.sin(m);this.vertices.push(k);h.push(new THREE.Vector2((k.x/b+1)/2,
(k.y/b+1)/2))}j=j+i}b=new THREE.Vector3(0,0,1);for(a=0;a<d;a++){e=a*(c+1);for(f=0;f<c;f++){g=m=f+e;i=m+c+1;k=m+c+2;this.faces.push(new THREE.Face3(g,i,k,[b.clone(),b.clone(),b.clone()]));this.faceVertexUvs[0].push([h[g].clone(),h[i].clone(),h[k].clone()]);g=m;i=m+c+2;k=m+1;this.faces.push(new THREE.Face3(g,i,k,[b.clone(),b.clone(),b.clone()]));this.faceVertexUvs[0].push([h[g].clone(),h[i].clone(),h[k].clone()])}}this.computeFaceNormals();this.boundingSphere=new THREE.Sphere(new THREE.Vector3,j)};
THREE.RingGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.RingGeometry.prototype.constructor=THREE.RingGeometry;THREE.RingGeometry.prototype.clone=function(){var a=this.parameters;return new THREE.RingGeometry(a.innerRadius,a.outerRadius,a.thetaSegments,a.phiSegments,a.thetaStart,a.thetaLength)};
THREE.SphereGeometry=function(a,b,c,d,e,g,f){THREE.Geometry.call(this);this.type="SphereGeometry";this.parameters={radius:a,widthSegments:b,heightSegments:c,phiStart:d,phiLength:e,thetaStart:g,thetaLength:f};this.fromBufferGeometry(new THREE.SphereBufferGeometry(a,b,c,d,e,g,f))};THREE.SphereGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.SphereGeometry.prototype.constructor=THREE.SphereGeometry;
THREE.SphereGeometry.prototype.clone=function(){var a=this.parameters;return new THREE.SphereGeometry(a.radius,a.widthSegments,a.heightSegments,a.phiStart,a.phiLength,a.thetaStart,a.thetaLength)};
THREE.SphereBufferGeometry=function(a,b,c,d,e,g,f){THREE.BufferGeometry.call(this);this.type="SphereBufferGeometry";this.parameters={radius:a,widthSegments:b,heightSegments:c,phiStart:d,phiLength:e,thetaStart:g,thetaLength:f};for(var a=a||50,b=Math.max(3,Math.floor(b)||8),c=Math.max(2,Math.floor(c)||6),d=d!==void 0?d:0,e=e!==void 0?e:Math.PI*2,g=g!==void 0?g:0,f=f!==void 0?f:Math.PI,h=g+f,j=(b+1)*(c+1),i=new THREE.BufferAttribute(new Float32Array(j*3),3),k=new THREE.BufferAttribute(new Float32Array(j*
3),3),j=new THREE.BufferAttribute(new Float32Array(j*2),2),m=0,l=[],n=new THREE.Vector3,p=0;p<=c;p++){for(var r=[],s=p/c,q=0;q<=b;q++){var u=q/b,A=-a*Math.cos(d+u*e)*Math.sin(g+s*f),t=a*Math.cos(g+s*f),y=a*Math.sin(d+u*e)*Math.sin(g+s*f);n.set(A,t,y).normalize();i.setXYZ(m,A,t,y);k.setXYZ(m,n.x,n.y,n.z);j.setXY(m,u,1-s);r.push(m);m++}l.push(r)}d=[];for(p=0;p<c;p++)for(q=0;q<b;q++){e=l[p][q+1];f=l[p][q];m=l[p+1][q];n=l[p+1][q+1];(p!==0||g>0)&&d.push(e,f,n);(p!==c-1||h<Math.PI)&&d.push(f,m,n)}this.setIndex(new (i.count>
65535?THREE.Uint32Attribute:THREE.Uint16Attribute)(d,1));this.addAttribute("position",i);this.addAttribute("normal",k);this.addAttribute("uv",j);this.boundingSphere=new THREE.Sphere(new THREE.Vector3,a)};THREE.SphereBufferGeometry.prototype=Object.create(THREE.BufferGeometry.prototype);THREE.SphereBufferGeometry.prototype.constructor=THREE.SphereBufferGeometry;
THREE.SphereBufferGeometry.prototype.clone=function(){var a=this.parameters;return new THREE.SphereBufferGeometry(a.radius,a.widthSegments,a.heightSegments,a.phiStart,a.phiLength,a.thetaStart,a.thetaLength)};
THREE.TorusGeometry=function(a,b,c,d,e){THREE.Geometry.call(this);this.type="TorusGeometry";this.parameters={radius:a,tube:b,radialSegments:c,tubularSegments:d,arc:e};for(var a=a||100,b=b||40,c=c||8,d=d||6,e=e||Math.PI*2,g=new THREE.Vector3,f=[],h=[],j=0;j<=c;j++)for(var i=0;i<=d;i++){var k=i/d*e,m=j/c*Math.PI*2;g.x=a*Math.cos(k);g.y=a*Math.sin(k);var l=new THREE.Vector3;l.x=(a+b*Math.cos(m))*Math.cos(k);l.y=(a+b*Math.cos(m))*Math.sin(k);l.z=b*Math.sin(m);this.vertices.push(l);f.push(new THREE.Vector2(i/
d,j/c));h.push(l.clone().sub(g).normalize())}for(j=1;j<=c;j++)for(i=1;i<=d;i++){a=(d+1)*j+i-1;b=(d+1)*(j-1)+i-1;e=(d+1)*(j-1)+i;g=(d+1)*j+i;k=new THREE.Face3(a,b,g,[h[a].clone(),h[b].clone(),h[g].clone()]);this.faces.push(k);this.faceVertexUvs[0].push([f[a].clone(),f[b].clone(),f[g].clone()]);k=new THREE.Face3(b,e,g,[h[b].clone(),h[e].clone(),h[g].clone()]);this.faces.push(k);this.faceVertexUvs[0].push([f[b].clone(),f[e].clone(),f[g].clone()])}this.computeFaceNormals()};
THREE.TorusGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TorusGeometry.prototype.constructor=THREE.TorusGeometry;THREE.TorusGeometry.prototype.clone=function(){var a=this.parameters;return new THREE.TorusGeometry(a.radius,a.tube,a.radialSegments,a.tubularSegments,a.arc)};
THREE.TorusKnotGeometry=function(a,b,c,d,e,g,f){function h(a,b,c,d,e){var f=Math.cos(a),g=Math.sin(a),a=b/c*a,b=Math.cos(a),f=d*(2+b)*0.5*f,g=d*(2+b)*g*0.5,d=e*d*Math.sin(a)*0.5;return new THREE.Vector3(f,g,d)}THREE.Geometry.call(this);this.type="TorusKnotGeometry";this.parameters={radius:a,tube:b,radialSegments:c,tubularSegments:d,p:e,q:g,heightScale:f};for(var a=a||100,b=b||40,c=c||64,d=d||8,e=e||2,g=g||3,f=f||1,j=Array(c),i=new THREE.Vector3,k=new THREE.Vector3,m=new THREE.Vector3,l=0;l<c;++l){j[l]=
Array(d);var n=l/c*2*e*Math.PI,p=h(n,g,e,a,f),n=h(n+0.01,g,e,a,f);i.subVectors(n,p);k.addVectors(n,p);m.crossVectors(i,k);k.crossVectors(m,i);m.normalize();k.normalize();for(n=0;n<d;++n){var r=n/d*2*Math.PI,s=-b*Math.cos(r),r=b*Math.sin(r),q=new THREE.Vector3;q.x=p.x+s*k.x+r*m.x;q.y=p.y+s*k.y+r*m.y;q.z=p.z+s*k.z+r*m.z;j[l][n]=this.vertices.push(q)-1}}for(l=0;l<c;++l)for(n=0;n<d;++n){e=(l+1)%c;g=(n+1)%d;a=j[l][n];b=j[e][n];e=j[e][g];g=j[l][g];f=new THREE.Vector2(l/c,n/d);i=new THREE.Vector2((l+1)/
c,n/d);k=new THREE.Vector2((l+1)/c,(n+1)/d);m=new THREE.Vector2(l/c,(n+1)/d);this.faces.push(new THREE.Face3(a,b,g));this.faceVertexUvs[0].push([f,i,m]);this.faces.push(new THREE.Face3(b,e,g));this.faceVertexUvs[0].push([i.clone(),k,m.clone()])}this.computeFaceNormals();this.computeVertexNormals()};THREE.TorusKnotGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TorusKnotGeometry.prototype.constructor=THREE.TorusKnotGeometry;
THREE.TorusKnotGeometry.prototype.clone=function(){var a=this.parameters;return new THREE.TorusKnotGeometry(a.radius,a.tube,a.radialSegments,a.tubularSegments,a.p,a.q,a.heightScale)};
THREE.TubeGeometry=function(a,b,c,d,e,g){THREE.Geometry.call(this);this.type="TubeGeometry";this.parameters={path:a,segments:b,radius:c,radialSegments:d,closed:e,taper:g};var b=b||64,c=c||1,d=d||8,e=e||false,g=g||THREE.TubeGeometry.NoTaper,f=[],h,j,i=b+1,k,m,l,n,p,r=new THREE.Vector3,s,q,u;s=new THREE.TubeGeometry.FrenetFrames(a,b,e);q=s.normals;u=s.binormals;this.tangents=s.tangents;this.normals=q;this.binormals=u;for(s=0;s<i;s++){f[s]=[];k=s/(i-1);p=a.getPointAt(k);h=q[s];j=u[s];l=c*g(k);for(k=
0;k<d;k++){m=k/d*2*Math.PI;n=-l*Math.cos(m);m=l*Math.sin(m);r.copy(p);r.x=r.x+(n*h.x+m*j.x);r.y=r.y+(n*h.y+m*j.y);r.z=r.z+(n*h.z+m*j.z);f[s][k]=this.vertices.push(new THREE.Vector3(r.x,r.y,r.z))-1}}for(s=0;s<b;s++)for(k=0;k<d;k++){g=e?(s+1)%b:s+1;i=(k+1)%d;a=f[s][k];c=f[g][k];g=f[g][i];i=f[s][i];r=new THREE.Vector2(s/b,k/d);q=new THREE.Vector2((s+1)/b,k/d);u=new THREE.Vector2((s+1)/b,(k+1)/d);h=new THREE.Vector2(s/b,(k+1)/d);this.faces.push(new THREE.Face3(a,c,i));this.faceVertexUvs[0].push([r,q,
h]);this.faces.push(new THREE.Face3(c,g,i));this.faceVertexUvs[0].push([q.clone(),u,h.clone()])}this.computeFaceNormals();this.computeVertexNormals()};THREE.TubeGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TubeGeometry.prototype.constructor=THREE.TubeGeometry;THREE.TubeGeometry.prototype.clone=function(){return new this.constructor(this.parameters.path,this.parameters.segments,this.parameters.radius,this.parameters.radialSegments,this.parameters.closed,this.parameters.taper)};
THREE.TubeGeometry.NoTaper=function(){return 1};THREE.TubeGeometry.SinusoidalTaper=function(a){return Math.sin(Math.PI*a)};
THREE.TubeGeometry.FrenetFrames=function(a,b,c){var d=new THREE.Vector3,e=[],g=[],f=[],h=new THREE.Vector3,j=new THREE.Matrix4,b=b+1,i,k,m;this.tangents=e;this.normals=g;this.binormals=f;for(i=0;i<b;i++){k=i/(b-1);e[i]=a.getTangentAt(k);e[i].normalize()}g[0]=new THREE.Vector3;f[0]=new THREE.Vector3;a=Number.MAX_VALUE;i=Math.abs(e[0].x);k=Math.abs(e[0].y);m=Math.abs(e[0].z);if(i<=a){a=i;d.set(1,0,0)}if(k<=a){a=k;d.set(0,1,0)}m<=a&&d.set(0,0,1);h.crossVectors(e[0],d).normalize();g[0].crossVectors(e[0],
h);f[0].crossVectors(e[0],g[0]);for(i=1;i<b;i++){g[i]=g[i-1].clone();f[i]=f[i-1].clone();h.crossVectors(e[i-1],e[i]);if(h.length()>Number.EPSILON){h.normalize();d=Math.acos(THREE.Math.clamp(e[i-1].dot(e[i]),-1,1));g[i].applyMatrix4(j.makeRotationAxis(h,d))}f[i].crossVectors(e[i],g[i])}if(c){d=Math.acos(THREE.Math.clamp(g[0].dot(g[b-1]),-1,1));d=d/(b-1);e[0].dot(h.crossVectors(g[0],g[b-1]))>0&&(d=-d);for(i=1;i<b;i++){g[i].applyMatrix4(j.makeRotationAxis(e[i],d*i));f[i].crossVectors(e[i],g[i])}}};
THREE.PolyhedronGeometry=function(a,b,c,d){function e(a){var b=a.normalize().clone();b.index=j.vertices.push(b)-1;var c=Math.atan2(a.z,-a.x)/2/Math.PI+0.5,a=Math.atan2(-a.y,Math.sqrt(a.x*a.x+a.z*a.z))/Math.PI+0.5;b.uv=new THREE.Vector2(c,1-a);return b}function g(a,b,c,d){d=new THREE.Face3(a.index,b.index,c.index,[a.clone(),b.clone(),c.clone()],void 0,d);j.faces.push(d);s.copy(a).add(b).add(c).divideScalar(3);d=Math.atan2(s.z,-s.x);j.faceVertexUvs[0].push([h(a.uv,a,d),h(b.uv,b,d),h(c.uv,c,d)])}function f(a,
b){for(var c=Math.pow(2,b),d=e(j.vertices[a.a]),f=e(j.vertices[a.b]),h=e(j.vertices[a.c]),i=[],l=a.materialIndex,k=0;k<=c;k++){i[k]=[];for(var m=e(d.clone().lerp(h,k/c)),n=e(f.clone().lerp(h,k/c)),p=c-k,r=0;r<=p;r++)i[k][r]=r===0&&k===c?m:e(m.clone().lerp(n,r/p))}for(k=0;k<c;k++)for(r=0;r<2*(c-k)-1;r++){d=Math.floor(r/2);r%2===0?g(i[k][d+1],i[k+1][d],i[k][d],l):g(i[k][d+1],i[k+1][d+1],i[k+1][d],l)}}function h(a,b,c){c<0&&a.x===1&&(a=new THREE.Vector2(a.x-1,a.y));b.x===0&&b.z===0&&(a=new THREE.Vector2(c/
2/Math.PI+0.5,a.y));return a.clone()}THREE.Geometry.call(this);this.type="PolyhedronGeometry";this.parameters={vertices:a,indices:b,radius:c,detail:d};for(var c=c||1,d=d||0,j=this,i=0,k=a.length;i<k;i=i+3)e(new THREE.Vector3(a[i],a[i+1],a[i+2]));for(var a=this.vertices,m=[],l=i=0,k=b.length;i<k;i=i+3,l++){var n=a[b[i]],p=a[b[i+1]],r=a[b[i+2]];m[l]=new THREE.Face3(n.index,p.index,r.index,[n.clone(),p.clone(),r.clone()],void 0,l)}for(var s=new THREE.Vector3,i=0,k=m.length;i<k;i++)f(m[i],d);i=0;for(k=
this.faceVertexUvs[0].length;i<k;i++){b=this.faceVertexUvs[0][i];d=b[0].x;a=b[1].x;m=b[2].x;l=Math.max(d,a,m);n=Math.min(d,a,m);if(l>0.9&&n<0.1){if(d<0.2)b[0].x=b[0].x+1;if(a<0.2)b[1].x=b[1].x+1;if(m<0.2)b[2].x=b[2].x+1}}i=0;for(k=this.vertices.length;i<k;i++)this.vertices[i].multiplyScalar(c);this.mergeVertices();this.computeFaceNormals();this.boundingSphere=new THREE.Sphere(new THREE.Vector3,c)};THREE.PolyhedronGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.PolyhedronGeometry.prototype.constructor=THREE.PolyhedronGeometry;THREE.PolyhedronGeometry.prototype.clone=function(){var a=this.parameters;return new THREE.PolyhedronGeometry(a.vertices,a.indices,a.radius,a.detail)};
THREE.DodecahedronGeometry=function(a,b){var c=(1+Math.sqrt(5))/2,d=1/c;THREE.PolyhedronGeometry.call(this,[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-d,-c,0,-d,c,0,d,-c,0,d,c,-d,-c,0,-d,c,0,d,-c,0,d,c,0,-c,0,-d,c,0,-d,-c,0,d,c,0,d],[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,
12,14,1,14,5,1,5,9],a,b);this.type="DodecahedronGeometry";this.parameters={radius:a,detail:b}};THREE.DodecahedronGeometry.prototype=Object.create(THREE.PolyhedronGeometry.prototype);THREE.DodecahedronGeometry.prototype.constructor=THREE.DodecahedronGeometry;THREE.DodecahedronGeometry.prototype.clone=function(){var a=this.parameters;return new THREE.DodecahedronGeometry(a.radius,a.detail)};
THREE.IcosahedronGeometry=function(a,b){var c=(1+Math.sqrt(5))/2;THREE.PolyhedronGeometry.call(this,[-1,c,0,1,c,0,-1,-c,0,1,-c,0,0,-1,c,0,1,c,0,-1,-c,0,1,-c,c,0,-1,c,0,1,-c,0,-1,-c,0,1],[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],a,b);this.type="IcosahedronGeometry";this.parameters={radius:a,detail:b}};THREE.IcosahedronGeometry.prototype=Object.create(THREE.PolyhedronGeometry.prototype);
THREE.IcosahedronGeometry.prototype.constructor=THREE.IcosahedronGeometry;THREE.IcosahedronGeometry.prototype.clone=function(){var a=this.parameters;return new THREE.IcosahedronGeometry(a.radius,a.detail)};THREE.OctahedronGeometry=function(a,b){THREE.PolyhedronGeometry.call(this,[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2],a,b);this.type="OctahedronGeometry";this.parameters={radius:a,detail:b}};THREE.OctahedronGeometry.prototype=Object.create(THREE.PolyhedronGeometry.prototype);
THREE.OctahedronGeometry.prototype.constructor=THREE.OctahedronGeometry;THREE.OctahedronGeometry.prototype.clone=function(){var a=this.parameters;return new THREE.OctahedronGeometry(a.radius,a.detail)};THREE.TetrahedronGeometry=function(a,b){THREE.PolyhedronGeometry.call(this,[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],[2,1,0,0,3,2,1,3,0,2,3,1],a,b);this.type="TetrahedronGeometry";this.parameters={radius:a,detail:b}};THREE.TetrahedronGeometry.prototype=Object.create(THREE.PolyhedronGeometry.prototype);
THREE.TetrahedronGeometry.prototype.constructor=THREE.TetrahedronGeometry;THREE.TetrahedronGeometry.prototype.clone=function(){var a=this.parameters;return new THREE.TetrahedronGeometry(a.radius,a.detail)};
THREE.ParametricGeometry=function(a,b,c){THREE.Geometry.call(this);this.type="ParametricGeometry";this.parameters={func:a,slices:b,stacks:c};var d=this.vertices,e=this.faces,g=this.faceVertexUvs[0],f,h,j,i,k=b+1;for(f=0;f<=c;f++){i=f/c;for(h=0;h<=b;h++){j=h/b;j=a(j,i);d.push(j)}}var m,l,n,p;for(f=0;f<c;f++)for(h=0;h<b;h++){a=f*k+h;d=f*k+h+1;i=(f+1)*k+h+1;j=(f+1)*k+h;m=new THREE.Vector2(h/b,f/c);l=new THREE.Vector2((h+1)/b,f/c);n=new THREE.Vector2((h+1)/b,(f+1)/c);p=new THREE.Vector2(h/b,(f+1)/c);
e.push(new THREE.Face3(a,d,j));g.push([m,l,p]);e.push(new THREE.Face3(d,i,j));g.push([l.clone(),n,p.clone()])}this.computeFaceNormals();this.computeVertexNormals()};THREE.ParametricGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ParametricGeometry.prototype.constructor=THREE.ParametricGeometry;
THREE.WireframeGeometry=function(a){function b(a,b){return a-b}THREE.BufferGeometry.call(this);var c=[0,0],d={},e=["a","b","c"];if(a instanceof THREE.Geometry){for(var g=a.vertices,f=a.faces,h=0,j=new Uint32Array(6*f.length),a=0,i=f.length;a<i;a++)for(var k=f[a],m=0;m<3;m++){c[0]=k[e[m]];c[1]=k[e[(m+1)%3]];c.sort(b);var l=c.toString();if(d[l]===void 0){j[2*h]=c[0];j[2*h+1]=c[1];d[l]=true;h++}}c=new Float32Array(h*6);a=0;for(i=h;a<i;a++)for(m=0;m<2;m++){d=g[j[2*a+m]];h=6*a+3*m;c[h+0]=d.x;c[h+1]=d.y;
c[h+2]=d.z}this.addAttribute("position",new THREE.BufferAttribute(c,3))}else if(a instanceof THREE.BufferGeometry){if(a.index!==null){i=a.index.array;g=a.attributes.position;e=a.drawcalls;h=0;e.length===0&&a.addGroup(0,i.length);j=new Uint32Array(2*i.length);f=0;for(k=e.length;f<k;++f)for(var a=e[f],m=a.start,l=a.count,a=m,n=m+l;a<n;a=a+3)for(m=0;m<3;m++){c[0]=i[a+m];c[1]=i[a+(m+1)%3];c.sort(b);l=c.toString();if(d[l]===void 0){j[2*h]=c[0];j[2*h+1]=c[1];d[l]=true;h++}}c=new Float32Array(h*6);a=0;for(i=
h;a<i;a++)for(m=0;m<2;m++){h=6*a+3*m;d=j[2*a+m];c[h+0]=g.getX(d);c[h+1]=g.getY(d);c[h+2]=g.getZ(d)}}else{g=a.attributes.position.array;h=g.length/3;j=h/3;c=new Float32Array(h*6);a=0;for(i=j;a<i;a++)for(m=0;m<3;m++){h=18*a+6*m;j=9*a+3*m;c[h+0]=g[j];c[h+1]=g[j+1];c[h+2]=g[j+2];d=9*a+3*((m+1)%3);c[h+3]=g[d];c[h+4]=g[d+1];c[h+5]=g[d+2]}}this.addAttribute("position",new THREE.BufferAttribute(c,3))}};THREE.WireframeGeometry.prototype=Object.create(THREE.BufferGeometry.prototype);
THREE.WireframeGeometry.prototype.constructor=THREE.WireframeGeometry;THREE.AxisHelper=function(a){var a=a||1,b=new Float32Array([0,0,0,a,0,0,0,0,0,0,a,0,0,0,0,0,0,a]),c=new Float32Array([1,0,0,1,0.6,0,0,1,0,0.6,1,0,0,0,1,0,0.6,1]),a=new THREE.BufferGeometry;a.addAttribute("position",new THREE.BufferAttribute(b,3));a.addAttribute("color",new THREE.BufferAttribute(c,3));b=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors});THREE.LineSegments.call(this,a,b)};THREE.AxisHelper.prototype=Object.create(THREE.LineSegments.prototype);
THREE.AxisHelper.prototype.constructor=THREE.AxisHelper;
THREE.ArrowHelper=function(){var a=new THREE.Geometry;a.vertices.push(new THREE.Vector3(0,0,0),new THREE.Vector3(0,1,0));var b=new THREE.CylinderGeometry(0,0.5,1,5,1);b.translate(0,-0.5,0);return function(c,d,e,g,f,h){THREE.Object3D.call(this);g===void 0&&(g=16776960);e===void 0&&(e=1);f===void 0&&(f=0.2*e);h===void 0&&(h=0.2*f);this.position.copy(d);if(f<e){this.line=new THREE.Line(a,new THREE.LineBasicMaterial({color:g}));this.line.matrixAutoUpdate=false;this.add(this.line)}this.cone=new THREE.Mesh(b,
new THREE.MeshBasicMaterial({color:g}));this.cone.matrixAutoUpdate=false;this.add(this.cone);this.setDirection(c);this.setLength(e,f,h)}}();THREE.ArrowHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.ArrowHelper.prototype.constructor=THREE.ArrowHelper;
THREE.ArrowHelper.prototype.setDirection=function(){var a=new THREE.Vector3,b;return function(c){if(c.y>0.99999)this.quaternion.set(0,0,0,1);else if(c.y<-0.99999)this.quaternion.set(1,0,0,0);else{a.set(c.z,0,-c.x).normalize();b=Math.acos(c.y);this.quaternion.setFromAxisAngle(a,b)}}}();THREE.ArrowHelper.prototype.setLength=function(a,b,c){b===void 0&&(b=0.2*a);c===void 0&&(c=0.2*b);if(b<a){this.line.scale.set(1,a-b,1);this.line.updateMatrix()}this.cone.scale.set(c,b,c);this.cone.position.y=a;this.cone.updateMatrix()};
THREE.ArrowHelper.prototype.setColor=function(a){this.line!==void 0&&this.line.material.color.set(a);this.cone.material.color.set(a)};THREE.BoxHelper=function(a){var b=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),c=new Float32Array(24),d=new THREE.BufferGeometry;d.setIndex(new THREE.BufferAttribute(b,1));d.addAttribute("position",new THREE.BufferAttribute(c,3));THREE.LineSegments.call(this,d,new THREE.LineBasicMaterial({color:16776960}));a!==void 0&&this.update(a)};
THREE.BoxHelper.prototype=Object.create(THREE.LineSegments.prototype);THREE.BoxHelper.prototype.constructor=THREE.BoxHelper;
THREE.BoxHelper.prototype.update=function(){var a=new THREE.Box3;return function(b){a.setFromObject(b);if(!a.empty()){var b=a.min,c=a.max,d=this.geometry.attributes.position,e=d.array;e[0]=c.x;e[1]=c.y;e[2]=c.z;e[3]=b.x;e[4]=c.y;e[5]=c.z;e[6]=b.x;e[7]=b.y;e[8]=c.z;e[9]=c.x;e[10]=b.y;e[11]=c.z;e[12]=c.x;e[13]=c.y;e[14]=b.z;e[15]=b.x;e[16]=c.y;e[17]=b.z;e[18]=b.x;e[19]=b.y;e[20]=b.z;e[21]=c.x;e[22]=b.y;e[23]=b.z;d.needsUpdate=true;this.geometry.computeBoundingSphere()}}}();
THREE.BoundingBoxHelper=function(a,b){var c=b!==void 0?b:8947848;this.object=a;this.box=new THREE.Box3;THREE.Mesh.call(this,new THREE.BoxGeometry(1,1,1),new THREE.MeshBasicMaterial({color:c,wireframe:true}))};THREE.BoundingBoxHelper.prototype=Object.create(THREE.Mesh.prototype);THREE.BoundingBoxHelper.prototype.constructor=THREE.BoundingBoxHelper;THREE.BoundingBoxHelper.prototype.update=function(){this.box.setFromObject(this.object);this.box.size(this.scale);this.box.center(this.position)};
THREE.CameraHelper=function(a){function b(a,b,d){c(a,d);c(b,d)}function c(a,b){d.vertices.push(new THREE.Vector3);d.colors.push(new THREE.Color(b));g[a]===void 0&&(g[a]=[]);g[a].push(d.vertices.length-1)}var d=new THREE.Geometry,e=new THREE.LineBasicMaterial({color:16777215,vertexColors:THREE.FaceColors}),g={};b("n1","n2",16755200);b("n2","n4",16755200);b("n4","n3",16755200);b("n3","n1",16755200);b("f1","f2",16755200);b("f2","f4",16755200);b("f4","f3",16755200);b("f3","f1",16755200);b("n1","f1",16755200);
b("n2","f2",16755200);b("n3","f3",16755200);b("n4","f4",16755200);b("p","n1",16711680);b("p","n2",16711680);b("p","n3",16711680);b("p","n4",16711680);b("u1","u2",43775);b("u2","u3",43775);b("u3","u1",43775);b("c","t",16777215);b("p","c",3355443);b("cn1","cn2",3355443);b("cn3","cn4",3355443);b("cf1","cf2",3355443);b("cf3","cf4",3355443);THREE.LineSegments.call(this,d,e);this.camera=a;this.camera.updateProjectionMatrix();this.matrix=a.matrixWorld;this.matrixAutoUpdate=false;this.pointMap=g;this.update()};
THREE.CameraHelper.prototype=Object.create(THREE.LineSegments.prototype);THREE.CameraHelper.prototype.constructor=THREE.CameraHelper;
THREE.CameraHelper.prototype.update=function(){function a(a,f,h,j){d.set(f,h,j).unproject(e);a=c[a];if(a!==void 0){f=0;for(h=a.length;f<h;f++)b.vertices[a[f]].copy(d)}}var b,c,d=new THREE.Vector3,e=new THREE.Camera;return function(){b=this.geometry;c=this.pointMap;e.projectionMatrix.copy(this.camera.projectionMatrix);a("c",0,0,-1);a("t",0,0,1);a("n1",-1,-1,-1);a("n2",1,-1,-1);a("n3",-1,1,-1);a("n4",1,1,-1);a("f1",-1,-1,1);a("f2",1,-1,1);a("f3",-1,1,1);a("f4",1,1,1);a("u1",0.7,1.1,-1);a("u2",-0.7,
1.1,-1);a("u3",0,2,-1);a("cf1",-1,0,1);a("cf2",1,0,1);a("cf3",0,-1,1);a("cf4",0,1,1);a("cn1",-1,0,-1);a("cn2",1,0,-1);a("cn3",0,-1,-1);a("cn4",0,1,-1);b.verticesNeedUpdate=true}}();
THREE.DirectionalLightHelper=function(a,b){THREE.Object3D.call(this);this.light=a;this.light.updateMatrixWorld();this.matrix=a.matrixWorld;this.matrixAutoUpdate=false;var b=b||1,c=new THREE.Geometry;c.vertices.push(new THREE.Vector3(-b,b,0),new THREE.Vector3(b,b,0),new THREE.Vector3(b,-b,0),new THREE.Vector3(-b,-b,0),new THREE.Vector3(-b,b,0));var d=new THREE.LineBasicMaterial({fog:false});d.color.copy(this.light.color).multiplyScalar(this.light.intensity);this.lightPlane=new THREE.Line(c,d);this.add(this.lightPlane);
c=new THREE.Geometry;c.vertices.push(new THREE.Vector3,new THREE.Vector3);d=new THREE.LineBasicMaterial({fog:false});d.color.copy(this.light.color).multiplyScalar(this.light.intensity);this.targetLine=new THREE.Line(c,d);this.add(this.targetLine);this.update()};THREE.DirectionalLightHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.DirectionalLightHelper.prototype.constructor=THREE.DirectionalLightHelper;
THREE.DirectionalLightHelper.prototype.dispose=function(){this.lightPlane.geometry.dispose();this.lightPlane.material.dispose();this.targetLine.geometry.dispose();this.targetLine.material.dispose()};
THREE.DirectionalLightHelper.prototype.update=function(){var a=new THREE.Vector3,b=new THREE.Vector3,c=new THREE.Vector3;return function(){a.setFromMatrixPosition(this.light.matrixWorld);b.setFromMatrixPosition(this.light.target.matrixWorld);c.subVectors(b,a);this.lightPlane.lookAt(c);this.lightPlane.material.color.copy(this.light.color).multiplyScalar(this.light.intensity);this.targetLine.geometry.vertices[1].copy(c);this.targetLine.geometry.verticesNeedUpdate=true;this.targetLine.material.color.copy(this.lightPlane.material.color)}}();
THREE.EdgesHelper=function(a,b,c){b=b!==void 0?b:16777215;THREE.LineSegments.call(this,new THREE.EdgesGeometry(a.geometry,c),new THREE.LineBasicMaterial({color:b}));this.matrix=a.matrixWorld;this.matrixAutoUpdate=false};THREE.EdgesHelper.prototype=Object.create(THREE.LineSegments.prototype);THREE.EdgesHelper.prototype.constructor=THREE.EdgesHelper;
THREE.FaceNormalsHelper=function(a,b,c,d){this.object=a;this.size=b!==void 0?b:1;a=c!==void 0?c:16776960;d=d!==void 0?d:1;b=0;c=this.object.geometry;c instanceof THREE.Geometry?b=c.faces.length:console.warn("THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.");c=new THREE.BufferGeometry;b=new THREE.Float32Attribute(b*6,3);c.addAttribute("position",b);THREE.LineSegments.call(this,c,new THREE.LineBasicMaterial({color:a,linewidth:d}));this.matrixAutoUpdate=
false;this.update()};THREE.FaceNormalsHelper.prototype=Object.create(THREE.LineSegments.prototype);THREE.FaceNormalsHelper.prototype.constructor=THREE.FaceNormalsHelper;
THREE.FaceNormalsHelper.prototype.update=function(){var a=new THREE.Vector3,b=new THREE.Vector3,c=new THREE.Matrix3;return function(){this.object.updateMatrixWorld(true);c.getNormalMatrix(this.object.matrixWorld);for(var d=this.object.matrixWorld,e=this.geometry.attributes.position,g=this.object.geometry,f=g.vertices,g=g.faces,h=0,j=0,i=g.length;j<i;j++){var k=g[j],m=k.normal;a.copy(f[k.a]).add(f[k.b]).add(f[k.c]).divideScalar(3).applyMatrix4(d);b.copy(m).applyMatrix3(c).normalize().multiplyScalar(this.size).add(a);
e.setXYZ(h,a.x,a.y,a.z);h=h+1;e.setXYZ(h,b.x,b.y,b.z);h=h+1}e.needsUpdate=true;return this}}();
THREE.GridHelper=function(a,b){var c=new THREE.Geometry,d=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors});this.color1=new THREE.Color(4473924);this.color2=new THREE.Color(8947848);for(var e=-a;e<=a;e=e+b){c.vertices.push(new THREE.Vector3(-a,0,e),new THREE.Vector3(a,0,e),new THREE.Vector3(e,0,-a),new THREE.Vector3(e,0,a));var g=e===0?this.color1:this.color2;c.colors.push(g,g,g,g)}THREE.LineSegments.call(this,c,d)};THREE.GridHelper.prototype=Object.create(THREE.LineSegments.prototype);
THREE.GridHelper.prototype.constructor=THREE.GridHelper;THREE.GridHelper.prototype.setColors=function(a,b){this.color1.set(a);this.color2.set(b);this.geometry.colorsNeedUpdate=true};
THREE.HemisphereLightHelper=function(a,b){THREE.Object3D.call(this);this.light=a;this.light.updateMatrixWorld();this.matrix=a.matrixWorld;this.matrixAutoUpdate=false;this.colors=[new THREE.Color,new THREE.Color];var c=new THREE.SphereGeometry(b,4,2);c.rotateX(-Math.PI/2);for(var d=0;d<8;d++)c.faces[d].color=this.colors[d<4?0:1];d=new THREE.MeshBasicMaterial({vertexColors:THREE.FaceColors,wireframe:true});this.lightSphere=new THREE.Mesh(c,d);this.add(this.lightSphere);this.update()};
THREE.HemisphereLightHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.HemisphereLightHelper.prototype.constructor=THREE.HemisphereLightHelper;THREE.HemisphereLightHelper.prototype.dispose=function(){this.lightSphere.geometry.dispose();this.lightSphere.material.dispose()};
THREE.HemisphereLightHelper.prototype.update=function(){var a=new THREE.Vector3;return function(){this.colors[0].copy(this.light.color).multiplyScalar(this.light.intensity);this.colors[1].copy(this.light.groundColor).multiplyScalar(this.light.intensity);this.lightSphere.lookAt(a.setFromMatrixPosition(this.light.matrixWorld).negate());this.lightSphere.geometry.colorsNeedUpdate=true}}();
THREE.PointLightHelper=function(a,b){this.light=a;this.light.updateMatrixWorld();var c=new THREE.SphereGeometry(b,4,2),d=new THREE.MeshBasicMaterial({wireframe:true,fog:false});d.color.copy(this.light.color).multiplyScalar(this.light.intensity);THREE.Mesh.call(this,c,d);this.matrix=this.light.matrixWorld;this.matrixAutoUpdate=false};THREE.PointLightHelper.prototype=Object.create(THREE.Mesh.prototype);THREE.PointLightHelper.prototype.constructor=THREE.PointLightHelper;
THREE.PointLightHelper.prototype.dispose=function(){this.geometry.dispose();this.material.dispose()};THREE.PointLightHelper.prototype.update=function(){this.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)};
THREE.SkeletonHelper=function(a){this.bones=this.getBoneList(a);for(var b=new THREE.Geometry,c=0;c<this.bones.length;c++)if(this.bones[c].parent instanceof THREE.Bone){b.vertices.push(new THREE.Vector3);b.vertices.push(new THREE.Vector3);b.colors.push(new THREE.Color(0,0,1));b.colors.push(new THREE.Color(0,1,0))}b.dynamic=true;c=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors,depthTest:false,depthWrite:false,transparent:true});THREE.LineSegments.call(this,b,c);this.root=a;this.matrix=
a.matrixWorld;this.matrixAutoUpdate=false;this.update()};THREE.SkeletonHelper.prototype=Object.create(THREE.LineSegments.prototype);THREE.SkeletonHelper.prototype.constructor=THREE.SkeletonHelper;THREE.SkeletonHelper.prototype.getBoneList=function(a){var b=[];a instanceof THREE.Bone&&b.push(a);for(var c=0;c<a.children.length;c++)b.push.apply(b,this.getBoneList(a.children[c]));return b};
THREE.SkeletonHelper.prototype.update=function(){for(var a=this.geometry,b=(new THREE.Matrix4).getInverse(this.root.matrixWorld),c=new THREE.Matrix4,d=0,e=0;e<this.bones.length;e++){var g=this.bones[e];if(g.parent instanceof THREE.Bone){c.multiplyMatrices(b,g.matrixWorld);a.vertices[d].setFromMatrixPosition(c);c.multiplyMatrices(b,g.parent.matrixWorld);a.vertices[d+1].setFromMatrixPosition(c);d=d+2}}a.verticesNeedUpdate=true;a.computeBoundingSphere()};
THREE.SpotLightHelper=function(a){THREE.Object3D.call(this);this.light=a;this.light.updateMatrixWorld();this.matrix=a.matrixWorld;this.matrixAutoUpdate=false;a=new THREE.CylinderGeometry(0,1,1,8,1,true);a.translate(0,-0.5,0);a.rotateX(-Math.PI/2);var b=new THREE.MeshBasicMaterial({wireframe:true,fog:false});this.cone=new THREE.Mesh(a,b);this.add(this.cone);this.update()};THREE.SpotLightHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.SpotLightHelper.prototype.constructor=THREE.SpotLightHelper;
THREE.SpotLightHelper.prototype.dispose=function(){this.cone.geometry.dispose();this.cone.material.dispose()};THREE.SpotLightHelper.prototype.update=function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(){var c=this.light.distance?this.light.distance:1E4,d=c*Math.tan(this.light.angle);this.cone.scale.set(d,d,c);a.setFromMatrixPosition(this.light.matrixWorld);b.setFromMatrixPosition(this.light.target.matrixWorld);this.cone.lookAt(b.sub(a));this.cone.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)}}();
THREE.VertexNormalsHelper=function(a,b,c,d){this.object=a;this.size=b!==void 0?b:1;a=c!==void 0?c:16711680;d=d!==void 0?d:1;b=0;c=this.object.geometry;if(c instanceof THREE.Geometry)b=c.faces.length*3;else if(c instanceof THREE.BufferGeometry)b=c.attributes.normal.count;c=new THREE.BufferGeometry;b=new THREE.Float32Attribute(b*6,3);c.addAttribute("position",b);THREE.LineSegments.call(this,c,new THREE.LineBasicMaterial({color:a,linewidth:d}));this.matrixAutoUpdate=false;this.update()};
THREE.VertexNormalsHelper.prototype=Object.create(THREE.LineSegments.prototype);THREE.VertexNormalsHelper.prototype.constructor=THREE.VertexNormalsHelper;
THREE.VertexNormalsHelper.prototype.update=function(){var a=new THREE.Vector3,b=new THREE.Vector3,c=new THREE.Matrix3;return function(){var d=["a","b","c"];this.object.updateMatrixWorld(true);c.getNormalMatrix(this.object.matrixWorld);var e=this.object.matrixWorld,g=this.geometry.attributes.position,f=this.object.geometry;if(f instanceof THREE.Geometry)for(var h=f.vertices,j=f.faces,i=f=0,k=j.length;i<k;i++)for(var m=j[i],l=0,n=m.vertexNormals.length;l<n;l++){var p=m.vertexNormals[l];a.copy(h[m[d[l]]]).applyMatrix4(e);
b.copy(p).applyMatrix3(c).normalize().multiplyScalar(this.size).add(a);g.setXYZ(f,a.x,a.y,a.z);f=f+1;g.setXYZ(f,b.x,b.y,b.z);f=f+1}else if(f instanceof THREE.BufferGeometry){d=f.attributes.position;h=f.attributes.normal;l=f=0;for(n=d.count;l<n;l++){a.set(d.getX(l),d.getY(l),d.getZ(l)).applyMatrix4(e);b.set(h.getX(l),h.getY(l),h.getZ(l));b.applyMatrix3(c).normalize().multiplyScalar(this.size).add(a);g.setXYZ(f,a.x,a.y,a.z);f=f+1;g.setXYZ(f,b.x,b.y,b.z);f=f+1}}g.needsUpdate=true;return this}}();
THREE.WireframeHelper=function(a,b){var c=b!==void 0?b:16777215;THREE.LineSegments.call(this,new THREE.WireframeGeometry(a.geometry),new THREE.LineBasicMaterial({color:c}));this.matrix=a.matrixWorld;this.matrixAutoUpdate=false};THREE.WireframeHelper.prototype=Object.create(THREE.LineSegments.prototype);THREE.WireframeHelper.prototype.constructor=THREE.WireframeHelper;THREE.ImmediateRenderObject=function(a){THREE.Object3D.call(this);this.material=a;this.render=function(){}};
THREE.ImmediateRenderObject.prototype=Object.create(THREE.Object3D.prototype);THREE.ImmediateRenderObject.prototype.constructor=THREE.ImmediateRenderObject;THREE.MorphBlendMesh=function(a,b){THREE.Mesh.call(this,a,b);this.animationsMap={};this.animationsList=[];var c=this.geometry.morphTargets.length;this.createAnimation("__default",0,c-1,c/1);this.setAnimationWeight("__default",1)};THREE.MorphBlendMesh.prototype=Object.create(THREE.Mesh.prototype);THREE.MorphBlendMesh.prototype.constructor=THREE.MorphBlendMesh;
THREE.MorphBlendMesh.prototype.createAnimation=function(a,b,c,d){b={start:b,end:c,length:c-b+1,fps:d,duration:(c-b)/d,lastFrame:0,currentFrame:0,active:false,time:0,direction:1,weight:1,directionBackwards:false,mirroredLoop:false};this.animationsMap[a]=b;this.animationsList.push(b)};
THREE.MorphBlendMesh.prototype.autoCreateAnimations=function(a){for(var b=/([a-z]+)_?(\d+)/,c,d={},e=this.geometry,g=0,f=e.morphTargets.length;g<f;g++){var h=e.morphTargets[g].name.match(b);if(h&&h.length>1){var j=h[1];d[j]||(d[j]={start:Infinity,end:-Infinity});h=d[j];if(g<h.start)h.start=g;if(g>h.end)h.end=g;c||(c=j)}}for(j in d){h=d[j];this.createAnimation(j,h.start,h.end,a)}this.firstAnimation=c};
THREE.MorphBlendMesh.prototype.setAnimationDirectionForward=function(a){if(a=this.animationsMap[a]){a.direction=1;a.directionBackwards=false}};THREE.MorphBlendMesh.prototype.setAnimationDirectionBackward=function(a){if(a=this.animationsMap[a]){a.direction=-1;a.directionBackwards=true}};THREE.MorphBlendMesh.prototype.setAnimationFPS=function(a,b){var c=this.animationsMap[a];if(c){c.fps=b;c.duration=(c.end-c.start)/c.fps}};
THREE.MorphBlendMesh.prototype.setAnimationDuration=function(a,b){var c=this.animationsMap[a];if(c){c.duration=b;c.fps=(c.end-c.start)/c.duration}};THREE.MorphBlendMesh.prototype.setAnimationWeight=function(a,b){var c=this.animationsMap[a];if(c)c.weight=b};THREE.MorphBlendMesh.prototype.setAnimationTime=function(a,b){var c=this.animationsMap[a];if(c)c.time=b};THREE.MorphBlendMesh.prototype.getAnimationTime=function(a){var b=0;if(a=this.animationsMap[a])b=a.time;return b};
THREE.MorphBlendMesh.prototype.getAnimationDuration=function(a){var b=-1;if(a=this.animationsMap[a])b=a.duration;return b};THREE.MorphBlendMesh.prototype.playAnimation=function(a){var b=this.animationsMap[a];if(b){b.time=0;b.active=true}else console.warn("THREE.MorphBlendMesh: animation["+a+"] undefined in .playAnimation()")};THREE.MorphBlendMesh.prototype.stopAnimation=function(a){if(a=this.animationsMap[a])a.active=false};
THREE.MorphBlendMesh.prototype.update=function(a){for(var b=0,c=this.animationsList.length;b<c;b++){var d=this.animationsList[b];if(d.active){var e=d.duration/d.length;d.time=d.time+d.direction*a;if(d.mirroredLoop){if(d.time>d.duration||d.time<0){d.direction=d.direction*-1;if(d.time>d.duration){d.time=d.duration;d.directionBackwards=true}if(d.time<0){d.time=0;d.directionBackwards=false}}}else{d.time=d.time%d.duration;if(d.time<0)d.time=d.time+d.duration}var g=d.start+THREE.Math.clamp(Math.floor(d.time/
e),0,d.length-1),f=d.weight;if(g!==d.currentFrame){this.morphTargetInfluences[d.lastFrame]=0;this.morphTargetInfluences[d.currentFrame]=1*f;this.morphTargetInfluences[g]=0;d.lastFrame=d.currentFrame;d.currentFrame=g}e=d.time%e/e;d.directionBackwards&&(e=1-e);if(d.currentFrame!==d.lastFrame){this.morphTargetInfluences[d.currentFrame]=e*f;this.morphTargetInfluences[d.lastFrame]=(1-e)*f}else this.morphTargetInfluences[d.currentFrame]=f}}};(function(a,b,c,d,e,g){function f(a){var b,c=a.length,e=this,f=0,g=e.i=e.j=0,h=e.S=[];for(c||(a=[c++]);f<d;)h[f]=f++;for(f=0;f<d;f++)h[f]=h[g=p&g+a[f%c]+(b=h[f])],h[g]=b;(e.g=function(a){for(var b,c=0,f=e.i,g=e.j,h=e.S;a--;)b=h[f=p&f+1],c=c*d+h[p&(h[f]=h[g=p&g+b])+(h[g]=b)];e.i=f;e.j=g;return c})(d)}function h(a,b){var c=[],d=(typeof a)[0],e;if(b&&"o"==d)for(e in a)if(a.hasOwnProperty(e))try{c.push(h(a[e],b-1))}catch(f){}return c.length?c:"s"==d?a:a+"\x00"}function j(a,b){for(var c=a+"",d,e=0;e<c.length;)b[p&
e]=p&(d^=19*b[p&e])+c.charCodeAt(e++);return k(b)}function i(c){try{return a.crypto.getRandomValues(c=new Uint8Array(d)),k(c)}catch(e){return[+new Date,a.document,a.history,a.navigator,a.screen,k(b)]}}function k(a){return String.fromCharCode.apply(0,a)}var m=c.pow(d,e),l=c.pow(2,g),n=2*l,p=d-1;c.seedrandom=function(a,g){var p=[],u=j(h(g?[a,k(b)]:0 in arguments?a:i(),3),p),A=new f(p);j(k(A.S),b);c.random=function(){for(var a=A.g(e),b=m,c=0;a<l;)a=(a+c)*d,b*=d,c=A.g(1);for(;a>=n;)a/=2,b/=2,c>>>=1;return(a+
c)/b};return u};j(c.random(),b)})(this,[],Math,256,6,52);void 0===Date.now&&(Date.now=function(){return(new Date).valueOf()});
var TWEEN=TWEEN||function(){var a=[];return{REVISION:"12",getAll:function(){return a},removeAll:function(){a=[]},add:function(b){a.push(b)},remove:function(b){b=a.indexOf(b);-1!==b&&a.splice(b,1)},update:function(b){if(0===a.length)return!1;for(var c=0,b=void 0!==b?b:"undefined"!==typeof window&&void 0!==window.performance&&void 0!==window.performance.now?window.performance.now():Date.now();c<a.length;)a[c].update(b)?c++:a.splice(c,1);return!0}}}();
TWEEN.Tween=function(a){var b={},c={},d={},e=1E3,g=0,f=!1,h=!1,j=0,i=null,k=TWEEN.Easing.Linear.None,m=TWEEN.Interpolation.Linear,l=[],n=null,p=!1,r=null,s=null,q;for(q in a)b[q]=parseFloat(a[q],10);this.to=function(a,b){void 0!==b&&(e=b);c=a;return this};this.start=function(e){TWEEN.add(this);h=!0;p=!1;i=void 0!==e?e:"undefined"!==typeof window&&void 0!==window.performance&&void 0!==window.performance.now?window.performance.now():Date.now();i+=j;for(var f in c){if(c[f]instanceof Array){if(0===c[f].length)continue;
c[f]=[a[f]].concat(c[f])}b[f]=a[f];!1===b[f]instanceof Array&&(b[f]*=1);d[f]=b[f]||0}return this};this.stop=function(){if(!h)return this;TWEEN.remove(this);h=!1;this.stopChainedTweens();return this};this.stopChainedTweens=function(){for(var a=0,b=l.length;a<b;a++)l[a].stop()};this.delay=function(a){j=a;return this};this.repeat=function(a){g=a;return this};this.yoyo=function(a){f=a;return this};this.easing=function(a){k=a;return this};this.interpolation=function(a){m=a;return this};this.chain=function(){l=
arguments;return this};this.onStart=function(a){n=a;return this};this.onUpdate=function(a){r=a;return this};this.onComplete=function(a){s=a;return this};this.update=function(h){var q;if(h<i)return!0;!1===p&&(null!==n&&n.call(a),p=!0);var t=(h-i)/e,t=1<t?1:t,y=k(t);for(q in c){var v=b[q]||0,w=c[q];w instanceof Array?a[q]=m(w,y):("string"===typeof w&&(w=v+parseFloat(w,10)),"number"===typeof w&&(a[q]=v+(w-v)*y))}null!==r&&r.call(a,y);if(1==t)if(0<g){isFinite(g)&&g--;for(q in d)"string"===typeof c[q]&&
(d[q]+=parseFloat(c[q],10)),f&&(t=d[q],d[q]=c[q],c[q]=t),b[q]=d[q];i=h+j}else{null!==s&&s.call(a);q=0;for(t=l.length;q<t;q++)l[q].start(h);return!1}return!0}};
TWEEN.Easing={Linear:{None:function(a){return a}},Quadratic:{In:function(a){return a*a},Out:function(a){return a*(2-a)},InOut:function(a){return 1>(a*=2)?0.5*a*a:-0.5*(--a*(a-2)-1)}},Cubic:{In:function(a){return a*a*a},Out:function(a){return--a*a*a+1},InOut:function(a){return 1>(a*=2)?0.5*a*a*a:0.5*((a-=2)*a*a+2)}},Quartic:{In:function(a){return a*a*a*a},Out:function(a){return 1- --a*a*a*a},InOut:function(a){return 1>(a*=2)?0.5*a*a*a*a:-0.5*((a-=2)*a*a*a-2)}},Quintic:{In:function(a){return a*a*a*
a*a},Out:function(a){return--a*a*a*a*a+1},InOut:function(a){return 1>(a*=2)?0.5*a*a*a*a*a:0.5*((a-=2)*a*a*a*a+2)}},Sinusoidal:{In:function(a){return 1-Math.cos(a*Math.PI/2)},Out:function(a){return Math.sin(a*Math.PI/2)},InOut:function(a){return 0.5*(1-Math.cos(Math.PI*a))}},Exponential:{In:function(a){return 0===a?0:Math.pow(1024,a-1)},Out:function(a){return 1===a?1:1-Math.pow(2,-10*a)},InOut:function(a){return 0===a?0:1===a?1:1>(a*=2)?0.5*Math.pow(1024,a-1):0.5*(-Math.pow(2,-10*(a-1))+2)}},Circular:{In:function(a){return 1-
Math.sqrt(1-a*a)},Out:function(a){return Math.sqrt(1- --a*a)},InOut:function(a){return 1>(a*=2)?-0.5*(Math.sqrt(1-a*a)-1):0.5*(Math.sqrt(1-(a-=2)*a)+1)}},Elastic:{In:function(a){var b,c=0.1;if(0===a)return 0;if(1===a)return 1;!c||1>c?(c=1,b=0.1):b=0.4*Math.asin(1/c)/(2*Math.PI);return-(c*Math.pow(2,10*(a-=1))*Math.sin(2*(a-b)*Math.PI/0.4))},Out:function(a){var b,c=0.1;if(0===a)return 0;if(1===a)return 1;!c||1>c?(c=1,b=0.1):b=0.4*Math.asin(1/c)/(2*Math.PI);return c*Math.pow(2,-10*a)*Math.sin(2*(a-
b)*Math.PI/0.4)+1},InOut:function(a){var b,c=0.1;if(0===a)return 0;if(1===a)return 1;!c||1>c?(c=1,b=0.1):b=0.4*Math.asin(1/c)/(2*Math.PI);return 1>(a*=2)?-0.5*c*Math.pow(2,10*(a-=1))*Math.sin(2*(a-b)*Math.PI/0.4):0.5*c*Math.pow(2,-10*(a-=1))*Math.sin(2*(a-b)*Math.PI/0.4)+1}},Back:{In:function(a){return a*a*(2.70158*a-1.70158)},Out:function(a){return--a*a*(2.70158*a+1.70158)+1},InOut:function(a){return 1>(a*=2)?0.5*a*a*(3.5949095*a-2.5949095):0.5*((a-=2)*a*(3.5949095*a+2.5949095)+2)}},Bounce:{In:function(a){return 1-
TWEEN.Easing.Bounce.Out(1-a)},Out:function(a){return a<1/2.75?7.5625*a*a:a<2/2.75?7.5625*(a-=1.5/2.75)*a+0.75:a<2.5/2.75?7.5625*(a-=2.25/2.75)*a+0.9375:7.5625*(a-=2.625/2.75)*a+0.984375},InOut:function(a){return 0.5>a?0.5*TWEEN.Easing.Bounce.In(2*a):0.5*TWEEN.Easing.Bounce.Out(2*a-1)+0.5}}};
TWEEN.Interpolation={Linear:function(a,b){var c=a.length-1,d=c*b,e=Math.floor(d),g=TWEEN.Interpolation.Utils.Linear;return 0>b?g(a[0],a[1],d):1<b?g(a[c],a[c-1],c-d):g(a[e],a[e+1>c?c:e+1],d-e)},Bezier:function(a,b){var c=0,d=a.length-1,e=Math.pow,g=TWEEN.Interpolation.Utils.Bernstein,f;for(f=0;f<=d;f++)c+=e(1-b,d-f)*e(b,f)*a[f]*g(d,f);return c},CatmullRom:function(a,b){var c=a.length-1,d=c*b,e=Math.floor(d),g=TWEEN.Interpolation.Utils.CatmullRom;return a[0]===a[c]?(0>b&&(e=Math.floor(d=c*(1+b))),g(a[(e-
1+c)%c],a[e],a[(e+1)%c],a[(e+2)%c],d-e)):0>b?a[0]-(g(a[0],a[0],a[1],a[1],-d)-a[0]):1<b?a[c]-(g(a[c],a[c],a[c-1],a[c-1],d-c)-a[c]):g(a[e?e-1:0],a[e],a[c<e+1?c:e+1],a[c<e+2?c:e+2],d-e)},Utils:{Linear:function(a,b,c){return(b-a)*c+a},Bernstein:function(a,b){var c=TWEEN.Interpolation.Utils.Factorial;return c(a)/c(b)/c(a-b)},Factorial:function(){var a=[1];return function(b){var c=1,d;if(a[b])return a[b];for(d=b;1<d;d--)c*=d;return a[b]=c}}(),CatmullRom:function(a,b,c,d,e){var a=0.5*(c-a),d=0.5*(d-b),g=
e*e;return(2*b-2*c+a+d)*e*g+(-3*b+3*c-2*a-d)*g+a*e+b}}};THREE.BloomPass=function(a,b,c,d){var a=void 0!==a?a:1,b=void 0!==b?b:25,c=void 0!==c?c:4,d=void 0!==d?d:256,e={minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBFormat};this.renderTargetX=new THREE.WebGLRenderTarget(d,d,e);this.renderTargetY=new THREE.WebGLRenderTarget(d,d,e);void 0===THREE.CopyShader&&console.error("THREE.BloomPass relies on THREE.CopyShader");d=THREE.CopyShader;this.copyUniforms=THREE.UniformsUtils.clone(d.uniforms);this.copyUniforms.opacity.value=a;this.materialCopy=
new THREE.ShaderMaterial({uniforms:this.copyUniforms,vertexShader:d.vertexShader,fragmentShader:d.fragmentShader,blending:THREE.AdditiveBlending,transparent:!0});void 0===THREE.ConvolutionShader&&console.error("THREE.BloomPass relies on THREE.ConvolutionShader");a=THREE.ConvolutionShader;this.convolutionUniforms=THREE.UniformsUtils.clone(a.uniforms);this.convolutionUniforms.uImageIncrement.value=THREE.BloomPass.blurx;this.convolutionUniforms.cKernel.value=THREE.ConvolutionShader.buildKernel(c);this.materialConvolution=
new THREE.ShaderMaterial({uniforms:this.convolutionUniforms,vertexShader:a.vertexShader,fragmentShader:a.fragmentShader,defines:{KERNEL_SIZE_FLOAT:b.toFixed(1),KERNEL_SIZE_INT:b.toFixed(0)}});this.enabled=!0;this.clear=this.needsSwap=!1};
THREE.BloomPass.prototype={render:function(a,b,c,d,e){e&&a.context.disable(a.context.STENCIL_TEST);THREE.EffectComposer.quad.material=this.materialConvolution;this.convolutionUniforms.tDiffuse.value=c;this.convolutionUniforms.uImageIncrement.value=THREE.BloomPass.blurX;a.render(THREE.EffectComposer.scene,THREE.EffectComposer.camera,this.renderTargetX,!0);this.convolutionUniforms.tDiffuse.value=this.renderTargetX;this.convolutionUniforms.uImageIncrement.value=THREE.BloomPass.blurY;a.render(THREE.EffectComposer.scene,
THREE.EffectComposer.camera,this.renderTargetY,!0);THREE.EffectComposer.quad.material=this.materialCopy;this.copyUniforms.tDiffuse.value=this.renderTargetY;e&&a.context.enable(a.context.STENCIL_TEST);a.render(THREE.EffectComposer.scene,THREE.EffectComposer.camera,c,this.clear)}};THREE.BloomPass.blurX=new THREE.Vector2(0.001953125,0);THREE.BloomPass.blurY=new THREE.Vector2(0,0.001953125);THREE.EffectComposer=function(a,b){this.renderer=a;void 0===b&&(b=new THREE.WebGLRenderTarget(window.innerWidth||1,window.innerHeight||1,{minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBFormat,stencilBuffer:!1}));this.renderTarget1=b;this.renderTarget2=b.clone();this.writeBuffer=this.renderTarget1;this.readBuffer=this.renderTarget2;this.passes=[];void 0===THREE.CopyShader&&console.error("THREE.EffectComposer relies on THREE.CopyShader");this.copyPass=new THREE.ShaderPass(THREE.CopyShader)};
THREE.EffectComposer.prototype={swapBuffers:function(){var a=this.readBuffer;this.readBuffer=this.writeBuffer;this.writeBuffer=a},addPass:function(a){this.passes.push(a)},insertPass:function(a,b){this.passes.splice(b,0,a)},render:function(a){this.writeBuffer=this.renderTarget1;this.readBuffer=this.renderTarget2;var b=!1,c,d,e=this.passes.length;for(d=0;d<e;d++)if(c=this.passes[d],c.enabled){c.render(this.renderer,this.writeBuffer,this.readBuffer,a,b);if(c.needsSwap){if(b){var g=this.renderer.context;
g.stencilFunc(g.NOTEQUAL,1,4294967295);this.copyPass.render(this.renderer,this.writeBuffer,this.readBuffer,a);g.stencilFunc(g.EQUAL,1,4294967295)}this.swapBuffers()}c instanceof THREE.MaskPass?b=!0:c instanceof THREE.ClearMaskPass&&(b=!1)}},reset:function(a){void 0===a&&(a=this.renderTarget1.clone(),a.width=window.innerWidth,a.height=window.innerHeight);this.renderTarget1=a;this.renderTarget2=a.clone();this.writeBuffer=this.renderTarget1;this.readBuffer=this.renderTarget2},setSize:function(a,b){var c=
this.renderTarget1.clone();c.width=a;c.height=b;this.reset(c)}};THREE.EffectComposer.camera=new THREE.OrthographicCamera(-1,1,1,-1,0,1);THREE.EffectComposer.quad=new THREE.Mesh(new THREE.PlaneGeometry(2,2),null);THREE.EffectComposer.scene=new THREE.Scene;THREE.EffectComposer.scene.add(THREE.EffectComposer.quad);THREE.MaskPass=function(a,b){this.scene=a;this.camera=b;this.clear=this.enabled=!0;this.inverse=this.needsSwap=!1};
THREE.MaskPass.prototype={render:function(a,b,c){var d=a.context;d.colorMask(!1,!1,!1,!1);d.depthMask(!1);var e,g;this.inverse?(e=0,g=1):(e=1,g=0);d.enable(d.STENCIL_TEST);d.stencilOp(d.REPLACE,d.REPLACE,d.REPLACE);d.stencilFunc(d.ALWAYS,e,4294967295);d.clearStencil(g);a.render(this.scene,this.camera,c,this.clear);a.render(this.scene,this.camera,b,this.clear);d.colorMask(!0,!0,!0,!0);d.depthMask(!0);d.stencilFunc(d.EQUAL,1,4294967295);d.stencilOp(d.KEEP,d.KEEP,d.KEEP)}};
THREE.ClearMaskPass=function(){this.enabled=!0};THREE.ClearMaskPass.prototype={render:function(a){a=a.context;a.disable(a.STENCIL_TEST)}};THREE.RenderPass=function(a,b,c,d,e){this.scene=a;this.camera=b;this.overrideMaterial=c;this.clearColor=d;this.clearAlpha=void 0!==e?e:1;this.oldClearColor=new THREE.Color;this.oldClearAlpha=1;this.clear=this.enabled=!0;this.needsSwap=!1};
THREE.RenderPass.prototype={render:function(a,b,c){this.scene.overrideMaterial=this.overrideMaterial;this.clearColor&&(this.oldClearColor.copy(a.getClearColor()),this.oldClearAlpha=a.getClearAlpha(),a.setClearColor(this.clearColor,this.clearAlpha));a.render(this.scene,this.camera,c,this.clear);this.clearColor&&a.setClearColor(this.oldClearColor,this.oldClearAlpha);this.scene.overrideMaterial=null}};THREE.ShaderPass=function(a,b){this.textureID=void 0!==b?b:"tDiffuse";this.uniforms=THREE.UniformsUtils.clone(a.uniforms);this.material=new THREE.ShaderMaterial({uniforms:this.uniforms,vertexShader:a.vertexShader,fragmentShader:a.fragmentShader});this.renderToScreen=!1;this.needsSwap=this.enabled=!0;this.clear=!1};
THREE.ShaderPass.prototype={render:function(a,b,c){this.uniforms[this.textureID]&&(this.uniforms[this.textureID].value=c);THREE.EffectComposer.quad.material=this.material;this.renderToScreen?a.render(THREE.EffectComposer.scene,THREE.EffectComposer.camera):a.render(THREE.EffectComposer.scene,THREE.EffectComposer.camera,b,this.clear)}};THREE.BlendShaderLensflare={uniforms:{tDiffuse:{type:"t",value:null},tLensDirt:{type:"t",value:null},tLensColor:{type:"t",value:null},tLensStar:{type:"t",value:null},artefactScale:{type:"f",value:10},mixRatio:{type:"f",value:0.5},opacity:{type:"f",value:2},tLensStarMatrix:{type:"m4",value:(new THREE.Matrix4).identity()}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D tDiffuse;\nuniform sampler2D tLensDirt;\nuniform sampler2D tLensColor;\nuniform sampler2D tLensStar;\nuniform mat4 tLensStarMatrix;\nvarying vec2 vUv;\nuniform float artefactScale;\nuniform float opacity;\nuniform float mixRatio;\nvoid main() {\nvec4 artefactColor\t= texture2D(tLensDirt, vUv);\nvec2 lensStarUv = (tLensStarMatrix * vec4(vUv.x, vUv.y,0.0,1.0)).xy;\nartefactColor += texture2D(tLensStar, lensStarUv);\nartefactColor *= vec4(vec3(artefactScale, artefactScale, artefactScale), 1.0);\nvec4 texelLensColor = texture2D(tLensColor, vUv) * artefactColor;\nvec4 texelDiffuse = texture2D(tDiffuse, vUv);\ngl_FragColor = opacity * mix(texelDiffuse, texelLensColor, mixRatio );\n}"};THREE.ConvolutionShader={defines:{KERNEL_SIZE_FLOAT:"25.0",KERNEL_SIZE_INT:"25"},uniforms:{tDiffuse:{type:"t",value:null},uImageIncrement:{type:"v2",value:new THREE.Vector2(0.001953125,0)},cKernel:{type:"fv1",value:[]}},vertexShader:"uniform vec2 uImageIncrement;\nvarying vec2 vUv;\nvoid main() {\nvUv = uv - ( ( KERNEL_SIZE_FLOAT - 1.0 ) / 2.0 ) * uImageIncrement;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform float cKernel[ KERNEL_SIZE_INT ];\nuniform sampler2D tDiffuse;\nuniform vec2 uImageIncrement;\nvarying vec2 vUv;\nvoid main() {\nvec2 imageCoord = vUv;\nvec4 sum = vec4( 0.0, 0.0, 0.0, 0.0 );\nfor( int i = 0; i < KERNEL_SIZE_INT; i ++ ) {\nsum += texture2D( tDiffuse, imageCoord ) * cKernel[ i ];\nimageCoord += uImageIncrement;\n}\ngl_FragColor = sum;\n}",
buildKernel:function(a){var b,c,d,e,g=2*Math.ceil(3*a)+1;25<g&&(g=25);e=0.5*(g-1);c=Array(g);for(b=d=0;b<g;++b)c[b]=Math.exp(-((b-e)*(b-e))/(2*a*a)),d+=c[b];for(b=0;b<g;++b)c[b]/=d;return c}};THREE.CopyShader={uniforms:{tDiffuse:{type:"t",value:null},opacity:{type:"f",value:1}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform float opacity;\nuniform sampler2D tDiffuse;\nvarying vec2 vUv;\nvoid main() {\nvec4 texel = texture2D( tDiffuse, vUv );\ngl_FragColor = opacity * texel;\n}"};THREE.LensflareShader={uniforms:{tDiffuse:{type:"t",value:null},tLensColor:{type:"t",value:null},textureSize:{type:"v2",value:new THREE.Vector2(window.innerWidth,window.innerHeight)},center:{type:"v2",value:new THREE.Vector2(0.5,0.5)},uGhostDispersal:{type:"f",value:0.1},uHaloWidth:{type:"f",value:0.25},uDistortion:{type:"f",value:5.5},uThreshold:{type:"f",value:0.2}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",
fragmentShader:"#define MAX_GHOSTS 4\nuniform sampler2D tDiffuse;\nuniform sampler2D tLensColor;\nvarying vec2 vUv;\nuniform vec2 textureSize;\nuniform float uGhostDispersal;\nuniform float uHaloWidth;\nuniform float uDistortion;\nuniform float uThreshold;\nuniform vec2 center;\nvec4 textureDistorted(\n\tin sampler2D texture,\n\tin vec2 uv,\n\tin vec2\tdirection,\n\tin vec3\tdistortion \n) {\n\treturn vec4(\n\t\ttexture2D(texture, uv + direction * distortion.r).r,\n\t\ttexture2D(texture, uv + direction * distortion.g).g,\n\t\ttexture2D(texture, uv + direction * distortion.b).b,\n\t\t1.0\n\t);\n}\nvoid main() {\nvec2 texcoord = -vUv + vec2(1.0, 1.0);\nvec2 ghostVec = (vec2(1.0, 1.0)-center - texcoord) * uGhostDispersal;\ngl_FragColor = vec4(0.0,0.0,0.0,1.0);\nfor(int i = 0; i < MAX_GHOSTS; ++i){\n\tvec2 offset\t= fract(texcoord + ghostVec * float(i));\n\tfloat weight = length(center - offset) / length(center);\n\tweight = pow(max(1.0 - weight, 0.0), 10.0);\ngl_FragColor += texture2D(tDiffuse, offset) * weight;\nif (gl_FragColor.x < uThreshold || gl_FragColor.y < uThreshold || gl_FragColor.z < uThreshold) {\ngl_FragColor.xyz = vec3(0.0,0.0,0.0);\n}\n}\nfloat distance2Center = length(center - vUv) / length(center);\nvec2 uvLensColor = vec2(distance2Center, 1.0);\ngl_FragColor *= texture2D(tLensColor, uvLensColor);\nvec2 texelSize = vec2(1.0, 1.0) / textureSize;\nvec2 haloVec = normalize(ghostVec) * uHaloWidth;\nvec3 distortion = vec3(-texelSize.x * uDistortion, 0.0, texelSize.x * uDistortion);\nfloat weight = length(center - fract(texcoord + haloVec)) / length(center);\nweight\t= pow(max(1.0 - weight, 0.0), 10.0);\ngl_FragColor += textureDistorted(\n\ttDiffuse,\n\tfract(texcoord + haloVec),\n\tnormalize(ghostVec),\n\tdistortion\n) * weight;\n}"};THREE.RadialBlurShader={uniforms:{tDiffuse:{type:"t",value:null},tDepth:{type:"t",value:null},steps:{type:"f",value:40},strength:{type:"f",value:1},expo:{type:"f",value:2},center:{type:"v2",value:new THREE.Vector2(0.5,0.54)}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform float steps;\nuniform float strength;\nuniform float expo;\nuniform sampler2D tDiffuse;\nuniform sampler2D tDepth;\nuniform vec2 center;\nvarying vec2 vUv;\nvoid main() {\nvec2 s = vUv;\nvec3 total = vec3(0.0);\nvec2 d = (center-vUv)/steps;\nfloat w = 1.0;\nfor( int i=0; i<40; i+=1 ) {\nvec3 res = texture2D( tDepth, s).xyz;\nres = smoothstep(0.0,1.0,res);\ntotal += w*res;\nw *= strength;\ns += d;\n}\ntotal /= steps;\nvec3 dif = texture2D( tDiffuse, vUv).xyz;\ngl_FragColor = vec4( mix(total*expo, dif*2.0, 0.5), 1.0);\n}"};var Winter=function(){var a,b,c,d,e,g,f,h,j,i,k,m,l,n,p,r,s,q;function u(){Math.seedrandom(2624121);var b=new THREE.SphereGeometry(1,16,24);b.mergeVertices();for(var c=0;c<b.vertices.length;c++)b.vertices[c].multiplyScalar(1+0.3*Math.sin(4*b.vertices[c].x)),b.vertices[c].multiplyScalar(1+0.1*Math.random()-0.05);b.computeFaceNormals();b.computeVertexNormals();b.computeBoundingSphere();c=a.clone();c.wrapS=THREE.RepeatWrapping;c.wrapT=THREE.RepeatWrapping;c.repeat.x=2;c.repeat.y=1;c.needsUpdate=!0;var d=
new THREE.MeshPhongMaterial({normalMap:c,shininess:15,specular:16736256,emissive:197379});d.normalScale.x=d.normalScale.y=1.75;for(c=0;40>c;c++){var e=new THREE.Vector3(1600*Math.random()-800,0,-580*Math.random()+300);xa.set(e.z,1E3,e.z);ya.set(xa,Ba);var f=ya.intersectObjects([Z,da,R]);0<f.length&&(e.y=f[0].point.y-3);var f=10+20*Math.random(),g=new THREE.Mesh(b,d);g.scale.set(f,f,f);g.position.copy(e);g.rotation.x=2*Math.random()*Math.PI;g.rotation.y=2*Math.random()*Math.PI;g.rotation.z=2*Math.random()*
Math.PI;g.castShadow=!0;g.receiveShadow=!0;B.add(g);aa.push(g)}}function A(){var a=Fa;a.applyMatrix((new THREE.Matrix4).makeScale(20,20,20));var e=b;e.wrapS=THREE.RepeatWrapping;e.wrapT=THREE.RepeatWrapping;var f={texture:{type:"t",value:e},globalTime:{type:"f",value:0},color:{type:"c",value:new THREE.Color(5592405)},alphaTest:{type:"f",value:0.6},light0:{type:"v3",value:new THREE.Vector3(0,60,-500)}},f=new THREE.ShaderMaterial({uniforms:f,vertexShader:"uniform float globalTime;\nvarying vec2 vUv;\nvarying vec3 vNormal;\nvoid main() {\nvUv = uv;\nvNormal = normalize(position);\nvNormal.y = 0.0;\nvNormal = normalize(vNormal);\nvec3 animated = position;\nfloat localTime = position.y + globalTime;\nanimated.x += sin(localTime*10.0)*(position.y*0.004)*1.5;\nanimated.z += cos(localTime*5.0)*(position.y*0.001)*1.5;\nvec4 mvPosition = modelViewMatrix * vec4( animated, 1.0 );\ngl_Position = projectionMatrix * mvPosition;\n}",
fragmentShader:"uniform sampler2D texture;\nuniform vec3 color;\nuniform float alphaTest;\nvarying vec2 vUv;\nvarying vec3 vNormal;\nuniform vec3 light0;\nvoid main() {\nvec4 tex = texture2D( texture, vUv );\nfloat d = pow( max(0.05,dot(vNormal, normalize(light0))), 3.5)*1.0;\nif ( tex.w < alphaTest ) discard;\ngl_FragColor = vec4( color*tex.xyz*d, tex.w);\n}",transparent:!0,side:THREE.DoubleSide}),e=c;e.wrapS=THREE.RepeatWrapping;e.wrapT=THREE.RepeatWrapping;var g=d;g.wrapS=THREE.RepeatWrapping;
g.wrapT=THREE.RepeatWrapping;e=new THREE.MeshPhongMaterial({color:12741154,map:e,normalMap:g,shininess:4,specular:11174985});e.normalScale.x=e.normalScale.y=0.5;fa=new THREE.Mesh(a,new THREE.MeshFaceMaterial([f,e,e]));fa.position.z=300;fa.position.x=80;fa.position.y=20;fa.frustumCulled=!1;B.add(fa)}function t(){var a=Fa,e=b;e.wrapS=THREE.RepeatWrapping;e.wrapT=THREE.RepeatWrapping;var f=new THREE.Fog(0,200,600),e={texture:{type:"t",value:e},globalTime:{type:"f",value:0},color:{type:"c",value:new THREE.Color(1525329)},
alphaTest:{type:"f",value:0.6},light0:{type:"v3",value:new THREE.Vector3(500,-60,-50)},fogColor:{type:"c",value:f.color},fogNear:{type:"f",value:f.near},fogFar:{type:"f",value:f.far}},f=new THREE.ShaderMaterial({uniforms:e,vertexShader:"uniform float globalTime;\nvarying vec2 vUv;\nvarying vec3 vNormal;\nvarying float vLighten;\nvoid main() {\nvUv = uv;\nvNormal = normalize(position);\nvNormal.y = 0.0;\nvNormal = normalize(vNormal);\nvec3 animated = position;\nvLighten = pow( position.y/300.0, 2.0);\nfloat localTime = position.y + globalTime;\nanimated.x += sin(localTime*10.0)*(position.y*0.004)*1.5;\nanimated.z += cos(localTime*5.0)*(position.y*0.001)*1.5;\nvec4 mvPosition = modelViewMatrix * vec4( animated, 1.0 );\ngl_Position = projectionMatrix * mvPosition;\n}",
fragmentShader:"uniform sampler2D texture;\nuniform vec3 color;\nuniform float alphaTest;\nvarying vec2 vUv;\nvarying vec3 vNormal;\nuniform vec3 fogColor;\nuniform float fogNear;\nuniform float fogFar;\nuniform vec3 light0;\nvarying float vLighten;\nvoid main() {\nvec4 tex = texture2D( texture, vUv );\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\nfloat fogFactor = smoothstep( fogNear, fogFar, depth );\nfloat d = pow( max(0.65,dot(vNormal, normalize(light0))), 2.5)*1.0;\nif ( tex.w < alphaTest ) discard;\ngl_FragColor = vec4( mix( color*tex.xyz*d*vLighten, fogColor, fogFactor ), tex.w);\n}",
transparent:!0,side:THREE.DoubleSide}),e=c;e.wrapS=THREE.RepeatWrapping;e.wrapT=THREE.RepeatWrapping;var g=d;g.wrapS=THREE.RepeatWrapping;g.wrapT=THREE.RepeatWrapping;e=new THREE.MeshPhongMaterial({color:1118481,map:e,normalMap:g,shininess:2,specular:3829640});e.normalScale.x=e.normalScale.y=0.95;ia=new THREE.Mesh(a,new THREE.MeshFaceMaterial([f,e,e]));ia.rotation.y=2*Math.random()*Math.PI;ia.rotation.x=0.2*Math.random()-0.1;ia.rotation.z=0.2*Math.random()-0.1;ia.position.z=350;ia.position.y=-80;
ia.frustumCulled=!1;G.add(ia);ma=new THREE.Mesh(a,new THREE.MeshFaceMaterial([f,e,e]));ma.rotation.y=2*Math.random()*Math.PI;ma.rotation.x=0.2*Math.random()-0.1;ma.rotation.z=0.2*Math.random()-0.1;ma.position.z=220;ma.position.x=100;ma.position.y=-20;G.add(ma);la=new THREE.Mesh(a,new THREE.MeshFaceMaterial([f,e,e]));la.rotation.y=2*Math.random()*Math.PI;la.rotation.x=0.2*Math.random()-0.1;la.rotation.z=0.2*Math.random()-0.1;la.position.z=480;la.position.x=50;la.position.y=-40;G.add(la)}function y(a,
b,c,d){var e=a.image.width,f=a.image.height,g=new THREE.Geometry,h=new THREE.Matrix4,i=new THREE.PlaneGeometry(e,f);i.applyMatrix((new THREE.Matrix4).setPosition(new THREE.Vector3(0,0.5*f,0)));for(var j=new THREE.Mesh(i),f=[],e=0;e<b;e++){var k=new THREE.Vector3(0,0,-580*Math.random()+100),l=Math.random();f.push(l);l*=1600;xa.set(l-800,1E3,k.z);ya.set(xa,Ba);var m=ya.intersectObjects([Z,da,R]);0<m.length&&(k.y=m[0].point.y-5);var m=(0.1+0.1*Math.random())*d,n=new THREE.Quaternion;j.position.copy(k);
j.rotation.z=0.15*Math.random()-0.075;j.rotation.y=0.5*Math.random()-0.25;n.setFromEuler(new THREE.Euler(j.rotation.x,j.rotation.y,j.rotation.z));sa.push({x:l,y:k.z,scale:m});h.compose(k,n,new THREE.Vector3(m,m,m));g.merge(i,h)}b=(new THREE.BufferGeometry).fromGeometry(g);c={texture:{type:"t",value:a},globalTime:{type:"f",value:0},color:{type:"c",value:new THREE.Color(c)},alphaTest:{type:"f",value:0.65},depth:{type:"f",value:0},light0:{type:"v3",value:new THREE.Vector3(0,60,-500)},lightDistance:{type:"f",
value:600},move:{type:"f",value:0}};a=new THREE.ShaderMaterial({uniforms:c,vertexShader:"uniform float globalTime;\nuniform float move;\nattribute float time;\nvarying vec2 vUv;\nvarying vec3 vViewPosition;\nvoid main() {\nvUv = uv;\nvec3 animated = position;\nfloat localTime = time + globalTime;\nfloat modTime = mod( localTime, 1.0 );\nfloat accTime = modTime * modTime;\nif (move == 0.0) {\nmodTime = time;\n}\nanimated.x += modTime*1600.0;\nanimated.x += sin(localTime*10.0)*(position.y*0.04);\nanimated.z += cos(localTime*10.0)*(position.y*0.01);\nvec4 mvPosition = modelViewMatrix * vec4( animated, 1.0 );\ngl_Position = projectionMatrix * mvPosition;\nvViewPosition = -mvPosition.xyz;\n}",
fragmentShader:"uniform sampler2D texture;\nuniform vec3 color;\nuniform float alphaTest;\nuniform float depth;\nvarying vec2 vUv;\nvarying vec3 vViewPosition;\nuniform vec3 light0;\nuniform float lightDistance;\nvec4 pack_depth( const in float depth ) {\nconst vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\nconst vec4 bit_mask  = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\nvec4 res = fract( depth * bit_shift );\nres -= res.xxyz * bit_mask;\nreturn res;\n}\nvoid main() {\nvec4 tex = texture2D( texture, vUv );\nvec3 pointDiffuse = vec3( 0.15 );\nvec4 lPosition = viewMatrix * vec4( light0, 1.0 );\nvec3 pointVector = lPosition.xyz + vViewPosition.xyz;\nfloat pointDistance = 1.0;\nif ( lightDistance > 0.0 )\npointDistance = 1.0 - min( ( length( pointVector ) / lightDistance ), 1.0 );\npointVector = normalize( pointVector );\nfloat pointDiffuseWeight = max( dot( vec3(0.0, 0.0, -1.0), pointVector ), 0.0 );\npointDiffuse += (pointDistance * pointDiffuseWeight)*2.5;\nif ( tex.a < alphaTest ) discard;\nif (depth == 0.0) {\ngl_FragColor = vec4( color*tex.xyz*pointDiffuse, tex.w);\n} else {\ngl_FragColor = pack_depth( gl_FragCoord.z );\n}\n}",
transparent:!1});d=new Float32Array(b.attributes.position.count);for(e=0;e<d.length;e+=6)l=f[Math.floor(e/6)],d[e]=l,d[e+1]=l,d[e+2]=l,d[e+3]=l,d[e+4]=l,d[e+5]=l;b.addAttribute("time",new THREE.BufferAttribute(d,1));f={texture:{type:"t",value:c.texture.value},globalTime:{type:"f",value:c.globalTime.value},color:{type:"c",value:new THREE.Color(0)},alphaTest:{type:"f",value:0.8},depth:{type:"f",value:1},move:{type:"f",value:0}};f=new THREE.ShaderMaterial({uniforms:f,vertexShader:"uniform float globalTime;\nuniform float move;\nattribute float time;\nvarying vec2 vUv;\nvarying vec3 vViewPosition;\nvoid main() {\nvUv = uv;\nvec3 animated = position;\nfloat localTime = time + globalTime;\nfloat modTime = mod( localTime, 1.0 );\nfloat accTime = modTime * modTime;\nif (move == 0.0) {\nmodTime = time;\n}\nanimated.x += modTime*1600.0;\nanimated.x += sin(localTime*10.0)*(position.y*0.04);\nanimated.z += cos(localTime*10.0)*(position.y*0.01);\nvec4 mvPosition = modelViewMatrix * vec4( animated, 1.0 );\ngl_Position = projectionMatrix * mvPosition;\nvViewPosition = -mvPosition.xyz;\n}",
fragmentShader:"uniform sampler2D texture;\nuniform vec3 color;\nuniform float alphaTest;\nuniform float depth;\nvarying vec2 vUv;\nvarying vec3 vViewPosition;\nuniform vec3 light0;\nuniform float lightDistance;\nvec4 pack_depth( const in float depth ) {\nconst vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\nconst vec4 bit_mask  = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\nvec4 res = fract( depth * bit_shift );\nres -= res.xxyz * bit_mask;\nreturn res;\n}\nvoid main() {\nvec4 tex = texture2D( texture, vUv );\nvec3 pointDiffuse = vec3( 0.15 );\nvec4 lPosition = viewMatrix * vec4( light0, 1.0 );\nvec3 pointVector = lPosition.xyz + vViewPosition.xyz;\nfloat pointDistance = 1.0;\nif ( lightDistance > 0.0 )\npointDistance = 1.0 - min( ( length( pointVector ) / lightDistance ), 1.0 );\npointVector = normalize( pointVector );\nfloat pointDiffuseWeight = max( dot( vec3(0.0, 0.0, -1.0), pointVector ), 0.0 );\npointDiffuse += (pointDistance * pointDiffuseWeight)*2.5;\nif ( tex.a < alphaTest ) discard;\nif (depth == 0.0) {\ngl_FragColor = vec4( color*tex.xyz*pointDiffuse, tex.w);\n} else {\ngl_FragColor = pack_depth( gl_FragCoord.z );\n}\n}",
transparent:!1,depthTest:!1});e=new THREE.Mesh(b,a);e.customDepthMaterial=f;e.castShadow=!0;e.frustumCulled=!1;e.position.x=-800;return e}function v(a,b,c,d){var e=a.image.width,f=a.image.height,g=new THREE.Geometry,h=new THREE.Matrix4,i=new THREE.PlaneGeometry(e,f);i.applyMatrix((new THREE.Matrix4).setPosition(new THREE.Vector3(0,0.5*f,0)));for(var j=new THREE.Mesh(i),f=[],e=0;e<b;e++){var k=2*e/b*Math.PI,l=200+400*Math.random(),l=new THREE.Vector3(Math.sin(k)*l,0,Math.cos(k)*l),k=Math.random();
f.push(k);var k=(0.1+0.1*Math.random())*d,m=new THREE.Quaternion;j.position.copy(l);j.lookAt(new THREE.Vector3(0,0,0));j.rotation.y+=0.5*Math.random()-0.25;m.setFromEuler(new THREE.Euler(j.rotation.x,j.rotation.y,j.rotation.z));h.compose(l,m,new THREE.Vector3(k,k,k));g.merge(i,h)}g.computeVertexNormals();g.computeFaceNormals();b=(new THREE.BufferGeometry).fromGeometry(g);c={texture:{type:"t",value:a},globalTime:{type:"f",value:0},color:{type:"c",value:new THREE.Color(c)},alphaTest:{type:"f",value:0.65},
depth:{type:"f",value:0},light0:{type:"v3",value:new THREE.Vector3(0,300,350)},lightDistance:{type:"f",value:260}};a=new THREE.ShaderMaterial({uniforms:c,vertexShader:"uniform float globalTime;\nattribute float time;\nvarying vec2 vUv;\nvarying vec3 vNormal;\nvarying vec3 vViewPosition;\nvoid main() {\nvUv = uv;\nvNormal = normal;\nvec3 animated = position;\nfloat localTime = time + globalTime;\nfloat modTime = mod( localTime, 1.0 );\nfloat accTime = modTime * modTime;\nanimated.x += sin(localTime*10.0)*(position.y*0.04);\nanimated.z += cos(localTime*10.0)*(position.y*0.01);\nvec4 mvPosition = modelViewMatrix * vec4( animated, 1.0 );\ngl_Position = projectionMatrix * mvPosition;\nvViewPosition = -mvPosition.xyz;\n}",
fragmentShader:"uniform sampler2D texture;\nuniform vec3 color;\nuniform float alphaTest;\nuniform float depth;\nvarying vec2 vUv;\nvarying vec3 vNormal;\nvarying vec3 vViewPosition;\nuniform vec3 light0;\nuniform float lightDistance;\nvec4 pack_depth( const in float depth ) {\nconst vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\nconst vec4 bit_mask  = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\nvec4 res = fract( depth * bit_shift );\nres -= res.xxyz * bit_mask;\nreturn res;\n}\nvoid main() {\nvec4 tex = texture2D( texture, vUv );\nvec3 pointDiffuse = vec3( 0.15 );\nvec4 lPosition = viewMatrix * vec4( light0, 1.0 );\nvec3 pointVector = lPosition.xyz + vViewPosition.xyz;\nfloat pointDistance = 1.0;\nif ( lightDistance > 0.0 )\npointDistance = 1.0 - min( ( length( pointVector ) / lightDistance ), 1.0 );\npointVector = normalize( pointVector );\nfloat pointDiffuseWeight = max( dot( vec3(1.0), pointVector ), 0.0 );\npointDiffuse += (pointDistance * pointDiffuseWeight)*1.0;\nif ( tex.a < alphaTest ) discard;\nif (depth == 0.0) {\ngl_FragColor = vec4( color*tex.xyz*pointDiffuse, tex.w);\n} else {\ngl_FragColor = pack_depth( gl_FragCoord.z );\n}\n}",
transparent:!1});d=new Float32Array(b.attributes.position.count);for(e=0;e<d.length;e+=6)k=f[Math.floor(e/6)],d[e]=k,d[e+1]=k,d[e+2]=k,d[e+3]=k,d[e+4]=k,d[e+5]=k;b.addAttribute("time",new THREE.BufferAttribute(d,1));f={texture:{type:"t",value:c.texture.value},globalTime:{type:"f",value:c.globalTime.value},color:{type:"c",value:new THREE.Color(0)},alphaTest:{type:"f",value:0.8},depth:{type:"f",value:1}};f=new THREE.ShaderMaterial({uniforms:f,vertexShader:"uniform float globalTime;\nattribute float time;\nvarying vec2 vUv;\nvarying vec3 vNormal;\nvarying vec3 vViewPosition;\nvoid main() {\nvUv = uv;\nvNormal = normal;\nvec3 animated = position;\nfloat localTime = time + globalTime;\nfloat modTime = mod( localTime, 1.0 );\nfloat accTime = modTime * modTime;\nanimated.x += sin(localTime*10.0)*(position.y*0.04);\nanimated.z += cos(localTime*10.0)*(position.y*0.01);\nvec4 mvPosition = modelViewMatrix * vec4( animated, 1.0 );\ngl_Position = projectionMatrix * mvPosition;\nvViewPosition = -mvPosition.xyz;\n}",
fragmentShader:"uniform sampler2D texture;\nuniform vec3 color;\nuniform float alphaTest;\nuniform float depth;\nvarying vec2 vUv;\nvarying vec3 vNormal;\nvarying vec3 vViewPosition;\nuniform vec3 light0;\nuniform float lightDistance;\nvec4 pack_depth( const in float depth ) {\nconst vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\nconst vec4 bit_mask  = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\nvec4 res = fract( depth * bit_shift );\nres -= res.xxyz * bit_mask;\nreturn res;\n}\nvoid main() {\nvec4 tex = texture2D( texture, vUv );\nvec3 pointDiffuse = vec3( 0.15 );\nvec4 lPosition = viewMatrix * vec4( light0, 1.0 );\nvec3 pointVector = lPosition.xyz + vViewPosition.xyz;\nfloat pointDistance = 1.0;\nif ( lightDistance > 0.0 )\npointDistance = 1.0 - min( ( length( pointVector ) / lightDistance ), 1.0 );\npointVector = normalize( pointVector );\nfloat pointDiffuseWeight = max( dot( vec3(1.0), pointVector ), 0.0 );\npointDiffuse += (pointDistance * pointDiffuseWeight)*1.0;\nif ( tex.a < alphaTest ) discard;\nif (depth == 0.0) {\ngl_FragColor = vec4( color*tex.xyz*pointDiffuse, tex.w);\n} else {\ngl_FragColor = pack_depth( gl_FragCoord.z );\n}\n}",
transparent:!1,depthTest:!1});e=new THREE.Mesh(b,a);e.customDepthMaterial=f;e.castShadow=!0;e.frustumCulled=!1;e.position.z=350;return e}function w(){for(var a={color:{type:"c",value:new THREE.Color(16777215)},globalTime:{type:"f",value:0},size:{type:"f",value:1},move:{type:"f",value:0}},a=new THREE.ShaderMaterial({uniforms:a,vertexShader:"attribute float time;\nuniform float globalTime;\nuniform float size;\nuniform float move;\nvarying float vAlpha;\nvoid main() {\nvec3 pos = position;\nfloat localTime = time + globalTime;\nfloat modTime = mod( localTime, 1.0 );\nfloat accTime = modTime * modTime;\nif (move == 0.0) {\nmodTime = time;\n}\npos.x += mod( modTime, 1.0 )*1600.0;\npos.y += mod( time*16.0, 1.0 )*400.0;\npos.y += accTime*100.0;\npos.z += cos(time*60.0 + (position.z))*100.0;\npos.x += sin(time*120.0 + (pos.y*0.01))*100.0;\nvAlpha = sin(localTime*30.0 + (pos.y*0.1))*0.3 + 0.15;\nvec4 mvPosition = modelViewMatrix * vec4( pos, 1.0 );\ngl_PointSize = size;\ngl_Position = projectionMatrix * mvPosition;\n}",
fragmentShader:"uniform vec3 color;\nvarying float vAlpha;\nvoid main() {\ngl_FragColor = vec4(color, vAlpha*0.55);\n}",transparent:!0}),b=new Float32Array(15E3),c=new Float32Array(5E3),d=new THREE.Vector3,e=0;5E3>e;e++)d.x=0,d.y=0,d.z=-500*Math.random()+250,d.toArray(b,3*e),c[e]=Math.random();d=new THREE.BufferGeometry;d.addAttribute("position",new THREE.BufferAttribute(b,3));d.addAttribute("time",new THREE.BufferAttribute(c,1));ea=new THREE.Points(d,a);ea.position.x=-800;ea.frustumCulled=!1;B.add(ea)}
function x(a){var b=document.createElement("canvas");b.width=32;b.height=32;var c=b.getContext("2d"),b=new Float32Array(1024);c.drawImage(a,0,0);for(a=0;1024>a;a++)b[a]=0;for(var c=c.getImageData(0,0,32,32).data,d=0,a=0,e=c.length;a<e;a+=4){var f=c[a]+c[a+1]+c[a+2];b[d++]=2.5*f}return b}function K(a){ga.visible=!0;ga.material.opacity=0;ga.alphaTweenIn=(new TWEEN.Tween(ga.material)).to({opacity:1},2E3).easing(TWEEN.Easing.Quadratic.Out).onComplete(function(){Y=a;1==Y&&F();2==Y&&C();3==Y&&J();if(4==
Y){var b=document.getElementById("end_credits");b.style.display="block";b.style.opacity=0.01;(new TWEEN.Tween(b.style)).to({opacity:1},4E3).easing(TWEEN.Easing.Quadratic.In).start()}});ga.alphaTweenOut=(new TWEEN.Tween(ga.material)).to({opacity:0},2E3).easing(TWEEN.Easing.Quadratic.In).onComplete(function(){ga.visible=!1});ga.alphaTweenIn.chain(ga.alphaTweenOut);ga.alphaTweenIn.start()}function F(){D.position.x=120;D.position.z=400;D.position.y=370;B.fog=new THREE.Fog(16382423,800,1E3);for(var a=
0;a<U.length;a++){var b=U[a];b.material.uniforms.move.value=0;b.customDepthMaterial.uniforms.move.value=0}ea.material.uniforms.move.value=0;H.passes[1].clear=!0;H.passes[0].enabled=!1;H.passes[3].enabled=!1;H.passes[4].enabled=!1}function C(){D.position.x=0;D.position.z=400;D.position.y=70;B.fog=new THREE.Fog(16382423,800,1E3);for(var a=0;a<U.length;a++){var b=U[a];b.material.uniforms.move.value=1;b.customDepthMaterial.uniforms.move.value=1}fa&&B.remove(fa);if(0>=na.length){a=new THREE.CylinderGeometry(2,
10,500,14,30,!0);a.applyMatrix((new THREE.Matrix4).setPosition(new THREE.Vector3(0,250,0)));a.mergeVertices();for(b=0;b<a.vertices.length;b++)a.vertices[b].x+=4*Math.random()-2,a.vertices[b].y+=4*Math.random()-2,a.vertices[b].z+=4*Math.random()-2;a.computeVertexNormals();a.computeFaceNormals();b=c.clone();b.wrapS=THREE.RepeatWrapping;b.wrapT=THREE.RepeatWrapping;b.repeat.x=2;b.repeat.y=5;b.needsUpdate=!0;var e=d.clone();e.wrapS=THREE.RepeatWrapping;e.wrapT=THREE.RepeatWrapping;e.repeat.x=2;e.repeat.y=
5;e.needsUpdate=!0;e=new THREE.MeshPhongMaterial({map:b,normalMap:e,shininess:5,specular:11174985});for(b=0;10>b;b++){var f=new THREE.Mesh(a,e);f.position.x=100*b-500;f.position.z=180+200*Math.random();f.rotation.x=0.25*Math.random()-0.125;f.rotation.z=0.25*Math.random()-0.125;f.rotation.y=2*Math.random()*Math.PI;var g=0.4+0.6*Math.random();f.scale.set(g,g,g);f.castShadow=!0;f.receiveShadow=!0;B.add(f);na.push(f)}}ea.material.uniforms.move.value=1;H.passes[1].clear=!0;H.passes[0].enabled=!1;H.passes[3].enabled=
!1;H.passes[4].enabled=!1}function J(){S=13E3;z.shadowMap.enabled=!1;W.position.set(500,60,-50);W.intensity=0.5;D.position.z=400;D.position.y=370;B.fog=new THREE.Fog(6523031,400,1E3);B.fog.color.offsetHSL(0,0,-0.35);for(var a=ea.material.uniforms.move.value=0;a<U.length;a++){var b=U[a];b.visible=!1}for(a=0;a<na.length;a++)b=na[a],b.visible=!1;for(a=0;a<aa.length;a++)aa[a].visible=!1;ka.visible=!1;va.visible=!1;P.visible=!1;Z.visible=!1;da.visible=!1;R.visible=!1;fa&&B.remove(fa);G.visible=!0;H.passes[1].clear=
!1;H.passes[0].enabled=!0;H.passes[2].enabled=!1;H.passes[3].enabled=!0;H.passes[4].enabled=!0;H.passes[5].enabled=!1}var I={},L,D,B,z,H,Q,O,M,E,ta,S=1E4,ja=0,ra=0,ca=0,Y=1,ha=!1,pa=[{time:43E3,show:2,done:!1},{time:79E3,show:3,done:!1},{time:119E3,show:4,done:!1},{time:3E5,show:4,done:!1}],U=[],X=[],na=[],aa=[],fa,ia,ma,la,Z,da,R,ka,va,ya=new THREE.Raycaster,oa=new THREE.Vector3(0,50,0),W,Da,Aa,T,ba,wa,Ca,xa=new THREE.Vector3,Ba=new THREE.Vector3(0,-1,0),o=new THREE.Vector3,ea,P,sa=[],G,V=new Image;
V.onload=function(){Da=x(this);Ha()};V.src="assets/height0.png";var Ea="ontouchstart"in document||null!=navigator.userAgent.match(/ipad|iphone|android/i),za=null!=navigator.userAgent.match(/ipad|iphone/i),ga,Fa;q=s=r=p=n=l=m=k=i=j=h=f=g=e=d=c=b=a=void 0;var qa=0,ua;I.init=function(){L=document.createElement("div");document.body.appendChild(L);Math.seedrandom(35148451);D=new THREE.PerspectiveCamera(50,window.innerWidth/window.innerHeight,1,1E4);D.position.z=400;D.position.y=370;D.lookAt(oa);z=new THREE.WebGLRenderer({antialias:!1});
B=new THREE.Scene;B.fog=new THREE.Fog(16382423,800,1E3);B.add(D);G=new THREE.Object3D;B.add(G);G.visible=!1;var b=new THREE.MeshBasicMaterial({color:0,depthTest:!1,fog:!1,transparent:!0,opacity:1});ga=new THREE.Mesh(new THREE.PlaneGeometry(1E3,1E3),b);ga.position.z=-2;D.add(ga);Q=new THREE.PerspectiveCamera(80,window.innerWidth/window.innerHeight,1,100);O=new THREE.Scene;var c=THREE.ImageUtils.loadTextureCube("assets/cubemap/px.png assets/cubemap/nx.png assets/cubemap/py.png assets/cubemap/ny.png assets/cubemap/pz.png assets/cubemap/nz.png".split(" "));
c.format=THREE.RGBFormat;b=THREE.ShaderLib.cube;b.uniforms.tCube.value=c;b=new THREE.ShaderMaterial({fragmentShader:b.fragmentShader,vertexShader:b.vertexShader,uniforms:b.uniforms,depthWrite:!1,side:THREE.BackSide});c=new THREE.Mesh(new THREE.BoxGeometry(100,100,100),b);O.add(c);for(var c=new THREE.PlaneGeometry(5E3,5E3,60,60),b=0,d=c.vertices.length;b<d;b++)c.vertices[b].z+=30*Math.random()-15;c.computeFaceNormals();c.computeVertexNormals();d=ry=100;b=a.clone();b.wrapS=THREE.RepeatWrapping;b.wrapT=
THREE.RepeatWrapping;b.repeat.x=d;b.repeat.y=ry;b.needsUpdate=!0;b=new THREE.MeshPhongMaterial({wireframe:!1,color:4473924,normalMap:b,shininess:15,specular:9891839,emissive:0});b.normalScale.x=b.normalScale.y=3.75;c=new THREE.Mesh(c,b);c.rotation.x=0.5*-Math.PI;c.position.y=10;G.add(c);c=new THREE.CylinderGeometry(5E3,5E3,1200,20,1,!0);c.applyMatrix((new THREE.Matrix4).setPosition(new THREE.Vector3(0,610,0)));b=new THREE.MeshBasicMaterial({color:6523031,map:e,opacity:0.25,transparent:!0,side:THREE.BackSide,
fog:!1});c=new THREE.Mesh(c,b);G.add(c);var c=new THREE.PlaneGeometry(800,800,31,31),o=[];Da=x(V);b=0;for(d=c.vertices.length;b<d;b++)c.vertices[b].z=Da[b]/40,b>=d-32&&(c.vertices[b].z=o[b-(d-32)]),32>=b&&o.push(Da[b]/40);c.applyMatrix((new THREE.Matrix4).makeRotationFromEuler(new THREE.Euler(0,0,0.5*Math.PI)));c.applyMatrix((new THREE.Matrix4).makeRotationFromEuler(new THREE.Euler(0.5*-Math.PI,0,0)));c.computeFaceNormals();c.computeVertexNormals();d=ry=12;b=a;b.wrapS=THREE.RepeatWrapping;b.wrapT=
THREE.RepeatWrapping;b.repeat.x=d;b.repeat.y=ry;d=new THREE.MeshPhongMaterial({normalMap:b,shininess:15,specular:16736256,emissive:197379});d.normalScale.x=d.normalScale.y=1.75;o=new THREE.MeshPhongMaterial({normalMap:b,shininess:15,specular:16736256,emissive:197379});o.normalScale.x=o.normalScale.y=1.75;b=new THREE.MeshPhongMaterial({normalMap:b,shininess:15,specular:16736256,emissive:197379});b.normalScale.x=b.normalScale.y=1.75;Z=new THREE.Mesh(c,d);Z.scale.x=1;Z.position.x=-400;B.add(Z);Z.castShadow=
!1;Z.receiveShadow=!0;da=new THREE.Mesh(c,o);da.position.x=400;B.add(da);da.castShadow=!1;da.receiveShadow=!0;R=new THREE.Mesh(c,b);R.position.x=1200;B.add(R);R.castShadow=!1;R.receiveShadow=!0;Z.frustumCulled=!1;da.frustumCulled=!1;R.frustumCulled=!1;c=new THREE.SphereGeometry(1E3,10,10);c.scale(-1,1,1);b=new THREE.MeshBasicMaterial({map:g,fog:!1,color:10915972,depthWrite:!1});b.map.wrapS=THREE.MirroredRepeatWrapping;b.map.wrapT=THREE.MirroredRepeatWrapping;b.map.repeat.y=2;b.map.offset.y=1;ka=new THREE.Mesh(c,
b);ka.rotation.y=-1.6;ka.frustumCulled=!1;B.add(ka);b=new THREE.MeshBasicMaterial({color:3355443,map:f,fog:!1,transparent:!0});va=new THREE.Mesh(new THREE.PlaneGeometry(2500,512),b);va.position.set(0,-50,-600);va.frustumCulled=!1;B.add(va);b=new THREE.MeshBasicMaterial({color:16777215,map:h,fog:!1,transparent:!0,blending:THREE.AdditiveBlending});P=new THREE.Mesh(new THREE.PlaneGeometry(512,512),b);P.position.set(0,80,-500);P.frustumCulled=!1;B.add(P);c=y(j,10,1844009,1.5);B.add(c);U.push(c);c=y(i,
20,1844009,1.5);B.add(c);U.push(c);c=y(k,20,1844009,1.5);B.add(c);U.push(c);c=y(m,20,1844009,1);B.add(c);U.push(c);c=y(l,20,1844009,1.5);B.add(c);U.push(c);c=y(n,20,1844009,1);B.add(c);U.push(c);c=y(p,20,5726313,0.8);B.add(c);U.push(c);w();A();t();u();c=v(j,30,1452588,1.5);G.add(c);X.push(c);c=v(i,50,1452588,1.5);G.add(c);X.push(c);c=v(k,50,1452588,2.5);G.add(c);X.push(c);c=v(m,30,1452588,2.5);G.add(c);X.push(c);c=v(l,30,1452588,1.5);G.add(c);X.push(c);c=v(n,30,1452588,1.5);G.add(c);X.push(c);c=new THREE.AmbientLight(725016);
B.add(c);W=new THREE.DirectionalLight(16777215,1);W.position.set(0,80,-550);W.castShadow=!0;W.shadowMapWidth=2048;W.shadowMapHeight=1024;W.shadowCameraLeft=-480;W.shadowCameraRight=480;W.shadowCameraTop=140;W.shadowCameraBottom=-70;W.shadowCameranear=1;W.shadowCameraFar=950;W.shadowDarkness=1;W.shadowBias=0.01;B.add(W);z.shadowMap.enabled=!0;z.shadowMap.type=THREE.PCFSoftShadowMap;z.setClearColor(0);z.setPixelRatio(window.devicePixelRatio);z.setSize(window.innerWidth,window.innerHeight,!0);L.appendChild(z.domElement);
z.domElement.style.position="absolute";z.domElement.style.top="0px";z.domElement.style.left="0px";o={minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBFormat};ba=new THREE.WebGLRenderTarget(0.5*window.innerWidth,0.5*window.innerHeight,o);z.autoClear=!1;c=new THREE.RenderPass(B,D);Aa=new THREE.ShaderPass(THREE.RadialBlurShader);Aa.uniforms.tDepth.value=ba;b=new THREE.RenderPass(O,Q);T=new THREE.BloomPass(0.85);d=new THREE.ShaderPass(THREE.CopyShader);d.renderToScreen=!0;wa=
new THREE.ShaderPass(THREE.LensflareShader);wa.uniforms.tLensColor.value=r;wa.uniforms.textureSize.value=new THREE.Vector2(window.innerWidth,window.innerHeight);o={minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBFormat,stencilBuffer:!1};o=new THREE.WebGLRenderTarget(0.5*window.innerWidth,0.5*window.innerHeight,o);lensComposer=new THREE.EffectComposer(z,o);lensComposer.setSize(0.5*window.innerWidth,0.5*window.innerHeight);lensComposer.addPass(c);lensComposer.addPass(wa);Ca=
new THREE.ShaderPass(THREE.BlendShaderLensflare);Ca.uniforms.tLensColor.value=lensComposer.renderTarget1;Ca.uniforms.tLensDirt.value=s;Ca.uniforms.tLensStar.value=q;Ca.renderToScreen=!0;H=new THREE.EffectComposer(z);H.setSize(window.innerWidth,window.innerHeight);H.addPass(b);H.addPass(c);H.addPass(Aa);H.addPass(T);H.addPass(d);H.addPass(Ca);window.addEventListener("resize",La,!1);window.onfocus=function(){if(ha){var a=Date.now();ja+=a-ra;ua.play();ha=!1;Ga()}};window.onblur=function(){ua.pause();
ha=!0;ra=Date.now()};1==Y&&F();2==Y&&C();3==Y&&J()};var Ha=function(){g=THREE.ImageUtils.loadTexture("assets/0839-Cloudy-Dawn.jpg",void 0,$);a=THREE.ImageUtils.loadTexture("assets/977-normal.jpg",void 0,$);c=THREE.ImageUtils.loadTexture("assets/6824-diffuse.jpg",void 0,$);d=THREE.ImageUtils.loadTexture("assets/6824-normal.jpg",void 0,$);b=THREE.ImageUtils.loadTexture("assets/branch.png",void 0,$);e=THREE.ImageUtils.loadTexture("assets/gradient.png",void 0,$);THREE.ImageUtils.loadTexture("assets/height0.png",
void 0,$);r=THREE.ImageUtils.loadTexture("assets/lenscolor.png",void 0,$);s=THREE.ImageUtils.loadTexture("assets/lensdirt4.jpg",void 0,$);q=THREE.ImageUtils.loadTexture("assets/lensstar.png",void 0,$);f=THREE.ImageUtils.loadTexture("assets/mountain.png",void 0,$);h=THREE.ImageUtils.loadTexture("assets/sun2.png",void 0,$);p=THREE.ImageUtils.loadTexture("assets/tree3.png",void 0,$);j=THREE.ImageUtils.loadTexture("assets/tree4.png",void 0,$);i=THREE.ImageUtils.loadTexture("assets/tree5.png",void 0,$);
k=THREE.ImageUtils.loadTexture("assets/tree6.png",void 0,$);m=THREE.ImageUtils.loadTexture("assets/tree7.png",void 0,$);THREE.ImageUtils.loadTexture("assets/tree8.png",void 0,$);l=THREE.ImageUtils.loadTexture("assets/tree9.png",void 0,$);n=THREE.ImageUtils.loadTexture("assets/tree10.png",void 0,$);(new THREE.JSONLoader).load("assets/pine.js",function(a){Fa=a;$()});za||Ia()},Ia=function(){if(void 0!=Audio){var a="ogg";(new Audio).canPlayType("audio/mp3")&&(a="mp3");ua=new Audio("assets/audio."+a);
ua.volume=0.8;ua.load();ua.addEventListener("loadeddata",function(){za||$()},!1)}},$=function(){++qa;var a=22;za&&(a=21);qa>=a&&(I.init(),Ka())},Ka=function(){var a=document.getElementById("loading_spinner");a.style.opacity=1;var b=document.getElementById("winter");b.style.opacity=1;Ea?(a.style.display="none",b.style.display="none",document.getElementById("touch_start").style.display="block",document.addEventListener("touchstart",Ja,!1)):((new TWEEN.Tween(a.style)).to({opacity:0.1},1E3).easing(TWEEN.Easing.Quadratic.In).delay(250).onComplete(function(){a.style.display=
"none"}).start(),(new TWEEN.Tween(b.style)).to({opacity:0.1},1E3).easing(TWEEN.Easing.Quadratic.In).delay(250).onComplete(function(){b.style.display="none"}).start(),I.start())};I.start=function(){ca=Date.now();ua&&ua.play();Ga();ga.alphaTween=(new TWEEN.Tween(ga.material)).to({opacity:0},5E3).easing(TWEEN.Easing.Quadratic.Out).delay(1500).onComplete(function(){ga.visible=!1});ga.alphaTween.start()};var Ga=function(){if(!ha){requestAnimationFrame(Ga);E=Date.now()-ca-S-ja;M=E-ta;ta=E;if(isNaN(M)||
1E3<M||0==M)M=1E3/60;var a;a=ua?1E3*ua.currentTime:E-ca;a>=pa[0].time&&!pa[0].done&&(a=pa.shift(),a.done=!0,K(a.show));TWEEN.update();if(1==Y){oa.x=100+60*Math.sin(2.0E-4*E);a=160+40*Math.sin(5.0E-4*E);oa.y=a;D.position.y=240+120*Math.sin(1.0E-4*E);D.lookAt(oa);D.up.x=0.1*Math.sin(3.0E-4*E);a=0.1*M;for(var b=0;b<U.length;b++){var c=U[b];c.material.uniforms.globalTime.value-=a/1600;c.customDepthMaterial.uniforms.globalTime.value=c.material.uniforms.globalTime.value}fa&&(fa.material.materials[0].uniforms.globalTime.value-=
1.0E-4*M);ea&&(ea.material.uniforms.globalTime.value-=1.0E-4*M)}if(2==Y){P.position.y-=0.001*M;W.position.y-=0.001*M;W.shadow.camera.updateProjectionMatrix();W.intensity-=1.2E-5*M;ka.material.color.offsetHSL(0,0,1.0E-5*-M);oa.x=60*Math.sin(2.0E-4*E);a=60+40*Math.sin(5.0E-4*E);oa.y=a;D.lookAt(oa);D.up.x=0.25*Math.sin(1.0E-4*E);a=0.1*M;for(b=0;b<U.length;b++)c=U[b],c.material.uniforms.globalTime.value-=a/1600,c.customDepthMaterial.uniforms.globalTime.value=c.material.uniforms.globalTime.value;for(b=
0;b<na.length;b++)c=na[b],c.position.x-=a,-500>c.position.x&&(c.position.x+=1E3,c.position.z=180+200*Math.random());for(b=0;b<aa.length;b++)c=aa[b],c.position.x-=a,-800>c.position.x&&(c.position.x+=1600);ea&&(ea.material.uniforms.globalTime.value-=a/1600);Z.position.x-=a;da.position.x-=a;R.position.x-=a;-1200>Z.position.x&&(Z.position.x+=2400);-1200>da.position.x&&(da.position.x+=2400);-1200>R.position.x&&(R.position.x+=2400)}if(3==Y){D.position.x=120*Math.sin(1.0E-4*E);D.position.z=350+140*Math.cos(1.0E-4*
E);oa.x=50*Math.sin(1.0E-4*E);oa.z=350+50*Math.sin(1.0E-4*E);a=170+50*Math.sin(2.0E-4*E);oa.y=a;D.position.y=50+20*Math.sin(1.0E-4*E);D.lookAt(oa);D.up.x=0.25*Math.sin(1.0E-4*E);T.copyUniforms.opacity.value=0.95+0.5*Math.random();a=0.1*M;for(b=0;b<X.length;b++)c=X[b],c.material.uniforms.globalTime.value-=a/1600,c.customDepthMaterial.uniforms.globalTime.value=c.material.uniforms.globalTime.value;ea&&(ea.material.uniforms.globalTime.value-=5.0E-4*M);ia&&(ia.material.materials[0].uniforms.globalTime.value-=
5.0E-4*M)}4!=Y&&(3!=Y&&(P.rotation.z+=1.0E-4*M,o.setFromMatrixPosition(P.matrixWorld),o.project(D),Aa.uniforms.center.value.x=0.5*(o.x+1),Aa.uniforms.center.value.y=0.5*(o.y+1),wa.uniforms.center.value.x=0.3*(o.x+1)+0.2,wa.uniforms.center.value.y=0.3*(o.y+1)+0.2),3==Y?(z.clear(),Q.rotation.z+=1.0E-4*M,Q.rotation.y-=5.0E-5*M):(z.clear(),z.shadowMap.enabled=!0,ea.visible=!1,Z.material.color.setRGB(0,0,0),da.material.color.setRGB(0,0,0),R.material.color.setRGB(0,0,0),ka.visible=!1,aa[0].material.color.setHex(0),
z.render(B,D,ba,!0),Z.material.color.setRGB(1,1,1),da.material.color.setRGB(1,1,1),R.material.color.setRGB(1,1,1),ka.visible=!0,aa[0].material.color.setHex(16777215),z.shadowMap.enabled=!1,fa.visible=!1,lensComposer.render(),ea.visible=!0,fa.visible=!0),H.render())}},La=function(){var a=window.innerWidth,b=window.innerHeight;z.setSize(a,b);D.aspect=a/b;D.updateProjectionMatrix();Q.aspect=a/b;Q.updateProjectionMatrix();H.reset();H.setSize(a,b)},Ja=function(a){a.preventDefault();za&&Ia();I.start();
document.getElementById("touch_start").style.display="none";document.removeEventListener("touchstart",Ja,!1)};return I}();
